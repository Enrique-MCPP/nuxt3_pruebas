{"ast":null,"code":"import { DomHandler, ObjectUtils } from 'primevue/utils';\n\nfunction bind(el, binding) {\n  const {\n    onFocusIn,\n    onFocusOut\n  } = binding.value || {};\n  el.$_pfocustrap_mutationobserver = new MutationObserver(mutationList => {\n    mutationList.forEach(mutation => {\n      if (mutation.type === 'childList' && !el.contains(document.activeElement)) {\n        const findNextFocusableElement = el => {\n          const focusableElement = DomHandler.isFocusableElement(el) ? el : DomHandler.getFirstFocusableElement(el);\n          return ObjectUtils.isNotEmpty(focusableElement) ? focusableElement : findNextFocusableElement(el.nextSibling);\n        };\n\n        DomHandler.focus(findNextFocusableElement(mutation.nextSibling));\n      }\n    });\n  });\n  el.$_pfocustrap_mutationobserver.disconnect();\n  el.$_pfocustrap_mutationobserver.observe(el, {\n    childList: true\n  });\n\n  el.$_pfocustrap_focusinlistener = event => onFocusIn && onFocusIn(event);\n\n  el.$_pfocustrap_focusoutlistener = event => onFocusOut && onFocusOut(event);\n\n  el.addEventListener('focusin', el.$_pfocustrap_focusinlistener);\n  el.addEventListener('focusout', el.$_pfocustrap_focusoutlistener);\n}\n\nfunction unbind(el) {\n  el.$_pfocustrap_mutationobserver && el.$_pfocustrap_mutationobserver.disconnect();\n  el.$_pfocustrap_focusinlistener && el.removeEventListener('focusin', el.$_pfocustrap_focusinlistener) && (el.$_pfocustrap_focusinlistener = null);\n  el.$_pfocustrap_focusoutlistener && el.removeEventListener('focusout', el.$_pfocustrap_focusoutlistener) && (el.$_pfocustrap_focusoutlistener = null);\n}\n\nfunction autoFocus(el, binding) {\n  const {\n    autoFocusSelector = '',\n    firstFocusableSelector = '',\n    autoFocus = false\n  } = binding.value || {};\n  let focusableElement = DomHandler.getFirstFocusableElement(el, `[autofocus]:not(.p-hidden-focusable)${autoFocusSelector}`);\n  autoFocus && !focusableElement && (focusableElement = DomHandler.getFirstFocusableElement(el, `:not(.p-hidden-focusable)${firstFocusableSelector}`));\n  DomHandler.focus(focusableElement);\n}\n\nfunction onFirstHiddenElementFocus(event) {\n  const {\n    currentTarget,\n    relatedTarget\n  } = event;\n  const focusableElement = relatedTarget === currentTarget.$_pfocustrap_lasthiddenfocusableelement ? DomHandler.getFirstFocusableElement(currentTarget.parentElement, `:not(.p-hidden-focusable)${currentTarget.$_pfocustrap_focusableselector}`) : currentTarget.$_pfocustrap_lasthiddenfocusableelement;\n  DomHandler.focus(focusableElement);\n}\n\nfunction onLastHiddenElementFocus(event) {\n  const {\n    currentTarget,\n    relatedTarget\n  } = event;\n  const focusableElement = relatedTarget === currentTarget.$_pfocustrap_firsthiddenfocusableelement ? DomHandler.getLastFocusableElement(currentTarget.parentElement, `:not(.p-hidden-focusable)${currentTarget.$_pfocustrap_focusableselector}`) : currentTarget.$_pfocustrap_firsthiddenfocusableelement;\n  DomHandler.focus(focusableElement);\n}\n\nfunction createHiddenFocusableElements(el, binding) {\n  const {\n    tabIndex = 0,\n    firstFocusableSelector = '',\n    lastFocusableSelector = ''\n  } = binding.value || {};\n\n  const createFocusableElement = onFocus => {\n    const element = document.createElement('span');\n    element.classList = 'p-hidden-accessible p-hidden-focusable';\n    element.tabIndex = tabIndex;\n    element.setAttribute('aria-hidden', 'true');\n    element.setAttribute('role', 'presentation');\n    element.addEventListener('focus', onFocus);\n    return element;\n  };\n\n  const firstFocusableElement = createFocusableElement(onFirstHiddenElementFocus);\n  const lastFocusableElement = createFocusableElement(onLastHiddenElementFocus);\n  firstFocusableElement.$_pfocustrap_lasthiddenfocusableelement = lastFocusableElement;\n  firstFocusableElement.$_pfocustrap_focusableselector = firstFocusableSelector;\n  lastFocusableElement.$_pfocustrap_firsthiddenfocusableelement = firstFocusableElement;\n  lastFocusableElement.$_pfocustrap_focusableselector = lastFocusableSelector;\n  el.prepend(firstFocusableElement);\n  el.append(lastFocusableElement);\n}\n\nconst FocusTrap = {\n  mounted(el, binding) {\n    const {\n      disabled\n    } = binding.value || {};\n\n    if (!disabled) {\n      createHiddenFocusableElements(el, binding);\n      bind(el, binding);\n      autoFocus(el, binding);\n    }\n  },\n\n  updated(el, binding) {\n    const {\n      disabled\n    } = binding.value || {};\n    disabled && unbind(el);\n  },\n\n  unmounted(el) {\n    unbind(el);\n  }\n\n};\nexport { FocusTrap as default };","map":{"version":3,"sources":["C:/Users/emalc/OneDrive/Escritorio/CRUD_keycloak_primeVue/keycloak-workshop/frontend-vuejs/node_modules/primevue/focustrap/focustrap.esm.js"],"names":["DomHandler","ObjectUtils","bind","el","binding","onFocusIn","onFocusOut","value","$_pfocustrap_mutationobserver","MutationObserver","mutationList","forEach","mutation","type","contains","document","activeElement","findNextFocusableElement","focusableElement","isFocusableElement","getFirstFocusableElement","isNotEmpty","nextSibling","focus","disconnect","observe","childList","$_pfocustrap_focusinlistener","event","$_pfocustrap_focusoutlistener","addEventListener","unbind","removeEventListener","autoFocus","autoFocusSelector","firstFocusableSelector","onFirstHiddenElementFocus","currentTarget","relatedTarget","$_pfocustrap_lasthiddenfocusableelement","parentElement","$_pfocustrap_focusableselector","onLastHiddenElementFocus","$_pfocustrap_firsthiddenfocusableelement","getLastFocusableElement","createHiddenFocusableElements","tabIndex","lastFocusableSelector","createFocusableElement","onFocus","element","createElement","classList","setAttribute","firstFocusableElement","lastFocusableElement","prepend","append","FocusTrap","mounted","disabled","updated","unmounted","default"],"mappings":"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","sourcesContent":["import { DomHandler, ObjectUtils } from 'primevue/utils';\n\nfunction bind(el, binding) {\n    const { onFocusIn, onFocusOut } = binding.value || {};\n\n    el.$_pfocustrap_mutationobserver = new MutationObserver((mutationList) => {\n        mutationList.forEach((mutation) => {\n            if (mutation.type === 'childList' && !el.contains(document.activeElement)) {\n                const findNextFocusableElement = (el) => {\n                    const focusableElement = DomHandler.isFocusableElement(el) ? el : DomHandler.getFirstFocusableElement(el);\n\n                    return ObjectUtils.isNotEmpty(focusableElement) ? focusableElement : findNextFocusableElement(el.nextSibling);\n                };\n\n                DomHandler.focus(findNextFocusableElement(mutation.nextSibling));\n            }\n        });\n    });\n\n    el.$_pfocustrap_mutationobserver.disconnect();\n    el.$_pfocustrap_mutationobserver.observe(el, {\n        childList: true\n    });\n\n    el.$_pfocustrap_focusinlistener = (event) => onFocusIn && onFocusIn(event);\n    el.$_pfocustrap_focusoutlistener = (event) => onFocusOut && onFocusOut(event);\n\n    el.addEventListener('focusin', el.$_pfocustrap_focusinlistener);\n    el.addEventListener('focusout', el.$_pfocustrap_focusoutlistener);\n}\n\nfunction unbind(el) {\n    el.$_pfocustrap_mutationobserver && el.$_pfocustrap_mutationobserver.disconnect();\n    el.$_pfocustrap_focusinlistener && el.removeEventListener('focusin', el.$_pfocustrap_focusinlistener) && (el.$_pfocustrap_focusinlistener = null);\n    el.$_pfocustrap_focusoutlistener && el.removeEventListener('focusout', el.$_pfocustrap_focusoutlistener) && (el.$_pfocustrap_focusoutlistener = null);\n}\n\nfunction autoFocus(el, binding) {\n    const { autoFocusSelector = '', firstFocusableSelector = '', autoFocus = false } = binding.value || {};\n    let focusableElement = DomHandler.getFirstFocusableElement(el, `[autofocus]:not(.p-hidden-focusable)${autoFocusSelector}`);\n\n    autoFocus && !focusableElement && (focusableElement = DomHandler.getFirstFocusableElement(el, `:not(.p-hidden-focusable)${firstFocusableSelector}`));\n    DomHandler.focus(focusableElement);\n}\n\nfunction onFirstHiddenElementFocus(event) {\n    const { currentTarget, relatedTarget } = event;\n    const focusableElement =\n        relatedTarget === currentTarget.$_pfocustrap_lasthiddenfocusableelement\n            ? DomHandler.getFirstFocusableElement(currentTarget.parentElement, `:not(.p-hidden-focusable)${currentTarget.$_pfocustrap_focusableselector}`)\n            : currentTarget.$_pfocustrap_lasthiddenfocusableelement;\n\n    DomHandler.focus(focusableElement);\n}\n\nfunction onLastHiddenElementFocus(event) {\n    const { currentTarget, relatedTarget } = event;\n    const focusableElement =\n        relatedTarget === currentTarget.$_pfocustrap_firsthiddenfocusableelement\n            ? DomHandler.getLastFocusableElement(currentTarget.parentElement, `:not(.p-hidden-focusable)${currentTarget.$_pfocustrap_focusableselector}`)\n            : currentTarget.$_pfocustrap_firsthiddenfocusableelement;\n\n    DomHandler.focus(focusableElement);\n}\n\nfunction createHiddenFocusableElements(el, binding) {\n    const { tabIndex = 0, firstFocusableSelector = '', lastFocusableSelector = '' } = binding.value || {};\n\n    const createFocusableElement = (onFocus) => {\n        const element = document.createElement('span');\n\n        element.classList = 'p-hidden-accessible p-hidden-focusable';\n        element.tabIndex = tabIndex;\n        element.setAttribute('aria-hidden', 'true');\n        element.setAttribute('role', 'presentation');\n        element.addEventListener('focus', onFocus);\n\n        return element;\n    };\n\n    const firstFocusableElement = createFocusableElement(onFirstHiddenElementFocus);\n    const lastFocusableElement = createFocusableElement(onLastHiddenElementFocus);\n\n    firstFocusableElement.$_pfocustrap_lasthiddenfocusableelement = lastFocusableElement;\n    firstFocusableElement.$_pfocustrap_focusableselector = firstFocusableSelector;\n\n    lastFocusableElement.$_pfocustrap_firsthiddenfocusableelement = firstFocusableElement;\n    lastFocusableElement.$_pfocustrap_focusableselector = lastFocusableSelector;\n\n    el.prepend(firstFocusableElement);\n    el.append(lastFocusableElement);\n}\n\nconst FocusTrap = {\n    mounted(el, binding) {\n        const { disabled } = binding.value || {};\n\n        if (!disabled) {\n            createHiddenFocusableElements(el, binding);\n            bind(el, binding);\n            autoFocus(el, binding);\n        }\n    },\n    updated(el, binding) {\n        const { disabled } = binding.value || {};\n\n        disabled && unbind(el);\n    },\n    unmounted(el) {\n        unbind(el);\n    }\n};\n\nexport { FocusTrap as default };\n"]},"metadata":{},"sourceType":"module"}