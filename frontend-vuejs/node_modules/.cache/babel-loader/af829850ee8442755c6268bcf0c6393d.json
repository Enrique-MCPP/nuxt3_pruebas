{"ast":null,"code":"import { useStore } from 'vuex';\nimport { tableBean } from '@/composables/tableBean';\nimport PedidoService from '@/service/PedidoService';\nimport { computed, watchEffect } from 'vue';\nimport GenericDatatable from './GenericDatatable.vue';\nexport default {\n  components: {\n    GenericDatatable\n  },\n  setup() {\n    const pathListDatatable = 'api/pedido/';\n    const crudColumns = [{\n      title: 'ID',\n      field: 'id'\n    }, {\n      title: 'Nº de seguimiento',\n      field: 'numSeguimiento'\n    }, {\n      title: 'Método de pago',\n      field: 'metodoDePago'\n    }, {\n      title: 'Estado',\n      field: 'estado.nombre'\n    }, {\n      title: 'Precio total',\n      field: 'precioTotal'\n    }, {\n      title: 'Dirección de envío',\n      field: 'direccionEnvio'\n    }, {\n      title: 'Observaciones',\n      field: 'observaciones'\n    }, {\n      title: 'Fecha del pedido',\n      field: 'fechaPedido'\n    }];\n    const pedidoService = new PedidoService();\n    const store = useStore();\n    const axiosConfig = computed(() => store.getters.axiosConfig);\n    const {\n      state,\n      list,\n      save,\n      setEditedRow,\n      rowSelectListener\n    } = tableBean(pedidoService, axiosConfig.value);\n    const doSomethingAfterSave = () => {\n      console.log('Se ha guardado la información');\n      console.log('Dentro del doSomethingAfterSave');\n      console.log(state.editedRow);\n    };\n    const savePedido = () => {\n      save().then(() => {\n        doSomethingAfterSave();\n      });\n    };\n    watchEffect(async () => {\n      list();\n    }, {\n      flush: 'post'\n    });\n    return {\n      savePedido,\n      state,\n      setEditedRow,\n      list,\n      pathListDatatable,\n      crudColumns,\n      rowSelectListener\n    };\n  }\n};","map":{"version":3,"names":["useStore","tableBean","PedidoService","computed","watchEffect","GenericDatatable","components","setup","pathListDatatable","crudColumns","title","field","pedidoService","store","axiosConfig","getters","state","list","save","setEditedRow","rowSelectListener","value","doSomethingAfterSave","console","log","editedRow","savePedido","then","flush"],"sources":["C:\\Users\\emalc\\OneDrive\\Escritorio\\CRUD_keycloak_primeVue\\keycloak-workshop\\frontend-vuejs\\src\\componentes\\PedidosCRUD.vue"],"sourcesContent":["<template>\r\n  <GenericDatatable :columns=\"crudColumns\"\r\n    :rowSelectListener=\"state.rowSelectListener\"\r\n    :editedRow=\"state.editedRow\" :selectedRow=\"state.selectedRow\" :header=\"header\" >\r\n  </GenericDatatable>\r\n  <div>\r\n    <button @click=\"updateMyObject\">Actualizar objeto</button>\r\n    <button @click=\"saveWithLogic\">Actualizar editedRow</button>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { useStore } from 'vuex';\r\nimport { tableBean } from '@/composables/tableBean';\r\nimport PedidoService from '@/service/PedidoService';\r\nimport { computed, watchEffect } from 'vue';\r\nimport GenericDatatable from './GenericDatatable.vue';\r\n\r\nexport default {\r\n  components: {\r\n    GenericDatatable\r\n  },\r\n  setup() {\r\n    const pathListDatatable = 'api/pedido/';\r\n    const crudColumns = [\r\n      { title: 'ID', field: 'id' },\r\n      { title: 'Nº de seguimiento', field: 'numSeguimiento' },\r\n      { title: 'Método de pago', field: 'metodoDePago' },\r\n      { title: 'Estado', field: 'estado.nombre' },\r\n      { title: 'Precio total', field: 'precioTotal' },\r\n      { title: 'Dirección de envío', field: 'direccionEnvio' },\r\n      { title: 'Observaciones', field: 'observaciones' },\r\n      { title: 'Fecha del pedido', field: 'fechaPedido' },\r\n    ];\r\n    const pedidoService = new PedidoService();\r\n\r\n\r\n    const store = useStore();\r\n\r\n    const axiosConfig = computed(() => store.getters.axiosConfig);\r\n    const { state, list, save, setEditedRow,rowSelectListener } = tableBean(pedidoService, axiosConfig.value);\r\n\r\n    const doSomethingAfterSave = () => {\r\n      console.log('Se ha guardado la información');\r\n      console.log('Dentro del doSomethingAfterSave');\r\n      console.log(state.editedRow);\r\n    };\r\n\r\n    const savePedido = () => {\r\n      save().then(() => {\r\n        doSomethingAfterSave();\r\n      });\r\n    };\r\n\r\n    watchEffect(async () => {\r\n      list();\r\n    }, { flush: 'post' });\r\n\r\n\r\n    return {\r\n      savePedido,\r\n      state,\r\n      setEditedRow,\r\n      list,\r\n      pathListDatatable,\r\n      crudColumns,\r\n      rowSelectListener\r\n    };\r\n  },\r\n};\r\n</script>\r\n"],"mappings":"AAYA,SAASA,QAAO,QAAS,MAAM;AAC/B,SAASC,SAAQ,QAAS,yBAAyB;AACnD,OAAOC,aAAY,MAAO,yBAAyB;AACnD,SAASC,QAAQ,EAAEC,WAAU,QAAS,KAAK;AAC3C,OAAOC,gBAAe,MAAO,wBAAwB;AAErD,eAAe;EACbC,UAAU,EAAE;IACVD;EACF,CAAC;EACDE,KAAKA,CAAA,EAAG;IACN,MAAMC,iBAAgB,GAAI,aAAa;IACvC,MAAMC,WAAU,GAAI,CAClB;MAAEC,KAAK,EAAE,IAAI;MAAEC,KAAK,EAAE;IAAK,CAAC,EAC5B;MAAED,KAAK,EAAE,mBAAmB;MAAEC,KAAK,EAAE;IAAiB,CAAC,EACvD;MAAED,KAAK,EAAE,gBAAgB;MAAEC,KAAK,EAAE;IAAe,CAAC,EAClD;MAAED,KAAK,EAAE,QAAQ;MAAEC,KAAK,EAAE;IAAgB,CAAC,EAC3C;MAAED,KAAK,EAAE,cAAc;MAAEC,KAAK,EAAE;IAAc,CAAC,EAC/C;MAAED,KAAK,EAAE,oBAAoB;MAAEC,KAAK,EAAE;IAAiB,CAAC,EACxD;MAAED,KAAK,EAAE,eAAe;MAAEC,KAAK,EAAE;IAAgB,CAAC,EAClD;MAAED,KAAK,EAAE,kBAAkB;MAAEC,KAAK,EAAE;IAAc,CAAC,CACpD;IACD,MAAMC,aAAY,GAAI,IAAIV,aAAa,EAAE;IAGzC,MAAMW,KAAI,GAAIb,QAAQ,EAAE;IAExB,MAAMc,WAAU,GAAIX,QAAQ,CAAC,MAAMU,KAAK,CAACE,OAAO,CAACD,WAAW,CAAC;IAC7D,MAAM;MAAEE,KAAK;MAAEC,IAAI;MAAEC,IAAI;MAAEC,YAAY;MAACC;IAAkB,IAAInB,SAAS,CAACW,aAAa,EAAEE,WAAW,CAACO,KAAK,CAAC;IAEzG,MAAMC,oBAAmB,GAAIA,CAAA,KAAM;MACjCC,OAAO,CAACC,GAAG,CAAC,+BAA+B,CAAC;MAC5CD,OAAO,CAACC,GAAG,CAAC,iCAAiC,CAAC;MAC9CD,OAAO,CAACC,GAAG,CAACR,KAAK,CAACS,SAAS,CAAC;IAC9B,CAAC;IAED,MAAMC,UAAS,GAAIA,CAAA,KAAM;MACvBR,IAAI,EAAE,CAACS,IAAI,CAAC,MAAM;QAChBL,oBAAoB,EAAE;MACxB,CAAC,CAAC;IACJ,CAAC;IAEDlB,WAAW,CAAC,YAAY;MACtBa,IAAI,EAAE;IACR,CAAC,EAAE;MAAEW,KAAK,EAAE;IAAO,CAAC,CAAC;IAGrB,OAAO;MACLF,UAAU;MACVV,KAAK;MACLG,YAAY;MACZF,IAAI;MACJT,iBAAiB;MACjBC,WAAW;MACXW;IACF,CAAC;EACH;AACF,CAAC"},"metadata":{},"sourceType":"module"}