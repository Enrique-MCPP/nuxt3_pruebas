{"ast":null,"code":"import { defineStore } from 'pinia';\nexport const useStore = defineStore({\n  id: 'store',\n  state() {\n    return {\n      username: null,\n      keycloakToken: null,\n      keycloakTokenParsed: null,\n      axiosConfig: {\n        headers: {}\n      },\n      roles: []\n    };\n  },\n  actions: {\n    setUserName(val) {\n      this.username = val;\n    },\n    setKeycloakToken(val) {\n      this.keycloakToken = val;\n      this.axiosConfig.headers.Authorization = `Bearer ${val}`;\n    },\n    setKeycloakTokenParsed(val) {\n      this.keycloakTokenParsed = val;\n    },\n    setRoles(val) {\n      this.roles = val;\n    }\n  },\n  getters: {\n    username: state => state.username,\n    keycloakToken: state => state.keycloakToken,\n    keycloakTokenParsed: state => state.keycloakTokenParsed,\n    axiosConfig: state => state.axiosConfig,\n    roles: state => state.roles\n  }\n});","map":{"version":3,"names":["defineStore","useStore","id","state","username","keycloakToken","keycloakTokenParsed","axiosConfig","headers","roles","actions","setUserName","val","setKeycloakToken","Authorization","setKeycloakTokenParsed","setRoles","getters"],"sources":["C:/Users/emalc/OneDrive/Escritorio/CRUD_keycloak_primeVue/keycloak-workshop/frontend-vuejs/src/store/user.js"],"sourcesContent":["import { defineStore } from 'pinia'\r\n\r\nexport const useStore = defineStore({\r\n  id: 'store',\r\n  state() {\r\n    return {\r\n      username: null,\r\n      keycloakToken: null,\r\n      keycloakTokenParsed: null,\r\n      axiosConfig: {\r\n        headers: {}\r\n      },\r\n      roles: []\r\n    }\r\n  },\r\n  actions: {\r\n    setUserName(val) {\r\n      this.username = val\r\n    },\r\n    setKeycloakToken(val) {\r\n      this.keycloakToken = val\r\n      this.axiosConfig.headers.Authorization = `Bearer ${val}`\r\n    },\r\n    setKeycloakTokenParsed(val) {\r\n      this.keycloakTokenParsed = val\r\n    },\r\n    setRoles(val) {\r\n      this.roles = val\r\n    }\r\n  },\r\n  getters: {\r\n    username: state => state.username,\r\n    keycloakToken: state => state.keycloakToken,\r\n    keycloakTokenParsed: state => state.keycloakTokenParsed,\r\n    axiosConfig: state => state.axiosConfig,\r\n    roles: state => state.roles\r\n  }\r\n})\r\n"],"mappings":"AAAA,SAASA,WAAW,QAAQ,OAAO;AAEnC,OAAO,MAAMC,QAAQ,GAAGD,WAAW,CAAC;EAClCE,EAAE,EAAE,OAAO;EACXC,KAAKA,CAAA,EAAG;IACN,OAAO;MACLC,QAAQ,EAAE,IAAI;MACdC,aAAa,EAAE,IAAI;MACnBC,mBAAmB,EAAE,IAAI;MACzBC,WAAW,EAAE;QACXC,OAAO,EAAE,CAAC;MACZ,CAAC;MACDC,KAAK,EAAE;IACT,CAAC;EACH,CAAC;EACDC,OAAO,EAAE;IACPC,WAAWA,CAACC,GAAG,EAAE;MACf,IAAI,CAACR,QAAQ,GAAGQ,GAAG;IACrB,CAAC;IACDC,gBAAgBA,CAACD,GAAG,EAAE;MACpB,IAAI,CAACP,aAAa,GAAGO,GAAG;MACxB,IAAI,CAACL,WAAW,CAACC,OAAO,CAACM,aAAa,GAAI,UAASF,GAAI,EAAC;IAC1D,CAAC;IACDG,sBAAsBA,CAACH,GAAG,EAAE;MAC1B,IAAI,CAACN,mBAAmB,GAAGM,GAAG;IAChC,CAAC;IACDI,QAAQA,CAACJ,GAAG,EAAE;MACZ,IAAI,CAACH,KAAK,GAAGG,GAAG;IAClB;EACF,CAAC;EACDK,OAAO,EAAE;IACPb,QAAQ,EAAED,KAAK,IAAIA,KAAK,CAACC,QAAQ;IACjCC,aAAa,EAAEF,KAAK,IAAIA,KAAK,CAACE,aAAa;IAC3CC,mBAAmB,EAAEH,KAAK,IAAIA,KAAK,CAACG,mBAAmB;IACvDC,WAAW,EAAEJ,KAAK,IAAIA,KAAK,CAACI,WAAW;IACvCE,KAAK,EAAEN,KAAK,IAAIA,KAAK,CAACM;EACxB;AACF,CAAC,CAAC"},"metadata":{},"sourceType":"module"}