{"ast":null,"code":"import { resolveComponent as _resolveComponent, createVNode as _createVNode, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nexport function render(_ctx, _cache) {\n  const _component_GenericCRUD = _resolveComponent(\"GenericCRUD\");\n\n  return _openBlock(), _createElementBlock(\"div\", null, [_createVNode(_component_GenericCRUD, {\n    columns: _ctx.crudColumns,\n    data: _ctx.crudData,\n    editedRow: _ctx.editedRow,\n    header: _ctx.header,\n    crudInputs: _ctx.crudInputs\n  }, null, 8\n  /* PROPS */\n  , [\"columns\", \"data\", \"editedRow\", \"header\", \"crudInputs\"])]);\n}","map":{"version":3,"mappings":";;;;uBACIA,oBAIM,KAJN,EAIM,IAJN,EAIM,CAHFC,aAC2CC,sBAD3C,EAC2C;AAD7BC,WAAO,EAAEC,gBACoB;AADNC,QAAI,EAAED,aACA;AADWE,aAAS,EAAEF,cACtB;AADkCG,UAAM,EAAEH,WAC1C;AAAtCI,cAAU,EAAEJ;AAA0B,GAD3C;;AAAA,6DAGE,CAJN","names":["_createElementBlock","_createVNode","_component_GenericCRUD","columns","_ctx","data","editedRow","header","crudInputs"],"sourceRoot":"","sources":["C:\\Users\\emalc\\OneDrive\\Escritorio\\CRUD_keycloak_primeVue\\keycloak-workshop\\frontend-vuejs\\src\\componentes\\UseGenericCRUD.vue"],"sourcesContent":["<template>\r\n    <div>\r\n        <GenericCRUD :columns=\"crudColumns\" :data=\"crudData\" :editedRow=\"editedRow\" :header=\"header\"\r\n            :crudInputs=\"crudInputs\"></GenericCRUD>\r\n\r\n    </div>\r\n</template>\r\n  \r\n<script>\r\nimport GenericCRUD from './GenericCRUD.vue';\r\n\r\nexport default {\r\n    components: {\r\n        GenericCRUD\r\n    },\r\n    data() {\r\n        return {\r\n            crudColumns: [\r\n                { title: 'ID', field: 'id' },\r\n                { title: 'Name', field: 'name' },\r\n                { title: 'Email', field: 'email' }\r\n            ],\r\n            crudData: [\r\n                { id: 1, name: 'John Doe', email: 'johndoe@example.com' },\r\n                { id: 2, name: 'Jane Doe', email: 'janedoe@example.com' }\r\n            ],\r\n            editedRow: {\r\n                id: null,\r\n                name: null,\r\n                email: null\r\n            },\r\n            header: \"Lista de Personas\",\r\n            crudInputs: [\r\n                { label: 'Nombre', value: 'name', component: 'p:inputText' },\r\n                { label: 'Email', value: 'name', component: 'p:inputText' },\r\n                {\r\n                    label: 'Estado',\r\n                    value: 'estado',\r\n                    component: 'p:selectOneMenu',\r\n                    options: [\r\n                        { label: 'Opci贸n 1', value: 'opcion1' },\r\n                        { label: 'Opci贸n 2', value: 'opcion2' },\r\n                        { label: 'Opci贸n 3', value: 'opcion3' },\r\n                        { label: 'Opci贸n 4', value: 'opcion4' }\r\n                    ],\r\n                    optionLabel: 'label',\r\n                    optionValue: 'value'\r\n                },\r\n\r\n                {\r\n                    label: 'Estado',\r\n                    value: 'estado',\r\n                    component: 'p:selectOneMenu',\r\n                    options: [\r\n                        options();\r\n                    ],\r\n                    optionLabel: 'label',\r\n                    optionValue: 'value'\r\n                }\r\n            ]\r\n\r\n        }\r\n\r\n\r\n    },\r\n    computed: {\r\n        async options() {\r\n            const response = await axios.get('http://tu-api.com/endpoint');\r\n            const parsedData = response.data;\r\n\r\n            return parsedData.map((item) => ({\r\n                label: item.nombre,\r\n                value: item.id,\r\n            }));\r\n        },\r\n    },\r\n}\r\n</script>"]},"metadata":{},"sourceType":"module"}