{"ast":null,"code":"import { FilterMatchMode } from 'primevue/api';\nexport default {\n  props: {\n    columns: {\n      type: Array,\n      required: true\n    },\n    data: {\n      type: Array,\n      required: true\n    },\n    header: {\n      type: String,\n      default: \"Lista de elementos\"\n    },\n    editedRow: {\n      type: Object,\n      default: null\n    },\n    crudInputs: {\n      type: Object,\n      default: function () {\n        return {};\n      }\n    }\n  },\n\n  data() {\n    return {\n      filters: {},\n      selectedRow: null,\n      localEditedRow: Object.assign({}, this.editedRow)\n    };\n  },\n\n  watch: {\n    editedRow(newVal) {\n      this.localEditedRow = Object.assign({}, newVal);\n    },\n\n    currentSelection(newVal) {\n      this.localEditedRow = Object.assign({}, newVal);\n    }\n\n  },\n  computed: {\n    globalFilterFields() {\n      return ['global', ...this.columns.map(column => column.field)];\n    },\n\n    currentPageReportTemplate() {\n      return `Mostrando {first} a {last} de ${this.data.length} pedidos`;\n    },\n\n    currentSelection() {\n      return this.selectedRow[0] || {};\n    }\n\n  },\n\n  created() {\n    console.log(\"created\");\n    this.initFilters();\n  },\n\n  methods: {\n    onRowSelect(event) {\n      this.localEditedRow = Object.assign({}, event.data);\n    },\n\n    initFilters() {\n      const filters = {\n        'global': {\n          value: null,\n          matchMode: FilterMatchMode.CONTAINS\n        }\n      };\n      this.columns.forEach(column => {\n        filters[column.field] = {\n          value: null,\n          matchMode: FilterMatchMode.CONTAINS\n        };\n      });\n      this.filters = filters;\n    }\n\n  }\n};","map":{"version":3,"mappings":"AA+CA,SAASA,eAAT,QAAgC,cAAhC;AAEA,eAAe;AAEXC,OAAK,EAAE;AACHC,WAAO,EAAE;AACLC,UAAI,EAAEC,KADD;AAELC,cAAQ,EAAE;AAFL,KADN;AAKHC,QAAI,EAAE;AACFH,UAAI,EAAEC,KADJ;AAEFC,cAAQ,EAAE;AAFR,KALH;AASHE,UAAM,EAAE;AACJJ,UAAI,EAAEK,MADF;AAEJC,aAAO,EAAE;AAFL,KATL;AAaHC,aAAS,EAAE;AACPP,UAAI,EAAEQ,MADC;AAEPF,aAAO,EAAE;AAFF,KAbR;AAiBHG,cAAU,EAAE;AACRT,UAAI,EAAEQ,MADE;AAERF,aAAO,EAAE,YAAY;AACjB,eAAO,EAAP;AACJ;AAJQ;AAjBT,GAFI;;AA2BXH,MAAI,GAAG;AACH,WAAO;AACHO,aAAO,EAAE,EADN;AAEHC,iBAAW,EAAE,IAFV;AAGHC,oBAAc,EAAEJ,MAAM,CAACK,MAAP,CAAc,EAAd,EAAkB,KAAKN,SAAvB;AAHb,KAAP;AAMH,GAlCU;;AAmCXO,OAAK,EAAE;AACHP,aAAS,CAACQ,MAAD,EAAS;AACd,WAAKH,cAAL,GAAsBJ,MAAM,CAACK,MAAP,CAAc,EAAd,EAAkBE,MAAlB,CAAtB;AACH,KAHE;;AAIHC,oBAAgB,CAACD,MAAD,EAAS;AACrB,WAAKH,cAAL,GAAsBJ,MAAM,CAACK,MAAP,CAAc,EAAd,EAAkBE,MAAlB,CAAtB;AACJ;;AANG,GAnCI;AA2CXE,UAAQ,EAAE;AACNC,sBAAkB,GAAG;AACjB,aAAO,CACH,QADG,EAEH,GAAG,KAAKnB,OAAL,CAAaoB,GAAb,CAAkBC,MAAD,IAAYA,MAAM,CAACC,KAApC,CAFA,CAAP;AAIH,KANK;;AAONC,6BAAyB,GAAG;AACxB,aAAQ,iCAAgC,KAAKnB,IAAL,CAAUoB,MAAM,UAAxD;AACH,KATK;;AAUNP,oBAAgB,GAAG;AACf,aAAO,KAAKL,WAAL,CAAiB,CAAjB,KAAuB,EAA9B;AACJ;;AAZM,GA3CC;;AAyDXa,SAAO,GAAG;AACNC,WAAO,CAACC,GAAR,CAAY,SAAZ;AACA,SAAKC,WAAL;AACH,GA5DU;;AA6DXC,SAAO,EAAE;AACLC,eAAW,CAACC,KAAD,EAAQ;AACf,WAAKlB,cAAL,GAAsBJ,MAAM,CAACK,MAAP,CAAc,EAAd,EAAkBiB,KAAK,CAAC3B,IAAxB,CAAtB;AACH,KAHI;;AAILwB,eAAW,GAAG;AACV,YAAMjB,OAAM,GAAI;AACZ,kBAAU;AAAEqB,eAAK,EAAE,IAAT;AAAeC,mBAAS,EAAEnC,eAAe,CAACoC;AAA1C;AADE,OAAhB;AAGA,WAAKlC,OAAL,CAAamC,OAAb,CAAsBd,MAAD,IAAY;AAC7BV,eAAO,CAACU,MAAM,CAACC,KAAR,CAAP,GAAwB;AACpBU,eAAK,EAAE,IADa;AAEpBC,mBAAS,EAAEnC,eAAe,CAACoC;AAFP,SAAxB;AAIH,OALD;AAMA,WAAKvB,OAAL,GAAeA,OAAf;AACJ;;AAfK;AA7DE,CAAf","names":["FilterMatchMode","props","columns","type","Array","required","data","header","String","default","editedRow","Object","crudInputs","filters","selectedRow","localEditedRow","assign","watch","newVal","currentSelection","computed","globalFilterFields","map","column","field","currentPageReportTemplate","length","created","console","log","initFilters","methods","onRowSelect","event","value","matchMode","CONTAINS","forEach"],"sourceRoot":"","sources":["C:\\Users\\emalc\\OneDrive\\Escritorio\\CRUD_keycloak_primeVue\\keycloak-workshop\\frontend-vuejs\\src\\componentes\\GenericCRUD.vue"],"sourcesContent":["<template>\r\n    <div style=\"margin: 0 auto; width: 80%\">\r\n        <p_panel :header=\"header\">\r\n            <p:dataTable :value=\"data\" :paginator=\"true\" :rows=\"10\" v-model:selection=\"selectedRow\"\r\n                class=\"p-datatable-pedidos\" @row-click=\"onRowSelect\" selectionMode=\"single\" dataKey=\"id\"\r\n                paginatorTemplate=\"CurrentPageReport FirstPageLink PrevPageLink PageLinks NextPageLink LastPageLink RowsPerPageDropdown\"\r\n                :rowsPerPageOptions=\"[10, 20, 50]\" responsiveLayout=\"scroll\" filterDisplay=\"row\"\r\n                :globalFilterFields=\"globalFilterFields\" v-model:filters=\"filters\"\r\n                currentPageReportTemplate=\"Mostrando {first} a {last} de {totalRecords}\">\r\n                <template #header>\r\n                    <div class=\"flex justify-content-end\">\r\n                        <span class=\"p-input-icon-left \">\r\n                            <i class=\"pi pi-search\" />\r\n                            <p:inputText v-model=\"filters['global'].value\" placeholder=\"Buscar...\" />\r\n                        </span>\r\n                    </div>\r\n                </template>\r\n                <template #empty>\r\n                    No hay elementos disponibles.\r\n                </template>\r\n                <template #loading>\r\n                    Cargando elementos. Por favor, espera.\r\n                </template>\r\n                <p_column v-for=\"column in columns\" :field=\"column.field\" :header=\"column.title\" :key=\"column.field\"\r\n                    :ref=\"column.field\" :sortable=\"true\">\r\n                    <template #filter=\"{ filterModel, filterCallback }\">\r\n                        <p:inputText type=\"text\" v-model=\"filterModel.value\" @keyup=\"filterCallback()\"\r\n                            class=\"p-column-filter\" :placeholder=\"'Buscar por ' + column.title\" />\r\n                    </template>\r\n                </p_column>\r\n\r\n            </p:dataTable>\r\n        </p_panel>\r\n    </div>\r\n    <p_panel style=\"margin-bottom: 20px;margin: 0 auto; width: 80%\">\r\n        <div class=\"panel-flex\" style=\"margin-bottom: 20px;margin: 0 auto; width: 80%\">\r\n            <div v-for=\"(input, index) in crudInputs\" :key=\"index\"\r\n                style=\"display: inline-block; margin-right: 10px; vertical-align: middle;\">\r\n                <label :for=\"input.name\" style=\"display: block;\">{{ input.label }}</label>\r\n                <component :is=\"input.component\" :v-bind=\"input.attrs\" :v-model=\"localEditedRow[input.name]\"\r\n                    style=\"width: 200px;\"></component>\r\n            </div>\r\n        </div>\r\n    </p_panel>\r\n</template>\r\n  \r\n<script>\r\nimport { FilterMatchMode } from 'primevue/api';\r\n\r\nexport default {\r\n\r\n    props: {\r\n        columns: {\r\n            type: Array,\r\n            required: true\r\n        },\r\n        data: {\r\n            type: Array,\r\n            required: true\r\n        },\r\n        header: {\r\n            type: String,\r\n            default: \"Lista de elementos\"\r\n        },\r\n        editedRow: {\r\n            type: Object,\r\n            default: null\r\n        },\r\n        crudInputs: {\r\n            type: Object,\r\n            default: function () {\r\n                return {}\r\n            }\r\n        }\r\n\r\n    },\r\n    data() {\r\n        return {\r\n            filters: {},\r\n            selectedRow: null,\r\n            localEditedRow: Object.assign({}, this.editedRow)\r\n        }\r\n\r\n    },\r\n    watch: {\r\n        editedRow(newVal) {\r\n            this.localEditedRow = Object.assign({}, newVal);\r\n        },\r\n        currentSelection(newVal) {\r\n            this.localEditedRow = Object.assign({}, newVal);\r\n        }\r\n    },\r\n    computed: {\r\n        globalFilterFields() {\r\n            return [\r\n                'global',\r\n                ...this.columns.map((column) => column.field)\r\n            ];\r\n        },\r\n        currentPageReportTemplate() {\r\n            return `Mostrando {first} a {last} de ${this.data.length} pedidos`;\r\n        },\r\n        currentSelection() {\r\n            return this.selectedRow[0] || {};\r\n        }\r\n    },\r\n    created() {\r\n        console.log(\"created\");\r\n        this.initFilters();\r\n    },\r\n    methods: {\r\n        onRowSelect(event) {\r\n            this.localEditedRow = Object.assign({}, event.data);\r\n        },\r\n        initFilters() {\r\n            const filters = {\r\n                'global': { value: null, matchMode: FilterMatchMode.CONTAINS }\r\n            };\r\n            this.columns.forEach((column) => {\r\n                filters[column.field] = {\r\n                    value: null,\r\n                    matchMode: FilterMatchMode.CONTAINS\r\n                };\r\n            });\r\n            this.filters = filters;\r\n        }\r\n    }\r\n}\r\n</script>\r\n  \r\n\r\n<style lang=\"scss\" scoped>\r\n::v-deep(.p-datatable.p-datatable-pedidos) {\r\n    .p-datatable-header {\r\n        padding: 1rem;\r\n        text-align: left;\r\n        font-size: 1.5rem;\r\n    }\r\n\r\n    .p-paginator {\r\n        padding: 1rem;\r\n    }\r\n\r\n    .p-datatable-thead>tr>th {\r\n        text-align: left;\r\n    }\r\n\r\n    .p-datatable-tbody>tr>td {\r\n        cursor: auto;\r\n    }\r\n\r\n    .p-dropdown-label:not(.p-placeholder) {\r\n        text-transform: uppercase;\r\n    }\r\n}\r\n\r\n.panel-flex {\r\n    display: flex;\r\n    flex-wrap: wrap;\r\n    justify-content: flex-start;\r\n    align-items: flex-start;\r\n}\r\n\r\n.panel-flex>div {\r\n    flex-basis: calc(25% - 10px);\r\n    margin-right: 10px;\r\n    margin-bottom: 20px;\r\n}\r\n</style>"]},"metadata":{},"sourceType":"module"}