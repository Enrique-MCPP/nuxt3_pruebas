{"ast":null,"code":"const remove = () => {\n  toast.add({\n    severity: 'success',\n    summary: 'Eliminando',\n    detail: 'REGISTRO ELIMINADO CORRECTAMENTE. BORRADO EN BASE DE DATOS',\n    life: 3000\n  });\n};\n\nconst __default__ = {\n  name: 'CrudApp',\n\n  data() {\n    return {\n      productos: [],\n      editedRow: {\n        id: null,\n        nombre: null,\n        descripcion: null,\n        precio: null\n      }\n    };\n  },\n\n  productoService: null,\n\n  created() {\n    this.productoService = new ProductoService();\n  },\n\n  computed: { ...mapGetters({\n      username: 'username',\n      keycloakToken: 'keycloakToken',\n      keycloakTokenParsed: 'keycloakTokenParsed',\n      axiosConfig: 'axiosConfig'\n    })\n  },\n  watch: {\n    keycloakToken: function (val) {\n      if (val) {\n        this.productoService.getAll(this.axiosConfig).then(response => {\n          this.productos = response.data;\n        });\n      }\n    }\n  },\n  methods: {\n    create() {},\n\n    remove() {\n      this.productoService.remove(this.editedRow.id, this.axiosConfig).then(() => {\n        this.toast.show({\n          severity: \"success\",\n          summary: \"Éxito\",\n          detail: \"Producto eliminado correctamente\",\n          life: 3000\n        });\n        this.editedRow = {\n          id: null,\n          nombre: null,\n          descripcion: null,\n          precio: null\n        };\n      });\n    }\n\n  }\n};\nimport { ref } from 'vue';\nimport { useToast } from \"primevue/usetoast\";\nexport default /*#__PURE__*/Object.assign(__default__, {\n  setup(__props, {\n    expose\n  }) {\n    expose();\n    const text = ref();\n    const toast = useToast();\n\n    const save = () => {\n      toast.add({\n        severity: 'success',\n        summary: 'Guardando',\n        detail: 'REGISTRO CREADO CORRECTAMENTE. GUARDADO EN BASE DE DATOS',\n        life: 3000\n      });\n    };\n\n    const remove = () => {\n      toast.add({\n        severity: 'success',\n        summary: 'Eliminando',\n        detail: 'REGISTRO ELIMINADO CORRECTAMENTE. BORRADO EN BASE DE DATOS',\n        life: 3000\n      });\n    };\n\n    const create = () => {};\n\n    const __returned__ = {\n      remove,\n      text,\n      toast,\n      save,\n      create,\n      ref,\n      useToast\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n\n});","map":{"version":3,"mappings":"AAuEA,MAAMA,MAAM,GAAG,MAAM;AAGrBC,OAAK,CAACC,GAAN,CAAU;AAAEC,YAAQ,EAAE,SAAZ;AAAuBC,WAAO,EAAE,YAAhC;AAA8CC,UAAM,EAAE,4DAAtD;AAAoHC,QAAI,EAAE;AAA1H,GAAV;AAEC,CALD;;AAQA,oBAAe;AACbC,MAAI,EAAE,SADO;;AAEbC,MAAI,GAAG;AACL,WAAO;AACLC,eAAS,EAAE,EADN;AAELC,eAAS,EAAE;AACTC,UAAE,EAAE,IADK;AAETC,cAAM,EAAE,IAFC;AAGTC,mBAAW,EAAE,IAHJ;AAITC,cAAM,EAAE;AAJC;AAFN,KAAP;AAUD,GAbY;;AAcbC,iBAAe,EAAE,IAdJ;;AAebC,SAAO,GAAG;AACR,SAAKD,eAAL,GAAuB,IAAIE,eAAJ,EAAvB;AACD,GAjBY;;AAkBbC,UAAQ,EAAE,EACR,GAAGC,UAAU,CAAC;AACZC,cAAQ,EAAE,UADE;AAEZC,mBAAa,EAAE,eAFH;AAGZC,yBAAmB,EAAE,qBAHT;AAIZC,iBAAW,EAAE;AAJD,KAAD;AADL,GAlBG;AA0BbC,OAAK,EAAE;AACLH,iBAAa,EAAE,UAAUI,GAAV,EAAe;AAC5B,UAAIA,GAAJ,EAAS;AAEP,aAAKV,eAAL,CAAqBW,MAArB,CAA4B,KAAKH,WAAjC,EAA8CI,IAA9C,CAAmDC,QAAQ,IAAI;AAC7D,eAAKnB,SAAL,GAAiBmB,QAAQ,CAACpB,IAA1B;AACD,SAFD;AAGD;AACF;AARI,GA1BM;AAoCbqB,SAAO,EAAE;AAEPC,UAAM,GAAG,CAER,CAJM;;AAKP9B,UAAM,GAAE;AACN,WAAKe,eAAL,CAAqBf,MAArB,CAA4B,KAAKU,SAAL,CAAeC,EAA3C,EAA+C,KAAKY,WAApD,EAAiEI,IAAjE,CAAsE,MAAM;AAC1E,aAAK1B,KAAL,CAAW8B,IAAX,CAAgB;AAAE5B,kBAAQ,EAAE,SAAZ;AAAuBC,iBAAO,EAAE,OAAhC;AAAyCC,gBAAM,EAAE,kCAAjD;AAAqFC,cAAI,EAAE;AAA3F,SAAhB;AACA,aAAKI,SAAL,GAAiB;AACfC,YAAE,EAAE,IADW;AAEfC,gBAAM,EAAE,IAFO;AAGfC,qBAAW,EAAE,IAHE;AAIfC,gBAAM,EAAE;AAJO,SAAjB;AAMD,OARD;AASD;;AAfM;AApCI,CAAf;AA9EA,SAASkB,GAAT,QAAoB,KAApB;AACA,SAASC,QAAT,QAAyB,mBAAzB;;;;;;AACA,UAAMC,IAAI,GAAGF,GAAG,EAAhB;AACA,UAAM/B,KAAK,GAAGgC,QAAQ,EAAtB;;AACA,UAAME,IAAI,GAAG,MAAM;AAGlBlC,WAAK,CAACC,GAAN,CAAU;AAAEC,gBAAQ,EAAE,SAAZ;AAAuBC,eAAO,EAAE,WAAhC;AAA6CC,cAAM,EAAE,0DAArD;AAAiHC,YAAI,EAAE;AAAvH,OAAV;AAEA,KALD;;AAMA,UAAMN,MAAM,GAAG,MAAM;AAGrBC,WAAK,CAACC,GAAN,CAAU;AAAEC,gBAAQ,EAAE,SAAZ;AAAuBC,eAAO,EAAE,YAAhC;AAA8CC,cAAM,EAAE,4DAAtD;AAAoHC,YAAI,EAAE;AAA1H,OAAV;AAEC,KALD;;AAOA,UAAMwB,MAAM,GAAG,MAAM,CAIpB,CAJD","names":["remove","toast","add","severity","summary","detail","life","name","data","productos","editedRow","id","nombre","descripcion","precio","productoService","created","ProductoService","computed","mapGetters","username","keycloakToken","keycloakTokenParsed","axiosConfig","watch","val","getAll","then","response","methods","create","show","ref","useToast","text","save"],"sources":["C:/Users/emalc/OneDrive/Escritorio/CRUD_keycloak_primeVue/keycloak-workshop/frontend-vuejs/src/componentes/ProductoDatatable.vue"],"sourcesContent":["<script setup>\r\nimport { ref } from 'vue';\r\nimport { useToast } from \"primevue/usetoast\";\r\nconst text = ref();\r\nconst toast = useToast();\r\nconst save = () => {\r\n\r\n\r\n\ttoast.add({ severity: 'success', summary: 'Guardando', detail: 'REGISTRO CREADO CORRECTAMENTE. GUARDADO EN BASE DE DATOS', life: 3000 })\r\n\r\n}\r\nconst remove = () => {\r\n\r\n\r\ntoast.add({ severity: 'success', summary: 'Eliminando', detail: 'REGISTRO ELIMINADO CORRECTAMENTE. BORRADO EN BASE DE DATOS', life: 3000 })\r\n\r\n}\r\n\r\nconst create = () => {\r\n\r\n\r\n\r\n}\r\n\r\n</script>\r\n<template>\r\n  <div style=\"margin: 0 auto; width: 80%\">\r\n\r\n    <p_panel header=\"Lista de Personas\">\r\n      <p:dataTable :value=\"productos\" :paginator=\"true\" :rows=\"10\"\r\n        paginatorTemplate=\"CurrentPageReport FirstPageLink PrevPageLink PageLinks NextPageLink LastPageLink RowsPerPageDropdown\"\r\n        :rowsPerPageOptions=\"[10, 20, 50]\" responsiveLayout=\"scroll\"\r\n        currentPageReportTemplate=\"Mostrando {first} a {last} de {totalRecords}\">\r\n        <p_column field=\"nombre\" header=\"Nombre\"></p_column>\r\n        <p_column field=\"descripcion\" header=\"Descripción\"></p_column>\r\n        <p_column field=\"precio\" header=\"precio\"></p_column>\r\n        <template #paginatorstart>\r\n          <p:commandButton type=\"button\" icon=\"pi pi-refresh\" class=\"p-button-text\" />\r\n        </template>\r\n        <template #paginatorend>\r\n          <p:commandButton type=\"button\" icon=\"pi pi-cloud\" class=\"p-button-text\" />\r\n        </template>\r\n      </p:dataTable>\r\n    </p_panel>\r\n  </div>\r\n\r\n  <p_toast></p_toast>\r\n  <p_panel style=\"margin-bottom: 20px;margin: 0 auto; width: 80%\">\r\n    <span class=\"p-float-label\">\r\n      <p:inputText id=\"username\" type=\"text\" v-model=\"this.editedRow.nombre\" />\r\n      <label for=\"nombre\">Nombre</label>\r\n    </span>\r\n\r\n  </p_panel>\r\n  <p_panel style=\"margin-bottom: 20px;margin: 0 auto; width: 80%\">\r\n    <div class=\"center-buttons\" style=\"margin: 0 auto; width: 80%\">\r\n      <p:commandButton label=\"Nuevo\" @click=\"create\" class=\"p-button-success mr-2\" icon=\"pi pi-plus\"></p:commandButton>\r\n      <p:commandButton label=\"Guardar\" @click=\"save\" icon=\"pi pi-save\"></p:commandButton>\r\n      <p:commandButton label=\"Eliminar\" @click=\"remove\" class=\"p-button-danger\" icon=\"pi pi-trash\"></p:commandButton>\r\n    </div>\r\n  </p_panel>\r\n\r\n\r\n\r\n\r\n\r\n</template>\r\n\r\n<script>\r\n\r\n\r\nconst remove = () => {\r\n\r\n\r\ntoast.add({ severity: 'success', summary: 'Eliminando', detail: 'REGISTRO ELIMINADO CORRECTAMENTE. BORRADO EN BASE DE DATOS', life: 3000 })\r\n\r\n}\r\n\r\n\r\nexport default {\r\n  name: 'CrudApp',\r\n  data() {\r\n    return {\r\n      productos: [],\r\n      editedRow: {\r\n        id: null,\r\n        nombre: null,\r\n        descripcion: null,\r\n        precio: null\r\n      }\r\n    }\r\n\r\n  },\r\n  productoService: null,\r\n  created() {\r\n    this.productoService = new ProductoService();\r\n  },\r\n  computed: {\r\n    ...mapGetters({\r\n      username: 'username',\r\n      keycloakToken: 'keycloakToken',\r\n      keycloakTokenParsed: 'keycloakTokenParsed',\r\n      axiosConfig: 'axiosConfig'\r\n    })\r\n  },\r\n  watch: {\r\n    keycloakToken: function (val) {\r\n      if (val) {\r\n\r\n        this.productoService.getAll(this.axiosConfig).then(response => {\r\n          this.productos = response.data;\r\n        });\r\n      }\r\n    }\r\n  },\r\n  methods: {\r\n  \r\n    create() {\r\n      \r\n    },\r\n    remove(){\r\n      this.productoService.remove(this.editedRow.id, this.axiosConfig).then(() => {\r\n        this.toast.show({ severity: \"success\", summary: \"Éxito\", detail: \"Producto eliminado correctamente\", life: 3000 });\r\n        this.editedRow = {\r\n          id: null,\r\n          nombre: null,\r\n          descripcion: null,\r\n          precio: null\r\n        }\r\n      });\r\n    }\r\n\r\n  }\r\n\r\n}\r\n\r\n</script>\r\n\r\n<style>\r\n\r\n</style>"]},"metadata":{},"sourceType":"module"}