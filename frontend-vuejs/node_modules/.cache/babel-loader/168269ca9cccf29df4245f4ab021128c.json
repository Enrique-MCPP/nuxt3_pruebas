{"ast":null,"code":"import { FilterService } from 'primevue/api';\nimport OverlayEventBus from 'primevue/overlayeventbus';\nimport Portal from 'primevue/portal';\nimport Ripple from 'primevue/ripple';\nimport { UniqueComponentId, ZIndexUtils, ObjectUtils, DomHandler, ConnectedOverlayScrollHandler } from 'primevue/utils';\nimport VirtualScroller from 'primevue/virtualscroller';\nimport { resolveComponent, resolveDirective, openBlock, createElementBlock, normalizeClass, createElementVNode, mergeProps, renderSlot, Fragment, createTextVNode, toDisplayString, renderList, withModifiers, createCommentVNode, createVNode, withCtx, Transition, withDirectives, normalizeStyle, createSlots } from 'vue';\nvar script = {\n  name: 'MultiSelect',\n  emits: ['update:modelValue', 'change', 'focus', 'blur', 'before-show', 'before-hide', 'show', 'hide', 'filter', 'selectall-change'],\n  props: {\n    modelValue: null,\n    options: Array,\n    optionLabel: null,\n    optionValue: null,\n    optionDisabled: null,\n    optionGroupLabel: null,\n    optionGroupChildren: null,\n    scrollHeight: {\n      type: String,\n      default: '200px'\n    },\n    placeholder: String,\n    disabled: Boolean,\n    inputId: {\n      type: String,\n      default: null\n    },\n    inputProps: {\n      type: null,\n      default: null\n    },\n    panelClass: {\n      type: String,\n      default: null\n    },\n    panelStyle: {\n      type: null,\n      default: null\n    },\n    panelProps: {\n      type: null,\n      default: null\n    },\n    filterInputProps: {\n      type: null,\n      default: null\n    },\n    closeButtonProps: {\n      type: null,\n      default: null\n    },\n    dataKey: null,\n    filter: Boolean,\n    filterPlaceholder: String,\n    filterLocale: String,\n    filterMatchMode: {\n      type: String,\n      default: 'contains'\n    },\n    filterFields: {\n      type: Array,\n      default: null\n    },\n    appendTo: {\n      type: String,\n      default: 'body'\n    },\n    display: {\n      type: String,\n      default: 'comma'\n    },\n    selectedItemsLabel: {\n      type: String,\n      default: '{0} items selected'\n    },\n    maxSelectedLabels: {\n      type: Number,\n      default: null\n    },\n    selectionLimit: {\n      type: Number,\n      default: null\n    },\n    showToggleAll: {\n      type: Boolean,\n      default: true\n    },\n    loading: {\n      type: Boolean,\n      default: false\n    },\n    checkboxIcon: {\n      type: String,\n      default: 'pi pi-check'\n    },\n    closeIcon: {\n      type: String,\n      default: 'pi pi-times'\n    },\n    dropdownIcon: {\n      type: String,\n      default: 'pi pi-chevron-down'\n    },\n    filterIcon: {\n      type: String,\n      default: 'pi pi-search'\n    },\n    loadingIcon: {\n      type: String,\n      default: 'pi pi-spinner pi-spin'\n    },\n    removeTokenIcon: {\n      type: String,\n      default: 'pi pi-times-circle'\n    },\n    selectAll: {\n      type: Boolean,\n      default: null\n    },\n    resetFilterOnHide: {\n      type: Boolean,\n      default: false\n    },\n    virtualScrollerOptions: {\n      type: Object,\n      default: null\n    },\n    autoOptionFocus: {\n      type: Boolean,\n      default: true\n    },\n    autoFilterFocus: {\n      type: Boolean,\n      default: false\n    },\n    filterMessage: {\n      type: String,\n      default: null\n    },\n    selectionMessage: {\n      type: String,\n      default: null\n    },\n    emptySelectionMessage: {\n      type: String,\n      default: null\n    },\n    emptyFilterMessage: {\n      type: String,\n      default: null\n    },\n    emptyMessage: {\n      type: String,\n      default: null\n    },\n    tabindex: {\n      type: Number,\n      default: 0\n    },\n    'aria-label': {\n      type: String,\n      default: null\n    },\n    'aria-labelledby': {\n      type: String,\n      default: null\n    }\n  },\n  outsideClickListener: null,\n  scrollHandler: null,\n  resizeListener: null,\n  overlay: null,\n  list: null,\n  virtualScroller: null,\n  startRangeIndex: -1,\n  searchTimeout: null,\n  searchValue: '',\n  selectOnFocus: false,\n  focusOnHover: false,\n\n  data() {\n    return {\n      id: this.$attrs.id,\n      focused: false,\n      focusedOptionIndex: -1,\n      headerCheckboxFocused: false,\n      filterValue: null,\n      overlayVisible: false\n    };\n  },\n\n  watch: {\n    '$attrs.id': function (newValue) {\n      this.id = newValue || UniqueComponentId();\n    },\n\n    options() {\n      this.autoUpdateModel();\n    }\n\n  },\n\n  mounted() {\n    this.id = this.id || UniqueComponentId();\n    this.autoUpdateModel();\n  },\n\n  beforeUnmount() {\n    this.unbindOutsideClickListener();\n    this.unbindResizeListener();\n\n    if (this.scrollHandler) {\n      this.scrollHandler.destroy();\n      this.scrollHandler = null;\n    }\n\n    if (this.overlay) {\n      ZIndexUtils.clear(this.overlay);\n      this.overlay = null;\n    }\n  },\n\n  methods: {\n    getOptionIndex(index, fn) {\n      return this.virtualScrollerDisabled ? index : fn && fn(index)['index'];\n    },\n\n    getOptionLabel(option) {\n      return this.optionLabel ? ObjectUtils.resolveFieldData(option, this.optionLabel) : option;\n    },\n\n    getOptionValue(option) {\n      return this.optionValue ? ObjectUtils.resolveFieldData(option, this.optionValue) : option;\n    },\n\n    getOptionRenderKey(option) {\n      return this.dataKey ? ObjectUtils.resolveFieldData(option, this.dataKey) : this.getOptionLabel(option);\n    },\n\n    isOptionDisabled(option) {\n      if (this.maxSelectionLimitReached && !this.isSelected(option)) {\n        return true;\n      }\n\n      return this.optionDisabled ? ObjectUtils.resolveFieldData(option, this.optionDisabled) : false;\n    },\n\n    isOptionGroup(option) {\n      return this.optionGroupLabel && option.optionGroup && option.group;\n    },\n\n    getOptionGroupLabel(optionGroup) {\n      return ObjectUtils.resolveFieldData(optionGroup, this.optionGroupLabel);\n    },\n\n    getOptionGroupChildren(optionGroup) {\n      return ObjectUtils.resolveFieldData(optionGroup, this.optionGroupChildren);\n    },\n\n    getAriaPosInset(index) {\n      return (this.optionGroupLabel ? index - this.visibleOptions.slice(0, index).filter(option => this.isOptionGroup(option)).length : index) + 1;\n    },\n\n    show(isFocus) {\n      this.$emit('before-show');\n      this.overlayVisible = true;\n      this.focusedOptionIndex = this.focusedOptionIndex !== -1 ? this.focusedOptionIndex : this.autoOptionFocus ? this.findFirstFocusedOptionIndex() : -1;\n      isFocus && DomHandler.focus(this.$refs.focusInput);\n    },\n\n    hide(isFocus) {\n      const _hide = () => {\n        this.$emit('before-hide');\n        this.overlayVisible = false;\n        this.focusedOptionIndex = -1;\n        this.searchValue = '';\n        this.resetFilterOnHide && (this.filterValue = null);\n        isFocus && DomHandler.focus(this.$refs.focusInput);\n      };\n\n      setTimeout(() => {\n        _hide();\n      }, 0); // For ScreenReaders\n    },\n\n    onFocus(event) {\n      if (this.disabled) {\n        // For ScreenReaders\n        return;\n      }\n\n      this.focused = true;\n      this.focusedOptionIndex = this.focusedOptionIndex !== -1 ? this.focusedOptionIndex : this.overlayVisible && this.autoOptionFocus ? this.findFirstFocusedOptionIndex() : -1;\n      this.overlayVisible && this.scrollInView(this.focusedOptionIndex);\n      this.$emit('focus', event);\n    },\n\n    onBlur(event) {\n      this.focused = false;\n      this.focusedOptionIndex = -1;\n      this.searchValue = '';\n      this.$emit('blur', event);\n    },\n\n    onKeyDown(event) {\n      if (this.disabled) {\n        event.preventDefault();\n        return;\n      }\n\n      const metaKey = event.metaKey || event.ctrlKey;\n\n      switch (event.code) {\n        case 'ArrowDown':\n          this.onArrowDownKey(event);\n          break;\n\n        case 'ArrowUp':\n          this.onArrowUpKey(event);\n          break;\n\n        case 'Home':\n          this.onHomeKey(event);\n          break;\n\n        case 'End':\n          this.onEndKey(event);\n          break;\n\n        case 'PageDown':\n          this.onPageDownKey(event);\n          break;\n\n        case 'PageUp':\n          this.onPageUpKey(event);\n          break;\n\n        case 'Enter':\n        case 'Space':\n          this.onEnterKey(event);\n          break;\n\n        case 'Escape':\n          this.onEscapeKey(event);\n          break;\n\n        case 'Tab':\n          this.onTabKey(event);\n          break;\n\n        case 'ShiftLeft':\n        case 'ShiftRight':\n          this.onShiftKey(event);\n          break;\n\n        default:\n          if (event.code === 'KeyA' && metaKey) {\n            const value = this.visibleOptions.filter(option => this.isValidOption(option)).map(option => this.getOptionValue(option));\n            this.updateModel(event, value);\n            event.preventDefault();\n            break;\n          }\n\n          if (!metaKey && ObjectUtils.isPrintableCharacter(event.key)) {\n            !this.overlayVisible && this.show();\n            this.searchOptions(event);\n            event.preventDefault();\n          }\n\n          break;\n      }\n    },\n\n    onContainerClick(event) {\n      if (this.disabled || this.loading) {\n        return;\n      }\n\n      if (!this.overlay || !this.overlay.contains(event.target)) {\n        this.overlayVisible ? this.hide(true) : this.show(true);\n      }\n    },\n\n    onFirstHiddenFocus(event) {\n      const focusableEl = event.relatedTarget === this.$refs.focusInput ? DomHandler.getFirstFocusableElement(this.overlay, ':not(.p-hidden-focusable)') : this.$refs.focusInput;\n      DomHandler.focus(focusableEl);\n    },\n\n    onLastHiddenFocus(event) {\n      const focusableEl = event.relatedTarget === this.$refs.focusInput ? DomHandler.getLastFocusableElement(this.overlay, ':not(.p-hidden-focusable)') : this.$refs.focusInput;\n      DomHandler.focus(focusableEl);\n    },\n\n    onCloseClick() {\n      this.hide(true);\n    },\n\n    onHeaderCheckboxFocus() {\n      this.headerCheckboxFocused = true;\n    },\n\n    onHeaderCheckboxBlur() {\n      this.headerCheckboxFocused = false;\n    },\n\n    onOptionSelect(event, option, index = -1, isFocus = false) {\n      if (this.disabled || this.isOptionDisabled(option)) {\n        return;\n      }\n\n      let selected = this.isSelected(option);\n      let value = null;\n      if (selected) value = this.modelValue.filter(val => !ObjectUtils.equals(val, this.getOptionValue(option), this.equalityKey));else value = [...(this.modelValue || []), this.getOptionValue(option)];\n      this.updateModel(event, value);\n      index !== -1 && (this.focusedOptionIndex = index);\n      isFocus && DomHandler.focus(this.$refs.focusInput);\n    },\n\n    onOptionMouseMove(event, index) {\n      if (this.focusOnHover) {\n        this.changeFocusedOptionIndex(event, index);\n      }\n    },\n\n    onOptionSelectRange(event, start = -1, end = -1) {\n      start === -1 && (start = this.findNearestSelectedOptionIndex(end, true));\n      end === -1 && (end = this.findNearestSelectedOptionIndex(start));\n\n      if (start !== -1 && end !== -1) {\n        const rangeStart = Math.min(start, end);\n        const rangeEnd = Math.max(start, end);\n        const value = this.visibleOptions.slice(rangeStart, rangeEnd + 1).filter(option => this.isValidOption(option)).map(option => this.getOptionValue(option));\n        this.updateModel(event, value);\n      }\n    },\n\n    onFilterChange(event) {\n      const value = event.target.value;\n      this.filterValue = value;\n      this.focusedOptionIndex = -1;\n      this.$emit('filter', {\n        originalEvent: event,\n        value\n      });\n      !this.virtualScrollerDisabled && this.virtualScroller.scrollToIndex(0);\n    },\n\n    onFilterKeyDown(event) {\n      switch (event.code) {\n        case 'ArrowDown':\n          this.onArrowDownKey(event);\n          break;\n\n        case 'ArrowUp':\n          this.onArrowUpKey(event, true);\n          break;\n\n        case 'ArrowLeft':\n        case 'ArrowRight':\n          this.onArrowLeftKey(event, true);\n          break;\n\n        case 'Home':\n          this.onHomeKey(event, true);\n          break;\n\n        case 'End':\n          this.onEndKey(event, true);\n          break;\n\n        case 'Enter':\n          this.onEnterKey(event);\n          break;\n\n        case 'Escape':\n          this.onEscapeKey(event);\n          break;\n\n        case 'Tab':\n          this.onTabKey(event, true);\n          break;\n      }\n    },\n\n    onFilterBlur() {\n      this.focusedOptionIndex = -1;\n    },\n\n    onFilterUpdated() {\n      if (this.overlayVisible) {\n        this.alignOverlay();\n      }\n    },\n\n    onOverlayClick(event) {\n      OverlayEventBus.emit('overlay-click', {\n        originalEvent: event,\n        target: this.$el\n      });\n    },\n\n    onOverlayKeyDown(event) {\n      switch (event.code) {\n        case 'Escape':\n          this.onEscapeKey(event);\n          break;\n      }\n    },\n\n    onArrowDownKey(event) {\n      const optionIndex = this.focusedOptionIndex !== -1 ? this.findNextOptionIndex(this.focusedOptionIndex) : this.findFirstFocusedOptionIndex();\n\n      if (event.shiftKey) {\n        this.onOptionSelectRange(event, this.startRangeIndex, optionIndex);\n      }\n\n      this.changeFocusedOptionIndex(event, optionIndex);\n      !this.overlayVisible && this.show();\n      event.preventDefault();\n    },\n\n    onArrowUpKey(event, pressedInInputText = false) {\n      if (event.altKey && !pressedInInputText) {\n        if (this.focusedOptionIndex !== -1) {\n          this.onOptionSelect(event, this.visibleOptions[this.focusedOptionIndex]);\n        }\n\n        this.overlayVisible && this.hide();\n        event.preventDefault();\n      } else {\n        const optionIndex = this.focusedOptionIndex !== -1 ? this.findPrevOptionIndex(this.focusedOptionIndex) : this.findLastFocusedOptionIndex();\n\n        if (event.shiftKey) {\n          this.onOptionSelectRange(event, optionIndex, this.startRangeIndex);\n        }\n\n        this.changeFocusedOptionIndex(event, optionIndex);\n        !this.overlayVisible && this.show();\n        event.preventDefault();\n      }\n    },\n\n    onArrowLeftKey(event, pressedInInputText = false) {\n      pressedInInputText && (this.focusedOptionIndex = -1);\n    },\n\n    onHomeKey(event, pressedInInputText = false) {\n      const {\n        currentTarget\n      } = event;\n\n      if (pressedInInputText) {\n        const len = currentTarget.value.length;\n        currentTarget.setSelectionRange(0, event.shiftKey ? len : 0);\n        this.focusedOptionIndex = -1;\n      } else {\n        let metaKey = event.metaKey || event.ctrlKey;\n        let optionIndex = this.findFirstOptionIndex();\n\n        if (event.shiftKey && metaKey) {\n          this.onOptionSelectRange(event, optionIndex, this.startRangeIndex);\n        }\n\n        this.changeFocusedOptionIndex(event, optionIndex);\n        !this.overlayVisible && this.show();\n      }\n\n      event.preventDefault();\n    },\n\n    onEndKey(event, pressedInInputText = false) {\n      const {\n        currentTarget\n      } = event;\n\n      if (pressedInInputText) {\n        const len = currentTarget.value.length;\n        currentTarget.setSelectionRange(event.shiftKey ? 0 : len, len);\n        this.focusedOptionIndex = -1;\n      } else {\n        let metaKey = event.metaKey || event.ctrlKey;\n        let optionIndex = this.findLastOptionIndex();\n\n        if (event.shiftKey && metaKey) {\n          this.onOptionSelectRange(event, this.startRangeIndex, optionIndex);\n        }\n\n        this.changeFocusedOptionIndex(event, optionIndex);\n        !this.overlayVisible && this.show();\n      }\n\n      event.preventDefault();\n    },\n\n    onPageUpKey(event) {\n      this.scrollInView(0);\n      event.preventDefault();\n    },\n\n    onPageDownKey(event) {\n      this.scrollInView(this.visibleOptions.length - 1);\n      event.preventDefault();\n    },\n\n    onEnterKey(event) {\n      if (!this.overlayVisible) {\n        this.onArrowDownKey(event);\n      } else {\n        if (this.focusedOptionIndex !== -1) {\n          if (event.shiftKey) this.onOptionSelectRange(event, this.focusedOptionIndex);else this.onOptionSelect(event, this.visibleOptions[this.focusedOptionIndex]);\n        }\n      }\n\n      event.preventDefault();\n    },\n\n    onEscapeKey(event) {\n      this.overlayVisible && this.hide(true);\n      event.preventDefault();\n    },\n\n    onTabKey(event, pressedInInputText = false) {\n      if (!pressedInInputText) {\n        if (this.overlayVisible && this.hasFocusableElements()) {\n          DomHandler.focus(event.shiftKey ? this.$refs.lastHiddenFocusableElementOnOverlay : this.$refs.firstHiddenFocusableElementOnOverlay);\n          event.preventDefault();\n        } else {\n          if (this.focusedOptionIndex !== -1) {\n            this.onOptionSelect(event, this.visibleOptions[this.focusedOptionIndex]);\n          }\n\n          this.overlayVisible && this.hide(this.filter);\n        }\n      }\n    },\n\n    onShiftKey() {\n      this.startRangeIndex = this.focusedOptionIndex;\n    },\n\n    onOverlayEnter(el) {\n      ZIndexUtils.set('overlay', el, this.$primevue.config.zIndex.overlay);\n      this.alignOverlay();\n      this.scrollInView();\n      this.autoFilterFocus && DomHandler.focus(this.$refs.filterInput);\n    },\n\n    onOverlayAfterEnter() {\n      this.bindOutsideClickListener();\n      this.bindScrollListener();\n      this.bindResizeListener();\n      this.$emit('show');\n    },\n\n    onOverlayLeave() {\n      this.unbindOutsideClickListener();\n      this.unbindScrollListener();\n      this.unbindResizeListener();\n      this.$emit('hide');\n      this.overlay = null;\n    },\n\n    onOverlayAfterLeave(el) {\n      ZIndexUtils.clear(el);\n    },\n\n    alignOverlay() {\n      if (this.appendTo === 'self') {\n        DomHandler.relativePosition(this.overlay, this.$el);\n      } else {\n        this.overlay.style.minWidth = DomHandler.getOuterWidth(this.$el) + 'px';\n        DomHandler.absolutePosition(this.overlay, this.$el);\n      }\n    },\n\n    bindOutsideClickListener() {\n      if (!this.outsideClickListener) {\n        this.outsideClickListener = event => {\n          if (this.overlayVisible && this.isOutsideClicked(event)) {\n            this.hide();\n          }\n        };\n\n        document.addEventListener('click', this.outsideClickListener);\n      }\n    },\n\n    unbindOutsideClickListener() {\n      if (this.outsideClickListener) {\n        document.removeEventListener('click', this.outsideClickListener);\n        this.outsideClickListener = null;\n      }\n    },\n\n    bindScrollListener() {\n      if (!this.scrollHandler) {\n        this.scrollHandler = new ConnectedOverlayScrollHandler(this.$refs.container, () => {\n          if (this.overlayVisible) {\n            this.hide();\n          }\n        });\n      }\n\n      this.scrollHandler.bindScrollListener();\n    },\n\n    unbindScrollListener() {\n      if (this.scrollHandler) {\n        this.scrollHandler.unbindScrollListener();\n      }\n    },\n\n    bindResizeListener() {\n      if (!this.resizeListener) {\n        this.resizeListener = () => {\n          if (this.overlayVisible && !DomHandler.isTouchDevice()) {\n            this.hide();\n          }\n        };\n\n        window.addEventListener('resize', this.resizeListener);\n      }\n    },\n\n    unbindResizeListener() {\n      if (this.resizeListener) {\n        window.removeEventListener('resize', this.resizeListener);\n        this.resizeListener = null;\n      }\n    },\n\n    isOutsideClicked(event) {\n      return !(this.$el.isSameNode(event.target) || this.$el.contains(event.target) || this.overlay && this.overlay.contains(event.target));\n    },\n\n    getLabelByValue(value) {\n      const options = this.optionGroupLabel ? this.flatOptions(this.options) : this.options || [];\n      const matchedOption = options.find(option => !this.isOptionGroup(option) && ObjectUtils.equals(this.getOptionValue(option), value, this.equalityKey));\n      return matchedOption ? this.getOptionLabel(matchedOption) : null;\n    },\n\n    getSelectedItemsLabel() {\n      let pattern = /{(.*?)}/;\n\n      if (pattern.test(this.selectedItemsLabel)) {\n        return this.selectedItemsLabel.replace(this.selectedItemsLabel.match(pattern)[0], this.modelValue.length + '');\n      }\n\n      return this.selectedItemsLabel;\n    },\n\n    onToggleAll(event) {\n      if (this.selectAll !== null) {\n        this.$emit('selectall-change', {\n          originalEvent: event,\n          checked: !this.allSelected\n        });\n      } else {\n        const value = this.allSelected ? [] : this.visibleOptions.filter(option => this.isValidOption(option)).map(option => this.getOptionValue(option));\n        this.updateModel(event, value);\n      }\n\n      this.headerCheckboxFocused = true;\n    },\n\n    removeOption(event, optionValue) {\n      let value = this.modelValue.filter(val => !ObjectUtils.equals(val, optionValue, this.equalityKey));\n      this.updateModel(event, value);\n    },\n\n    clearFilter() {\n      this.filterValue = null;\n    },\n\n    hasFocusableElements() {\n      return DomHandler.getFocusableElements(this.overlay, ':not(.p-hidden-focusable)').length > 0;\n    },\n\n    isOptionMatched(option) {\n      return this.isValidOption(option) && this.getOptionLabel(option).toLocaleLowerCase(this.filterLocale).startsWith(this.searchValue.toLocaleLowerCase(this.filterLocale));\n    },\n\n    isValidOption(option) {\n      return option && !(this.isOptionDisabled(option) || this.isOptionGroup(option));\n    },\n\n    isValidSelectedOption(option) {\n      return this.isValidOption(option) && this.isSelected(option);\n    },\n\n    isSelected(option) {\n      const optionValue = this.getOptionValue(option);\n      return (this.modelValue || []).some(value => ObjectUtils.equals(value, optionValue, this.equalityKey));\n    },\n\n    findFirstOptionIndex() {\n      return this.visibleOptions.findIndex(option => this.isValidOption(option));\n    },\n\n    findLastOptionIndex() {\n      return ObjectUtils.findLastIndex(this.visibleOptions, option => this.isValidOption(option));\n    },\n\n    findNextOptionIndex(index) {\n      const matchedOptionIndex = index < this.visibleOptions.length - 1 ? this.visibleOptions.slice(index + 1).findIndex(option => this.isValidOption(option)) : -1;\n      return matchedOptionIndex > -1 ? matchedOptionIndex + index + 1 : index;\n    },\n\n    findPrevOptionIndex(index) {\n      const matchedOptionIndex = index > 0 ? ObjectUtils.findLastIndex(this.visibleOptions.slice(0, index), option => this.isValidOption(option)) : -1;\n      return matchedOptionIndex > -1 ? matchedOptionIndex : index;\n    },\n\n    findFirstSelectedOptionIndex() {\n      return this.hasSelectedOption ? this.visibleOptions.findIndex(option => this.isValidSelectedOption(option)) : -1;\n    },\n\n    findLastSelectedOptionIndex() {\n      return this.hasSelectedOption ? ObjectUtils.findLastIndex(this.visibleOptions, option => this.isValidSelectedOption(option)) : -1;\n    },\n\n    findNextSelectedOptionIndex(index) {\n      const matchedOptionIndex = this.hasSelectedOption && index < this.visibleOptions.length - 1 ? this.visibleOptions.slice(index + 1).findIndex(option => this.isValidSelectedOption(option)) : -1;\n      return matchedOptionIndex > -1 ? matchedOptionIndex + index + 1 : -1;\n    },\n\n    findPrevSelectedOptionIndex(index) {\n      const matchedOptionIndex = this.hasSelectedOption && index > 0 ? ObjectUtils.findLastIndex(this.visibleOptions.slice(0, index), option => this.isValidSelectedOption(option)) : -1;\n      return matchedOptionIndex > -1 ? matchedOptionIndex : -1;\n    },\n\n    findNearestSelectedOptionIndex(index, firstCheckUp = false) {\n      let matchedOptionIndex = -1;\n\n      if (this.hasSelectedOption) {\n        if (firstCheckUp) {\n          matchedOptionIndex = this.findPrevSelectedOptionIndex(index);\n          matchedOptionIndex = matchedOptionIndex === -1 ? this.findNextSelectedOptionIndex(index) : matchedOptionIndex;\n        } else {\n          matchedOptionIndex = this.findNextSelectedOptionIndex(index);\n          matchedOptionIndex = matchedOptionIndex === -1 ? this.findPrevSelectedOptionIndex(index) : matchedOptionIndex;\n        }\n      }\n\n      return matchedOptionIndex > -1 ? matchedOptionIndex : index;\n    },\n\n    findFirstFocusedOptionIndex() {\n      const selectedIndex = this.findFirstSelectedOptionIndex();\n      return selectedIndex < 0 ? this.findFirstOptionIndex() : selectedIndex;\n    },\n\n    findLastFocusedOptionIndex() {\n      const selectedIndex = this.findLastSelectedOptionIndex();\n      return selectedIndex < 0 ? this.findLastOptionIndex() : selectedIndex;\n    },\n\n    searchOptions(event) {\n      this.searchValue = (this.searchValue || '') + event.key;\n      let optionIndex = -1;\n\n      if (this.focusedOptionIndex !== -1) {\n        optionIndex = this.visibleOptions.slice(this.focusedOptionIndex).findIndex(option => this.isOptionMatched(option));\n        optionIndex = optionIndex === -1 ? this.visibleOptions.slice(0, this.focusedOptionIndex).findIndex(option => this.isOptionMatched(option)) : optionIndex + this.focusedOptionIndex;\n      } else {\n        optionIndex = this.visibleOptions.findIndex(option => this.isOptionMatched(option));\n      }\n\n      if (optionIndex === -1 && this.focusedOptionIndex === -1) {\n        optionIndex = this.findFirstFocusedOptionIndex();\n      }\n\n      if (optionIndex !== -1) {\n        this.changeFocusedOptionIndex(event, optionIndex);\n      }\n\n      if (this.searchTimeout) {\n        clearTimeout(this.searchTimeout);\n      }\n\n      this.searchTimeout = setTimeout(() => {\n        this.searchValue = '';\n        this.searchTimeout = null;\n      }, 500);\n    },\n\n    changeFocusedOptionIndex(event, index) {\n      if (this.focusedOptionIndex !== index) {\n        this.focusedOptionIndex = index;\n        this.scrollInView();\n      }\n    },\n\n    scrollInView(index = -1) {\n      const id = index !== -1 ? `${this.id}_${index}` : this.focusedOptionId;\n      const element = DomHandler.findSingle(this.list, `li[id=\"${id}\"]`);\n\n      if (element) {\n        element.scrollIntoView && element.scrollIntoView({\n          block: 'nearest',\n          inline: 'nearest'\n        });\n      } else if (!this.virtualScrollerDisabled) {\n        this.virtualScroller && this.virtualScroller.scrollToIndex(index !== -1 ? index : this.focusedOptionIndex);\n      }\n    },\n\n    autoUpdateModel() {\n      if (this.selectOnFocus && this.autoOptionFocus && !this.hasSelectedOption) {\n        this.focusedOptionIndex = this.findFirstFocusedOptionIndex();\n        const value = this.getOptionValue(this.visibleOptions[this.focusedOptionIndex]);\n        this.updateModel(null, [value]);\n      }\n    },\n\n    updateModel(event, value) {\n      this.$emit('update:modelValue', value);\n      this.$emit('change', {\n        originalEvent: event,\n        value\n      });\n    },\n\n    flatOptions(options) {\n      return (options || []).reduce((result, option, index) => {\n        result.push({\n          optionGroup: option,\n          group: true,\n          index\n        });\n        const optionGroupChildren = this.getOptionGroupChildren(option);\n        optionGroupChildren && optionGroupChildren.forEach(o => result.push(o));\n        return result;\n      }, []);\n    },\n\n    overlayRef(el) {\n      this.overlay = el;\n    },\n\n    listRef(el, contentRef) {\n      this.list = el;\n      contentRef && contentRef(el); // For VirtualScroller\n    },\n\n    virtualScrollerRef(el) {\n      this.virtualScroller = el;\n    }\n\n  },\n  computed: {\n    containerClass() {\n      return ['p-multiselect p-component p-inputwrapper', {\n        'p-multiselect-chip': this.display === 'chip',\n        'p-disabled': this.disabled,\n        'p-focus': this.focused,\n        'p-inputwrapper-filled': this.modelValue && this.modelValue.length,\n        'p-inputwrapper-focus': this.focused || this.overlayVisible,\n        'p-overlay-open': this.overlayVisible\n      }];\n    },\n\n    labelClass() {\n      return ['p-multiselect-label', {\n        'p-placeholder': this.label === this.placeholder,\n        'p-multiselect-label-empty': !this.placeholder && (!this.modelValue || this.modelValue.length === 0)\n      }];\n    },\n\n    dropdownIconClass() {\n      return ['p-multiselect-trigger-icon', this.loading ? this.loadingIcon : this.dropdownIcon];\n    },\n\n    panelStyleClass() {\n      return ['p-multiselect-panel p-component', this.panelClass, {\n        'p-input-filled': this.$primevue.config.inputStyle === 'filled',\n        'p-ripple-disabled': this.$primevue.config.ripple === false\n      }];\n    },\n\n    headerCheckboxClass() {\n      return ['p-checkbox p-component', {\n        'p-checkbox-checked': this.allSelected,\n        'p-checkbox-focused': this.headerCheckboxFocused\n      }];\n    },\n\n    visibleOptions() {\n      const options = this.optionGroupLabel ? this.flatOptions(this.options) : this.options || [];\n\n      if (this.filterValue) {\n        const filteredOptions = FilterService.filter(options, this.searchFields, this.filterValue, this.filterMatchMode, this.filterLocale);\n\n        if (this.optionGroupLabel) {\n          const optionGroups = this.options || [];\n          const filtered = [];\n          optionGroups.forEach(group => {\n            const filteredItems = group.items.filter(item => filteredOptions.includes(item));\n            if (filteredItems.length > 0) filtered.push({ ...group,\n              items: [...filteredItems]\n            });\n          });\n          return this.flatOptions(filtered);\n        }\n\n        return filteredOptions;\n      }\n\n      return options;\n    },\n\n    label() {\n      // TODO: Refactor\n      let label;\n\n      if (this.modelValue && this.modelValue.length) {\n        if (ObjectUtils.isNotEmpty(this.maxSelectedLabels) && this.modelValue.length > this.maxSelectedLabels) {\n          return this.getSelectedItemsLabel();\n        } else {\n          label = '';\n\n          for (let i = 0; i < this.modelValue.length; i++) {\n            if (i !== 0) {\n              label += ', ';\n            }\n\n            label += this.getLabelByValue(this.modelValue[i]);\n          }\n        }\n      } else {\n        label = this.placeholder;\n      }\n\n      return label;\n    },\n\n    chipSelectedItems() {\n      return ObjectUtils.isNotEmpty(this.maxSelectedLabels) && this.modelValue && this.modelValue.length > this.maxSelectedLabels ? this.modelValue.slice(0, this.maxSelectedLabels) : this.modelValue;\n    },\n\n    allSelected() {\n      return this.selectAll !== null ? this.selectAll : ObjectUtils.isNotEmpty(this.visibleOptions) && this.visibleOptions.every(option => this.isOptionGroup(option) || this.isOptionDisabled(option) || this.isSelected(option));\n    },\n\n    hasSelectedOption() {\n      return ObjectUtils.isNotEmpty(this.modelValue);\n    },\n\n    equalityKey() {\n      return this.optionValue ? null : this.dataKey;\n    },\n\n    searchFields() {\n      return this.filterFields || [this.optionLabel];\n    },\n\n    maxSelectionLimitReached() {\n      return this.selectionLimit && this.modelValue && this.modelValue.length === this.selectionLimit;\n    },\n\n    filterResultMessageText() {\n      return ObjectUtils.isNotEmpty(this.visibleOptions) ? this.filterMessageText.replaceAll('{0}', this.visibleOptions.length) : this.emptyFilterMessageText;\n    },\n\n    filterMessageText() {\n      return this.filterMessage || this.$primevue.config.locale.searchMessage || '';\n    },\n\n    emptyFilterMessageText() {\n      return this.emptyFilterMessage || this.$primevue.config.locale.emptySearchMessage || this.$primevue.config.locale.emptyFilterMessage || '';\n    },\n\n    emptyMessageText() {\n      return this.emptyMessage || this.$primevue.config.locale.emptyMessage || '';\n    },\n\n    selectionMessageText() {\n      return this.selectionMessage || this.$primevue.config.locale.selectionMessage || '';\n    },\n\n    emptySelectionMessageText() {\n      return this.emptySelectionMessage || this.$primevue.config.locale.emptySelectionMessage || '';\n    },\n\n    selectedMessageText() {\n      return this.hasSelectedOption ? this.selectionMessageText.replaceAll('{0}', this.modelValue.length) : this.emptySelectionMessageText;\n    },\n\n    focusedOptionId() {\n      return this.focusedOptionIndex !== -1 ? `${this.id}_${this.focusedOptionIndex}` : null;\n    },\n\n    ariaSetSize() {\n      return this.visibleOptions.filter(option => !this.isOptionGroup(option)).length;\n    },\n\n    toggleAllAriaLabel() {\n      return this.$primevue.config.locale.aria ? this.$primevue.config.locale.aria[this.allSelected ? 'selectAll' : 'unselectAll'] : undefined;\n    },\n\n    closeAriaLabel() {\n      return this.$primevue.config.locale.aria ? this.$primevue.config.locale.aria.close : undefined;\n    },\n\n    virtualScrollerDisabled() {\n      return !this.virtualScrollerOptions;\n    }\n\n  },\n  directives: {\n    ripple: Ripple\n  },\n  components: {\n    VirtualScroller: VirtualScroller,\n    Portal: Portal\n  }\n};\nconst _hoisted_1 = {\n  class: \"p-hidden-accessible\"\n};\nconst _hoisted_2 = [\"id\", \"disabled\", \"placeholder\", \"tabindex\", \"aria-label\", \"aria-labelledby\", \"aria-expanded\", \"aria-controls\", \"aria-activedescendant\"];\nconst _hoisted_3 = {\n  class: \"p-multiselect-label-container\"\n};\nconst _hoisted_4 = {\n  class: \"p-multiselect-token-label\"\n};\nconst _hoisted_5 = [\"onClick\"];\nconst _hoisted_6 = {\n  class: \"p-multiselect-trigger\"\n};\nconst _hoisted_7 = {\n  key: 0,\n  class: \"p-multiselect-header\"\n};\nconst _hoisted_8 = {\n  class: \"p-hidden-accessible\"\n};\nconst _hoisted_9 = [\"checked\", \"aria-label\"];\nconst _hoisted_10 = {\n  key: 1,\n  class: \"p-multiselect-filter-container\"\n};\nconst _hoisted_11 = [\"value\", \"placeholder\", \"aria-owns\", \"aria-activedescendant\"];\nconst _hoisted_12 = {\n  key: 2,\n  role: \"status\",\n  \"aria-live\": \"polite\",\n  class: \"p-hidden-accessible\"\n};\nconst _hoisted_13 = [\"aria-label\"];\nconst _hoisted_14 = [\"id\"];\nconst _hoisted_15 = [\"id\"];\nconst _hoisted_16 = [\"id\", \"aria-label\", \"aria-selected\", \"aria-disabled\", \"aria-setsize\", \"aria-posinset\", \"onClick\", \"onMousemove\"];\nconst _hoisted_17 = {\n  class: \"p-checkbox p-component\"\n};\nconst _hoisted_18 = {\n  key: 0,\n  class: \"p-multiselect-empty-message\",\n  role: \"option\"\n};\nconst _hoisted_19 = {\n  key: 1,\n  class: \"p-multiselect-empty-message\",\n  role: \"option\"\n};\nconst _hoisted_20 = {\n  key: 1,\n  role: \"status\",\n  \"aria-live\": \"polite\",\n  class: \"p-hidden-accessible\"\n};\nconst _hoisted_21 = {\n  role: \"status\",\n  \"aria-live\": \"polite\",\n  class: \"p-hidden-accessible\"\n};\n\nfunction render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_VirtualScroller = resolveComponent(\"VirtualScroller\");\n\n  const _component_Portal = resolveComponent(\"Portal\");\n\n  const _directive_ripple = resolveDirective(\"ripple\");\n\n  return openBlock(), createElementBlock(\"div\", {\n    ref: \"container\",\n    class: normalizeClass($options.containerClass),\n    onClick: _cache[15] || (_cache[15] = (...args) => $options.onContainerClick && $options.onContainerClick(...args))\n  }, [createElementVNode(\"div\", _hoisted_1, [createElementVNode(\"input\", mergeProps({\n    ref: \"focusInput\",\n    id: $props.inputId,\n    type: \"text\",\n    readonly: \"\",\n    disabled: $props.disabled,\n    placeholder: $props.placeholder,\n    tabindex: !$props.disabled ? $props.tabindex : -1,\n    role: \"combobox\",\n    \"aria-label\": _ctx.ariaLabel,\n    \"aria-labelledby\": _ctx.ariaLabelledby,\n    \"aria-haspopup\": \"listbox\",\n    \"aria-expanded\": $data.overlayVisible,\n    \"aria-controls\": $data.id + '_list',\n    \"aria-activedescendant\": $data.focused ? $options.focusedOptionId : undefined,\n    onFocus: _cache[0] || (_cache[0] = (...args) => $options.onFocus && $options.onFocus(...args)),\n    onBlur: _cache[1] || (_cache[1] = (...args) => $options.onBlur && $options.onBlur(...args)),\n    onKeydown: _cache[2] || (_cache[2] = (...args) => $options.onKeyDown && $options.onKeyDown(...args))\n  }, $props.inputProps), null, 16, _hoisted_2)]), createElementVNode(\"div\", _hoisted_3, [createElementVNode(\"div\", {\n    class: normalizeClass($options.labelClass)\n  }, [renderSlot(_ctx.$slots, \"value\", {\n    value: $props.modelValue,\n    placeholder: $props.placeholder\n  }, () => [$props.display === 'comma' ? (openBlock(), createElementBlock(Fragment, {\n    key: 0\n  }, [createTextVNode(toDisplayString($options.label || 'empty'), 1)], 64)) : $props.display === 'chip' ? (openBlock(), createElementBlock(Fragment, {\n    key: 1\n  }, [(openBlock(true), createElementBlock(Fragment, null, renderList($options.chipSelectedItems, item => {\n    return openBlock(), createElementBlock(\"div\", {\n      key: $options.getLabelByValue(item),\n      class: \"p-multiselect-token\"\n    }, [renderSlot(_ctx.$slots, \"chip\", {\n      value: item\n    }, () => [createElementVNode(\"span\", _hoisted_4, toDisplayString($options.getLabelByValue(item)), 1)]), !$props.disabled ? (openBlock(), createElementBlock(\"span\", {\n      key: 0,\n      class: normalizeClass(['p-multiselect-token-icon', $props.removeTokenIcon]),\n      onClick: withModifiers($event => $options.removeOption($event, item), [\"stop\"])\n    }, null, 10, _hoisted_5)) : createCommentVNode(\"\", true)]);\n  }), 128)), !$props.modelValue || $props.modelValue.length === 0 ? (openBlock(), createElementBlock(Fragment, {\n    key: 0\n  }, [createTextVNode(toDisplayString($props.placeholder || 'empty'), 1)], 64)) : createCommentVNode(\"\", true)], 64)) : createCommentVNode(\"\", true)])], 2)]), createElementVNode(\"div\", _hoisted_6, [renderSlot(_ctx.$slots, \"indicator\", {}, () => [createElementVNode(\"span\", {\n    class: normalizeClass($options.dropdownIconClass),\n    \"aria-hidden\": \"true\"\n  }, null, 2)])]), createVNode(_component_Portal, {\n    appendTo: $props.appendTo\n  }, {\n    default: withCtx(() => [createVNode(Transition, {\n      name: \"p-connected-overlay\",\n      onEnter: $options.onOverlayEnter,\n      onAfterEnter: $options.onOverlayAfterEnter,\n      onLeave: $options.onOverlayLeave,\n      onAfterLeave: $options.onOverlayAfterLeave\n    }, {\n      default: withCtx(() => [$data.overlayVisible ? (openBlock(), createElementBlock(\"div\", mergeProps({\n        key: 0,\n        ref: $options.overlayRef,\n        style: $props.panelStyle,\n        class: $options.panelStyleClass,\n        onClick: _cache[13] || (_cache[13] = (...args) => $options.onOverlayClick && $options.onOverlayClick(...args)),\n        onKeydown: _cache[14] || (_cache[14] = (...args) => $options.onOverlayKeyDown && $options.onOverlayKeyDown(...args))\n      }, $props.panelProps), [createElementVNode(\"span\", {\n        ref: \"firstHiddenFocusableElementOnOverlay\",\n        role: \"presentation\",\n        \"aria-hidden\": \"true\",\n        class: \"p-hidden-accessible p-hidden-focusable\",\n        tabindex: 0,\n        onFocus: _cache[3] || (_cache[3] = (...args) => $options.onFirstHiddenFocus && $options.onFirstHiddenFocus(...args))\n      }, null, 544), renderSlot(_ctx.$slots, \"header\", {\n        value: $props.modelValue,\n        options: $options.visibleOptions\n      }), $props.showToggleAll && $props.selectionLimit == null || $props.filter ? (openBlock(), createElementBlock(\"div\", _hoisted_7, [$props.showToggleAll && $props.selectionLimit == null ? (openBlock(), createElementBlock(\"div\", {\n        key: 0,\n        class: normalizeClass($options.headerCheckboxClass),\n        onClick: _cache[6] || (_cache[6] = (...args) => $options.onToggleAll && $options.onToggleAll(...args))\n      }, [createElementVNode(\"div\", _hoisted_8, [createElementVNode(\"input\", {\n        type: \"checkbox\",\n        readonly: \"\",\n        checked: $options.allSelected,\n        \"aria-label\": $options.toggleAllAriaLabel,\n        onFocus: _cache[4] || (_cache[4] = (...args) => $options.onHeaderCheckboxFocus && $options.onHeaderCheckboxFocus(...args)),\n        onBlur: _cache[5] || (_cache[5] = (...args) => $options.onHeaderCheckboxBlur && $options.onHeaderCheckboxBlur(...args))\n      }, null, 40, _hoisted_9)]), createElementVNode(\"div\", {\n        class: normalizeClass(['p-checkbox-box', {\n          'p-highlight': $options.allSelected,\n          'p-focus': $data.headerCheckboxFocused\n        }])\n      }, [createElementVNode(\"span\", {\n        class: normalizeClass(['p-checkbox-icon', {\n          [$props.checkboxIcon]: $options.allSelected\n        }])\n      }, null, 2)], 2)], 2)) : createCommentVNode(\"\", true), $props.filter ? (openBlock(), createElementBlock(\"div\", _hoisted_10, [createElementVNode(\"input\", mergeProps({\n        ref: \"filterInput\",\n        type: \"text\",\n        value: $data.filterValue,\n        onVnodeUpdated: _cache[7] || (_cache[7] = (...args) => $options.onFilterUpdated && $options.onFilterUpdated(...args)),\n        class: \"p-multiselect-filter p-inputtext p-component\",\n        placeholder: $props.filterPlaceholder,\n        role: \"searchbox\",\n        autocomplete: \"off\",\n        \"aria-owns\": $data.id + '_list',\n        \"aria-activedescendant\": $options.focusedOptionId,\n        onKeydown: _cache[8] || (_cache[8] = (...args) => $options.onFilterKeyDown && $options.onFilterKeyDown(...args)),\n        onBlur: _cache[9] || (_cache[9] = (...args) => $options.onFilterBlur && $options.onFilterBlur(...args)),\n        onInput: _cache[10] || (_cache[10] = (...args) => $options.onFilterChange && $options.onFilterChange(...args))\n      }, $props.filterInputProps), null, 16, _hoisted_11), createElementVNode(\"span\", {\n        class: normalizeClass(['p-multiselect-filter-icon', $props.filterIcon])\n      }, null, 2)])) : createCommentVNode(\"\", true), $props.filter ? (openBlock(), createElementBlock(\"span\", _hoisted_12, toDisplayString($options.filterResultMessageText), 1)) : createCommentVNode(\"\", true), withDirectives((openBlock(), createElementBlock(\"button\", mergeProps({\n        class: \"p-multiselect-close p-link\",\n        \"aria-label\": $options.closeAriaLabel,\n        onClick: _cache[11] || (_cache[11] = (...args) => $options.onCloseClick && $options.onCloseClick(...args)),\n        type: \"button\"\n      }, $props.closeButtonProps), [createElementVNode(\"span\", {\n        class: normalizeClass(['p-multiselect-close-icon', $props.closeIcon])\n      }, null, 2)], 16, _hoisted_13)), [[_directive_ripple]])])) : createCommentVNode(\"\", true), createElementVNode(\"div\", {\n        class: \"p-multiselect-items-wrapper\",\n        style: normalizeStyle({\n          'max-height': $options.virtualScrollerDisabled ? $props.scrollHeight : ''\n        })\n      }, [createVNode(_component_VirtualScroller, mergeProps({\n        ref: $options.virtualScrollerRef\n      }, $props.virtualScrollerOptions, {\n        items: $options.visibleOptions,\n        style: {\n          height: $props.scrollHeight\n        },\n        tabindex: -1,\n        disabled: $options.virtualScrollerDisabled\n      }), createSlots({\n        content: withCtx(({\n          styleClass,\n          contentRef,\n          items,\n          getItemOptions,\n          contentStyle,\n          itemSize\n        }) => [createElementVNode(\"ul\", {\n          ref: el => $options.listRef(el, contentRef),\n          id: $data.id + '_list',\n          class: normalizeClass(['p-multiselect-items p-component', styleClass]),\n          style: normalizeStyle(contentStyle),\n          role: \"listbox\",\n          \"aria-multiselectable\": \"true\"\n        }, [(openBlock(true), createElementBlock(Fragment, null, renderList(items, (option, i) => {\n          return openBlock(), createElementBlock(Fragment, {\n            key: $options.getOptionRenderKey(option, $options.getOptionIndex(i, getItemOptions))\n          }, [$options.isOptionGroup(option) ? (openBlock(), createElementBlock(\"li\", {\n            key: 0,\n            id: $data.id + '_' + $options.getOptionIndex(i, getItemOptions),\n            style: normalizeStyle({\n              height: itemSize ? itemSize + 'px' : undefined\n            }),\n            class: \"p-multiselect-item-group\",\n            role: \"option\"\n          }, [renderSlot(_ctx.$slots, \"optiongroup\", {\n            option: option.optionGroup,\n            index: $options.getOptionIndex(i, getItemOptions)\n          }, () => [createTextVNode(toDisplayString($options.getOptionGroupLabel(option.optionGroup)), 1)])], 12, _hoisted_15)) : withDirectives((openBlock(), createElementBlock(\"li\", {\n            key: 1,\n            id: $data.id + '_' + $options.getOptionIndex(i, getItemOptions),\n            style: normalizeStyle({\n              height: itemSize ? itemSize + 'px' : undefined\n            }),\n            class: normalizeClass(['p-multiselect-item', {\n              'p-highlight': $options.isSelected(option),\n              'p-focus': $data.focusedOptionIndex === $options.getOptionIndex(i, getItemOptions),\n              'p-disabled': $options.isOptionDisabled(option)\n            }]),\n            role: \"option\",\n            \"aria-label\": $options.getOptionLabel(option),\n            \"aria-selected\": $options.isSelected(option),\n            \"aria-disabled\": $options.isOptionDisabled(option),\n            \"aria-setsize\": $options.ariaSetSize,\n            \"aria-posinset\": $options.getAriaPosInset($options.getOptionIndex(i, getItemOptions)),\n            onClick: $event => $options.onOptionSelect($event, option, $options.getOptionIndex(i, getItemOptions), true),\n            onMousemove: $event => $options.onOptionMouseMove($event, $options.getOptionIndex(i, getItemOptions))\n          }, [createElementVNode(\"div\", _hoisted_17, [createElementVNode(\"div\", {\n            class: normalizeClass(['p-checkbox-box', {\n              'p-highlight': $options.isSelected(option)\n            }])\n          }, [createElementVNode(\"span\", {\n            class: normalizeClass(['p-checkbox-icon', {\n              [$props.checkboxIcon]: $options.isSelected(option)\n            }])\n          }, null, 2)], 2)]), renderSlot(_ctx.$slots, \"option\", {\n            option: option,\n            index: $options.getOptionIndex(i, getItemOptions)\n          }, () => [createElementVNode(\"span\", null, toDisplayString($options.getOptionLabel(option)), 1)])], 46, _hoisted_16)), [[_directive_ripple]])], 64);\n        }), 128)), $data.filterValue && (!items || items && items.length === 0) ? (openBlock(), createElementBlock(\"li\", _hoisted_18, [renderSlot(_ctx.$slots, \"emptyfilter\", {}, () => [createTextVNode(toDisplayString($options.emptyFilterMessageText), 1)])])) : !$props.options || $props.options && $props.options.length === 0 ? (openBlock(), createElementBlock(\"li\", _hoisted_19, [renderSlot(_ctx.$slots, \"empty\", {}, () => [createTextVNode(toDisplayString($options.emptyMessageText), 1)])])) : createCommentVNode(\"\", true)], 14, _hoisted_14)]),\n        _: 2\n      }, [_ctx.$slots.loader ? {\n        name: \"loader\",\n        fn: withCtx(({\n          options\n        }) => [renderSlot(_ctx.$slots, \"loader\", {\n          options: options\n        })]),\n        key: \"0\"\n      } : undefined]), 1040, [\"items\", \"style\", \"disabled\"])], 4), renderSlot(_ctx.$slots, \"footer\", {\n        value: $props.modelValue,\n        options: $options.visibleOptions\n      }), !$props.options || $props.options && $props.options.length === 0 ? (openBlock(), createElementBlock(\"span\", _hoisted_20, toDisplayString($options.emptyMessageText), 1)) : createCommentVNode(\"\", true), createElementVNode(\"span\", _hoisted_21, toDisplayString($options.selectedMessageText), 1), createElementVNode(\"span\", {\n        ref: \"lastHiddenFocusableElementOnOverlay\",\n        role: \"presentation\",\n        \"aria-hidden\": \"true\",\n        class: \"p-hidden-accessible p-hidden-focusable\",\n        tabindex: 0,\n        onFocus: _cache[12] || (_cache[12] = (...args) => $options.onLastHiddenFocus && $options.onLastHiddenFocus(...args))\n      }, null, 544)], 16)) : createCommentVNode(\"\", true)]),\n      _: 3\n    }, 8, [\"onEnter\", \"onAfterEnter\", \"onLeave\", \"onAfterLeave\"])]),\n    _: 3\n  }, 8, [\"appendTo\"])], 2);\n}\n\nfunction styleInject(css, ref) {\n  if (ref === void 0) ref = {};\n  var insertAt = ref.insertAt;\n\n  if (!css || typeof document === 'undefined') {\n    return;\n  }\n\n  var head = document.head || document.getElementsByTagName('head')[0];\n  var style = document.createElement('style');\n  style.type = 'text/css';\n\n  if (insertAt === 'top') {\n    if (head.firstChild) {\n      head.insertBefore(style, head.firstChild);\n    } else {\n      head.appendChild(style);\n    }\n  } else {\n    head.appendChild(style);\n  }\n\n  if (style.styleSheet) {\n    style.styleSheet.cssText = css;\n  } else {\n    style.appendChild(document.createTextNode(css));\n  }\n}\n\nvar css_248z = \"\\n.p-multiselect {\\n    display: inline-flex;\\n    cursor: pointer;\\n    position: relative;\\n    user-select: none;\\n}\\n.p-multiselect-trigger {\\n    display: flex;\\n    align-items: center;\\n    justify-content: center;\\n    flex-shrink: 0;\\n}\\n.p-multiselect-label-container {\\n    overflow: hidden;\\n    flex: 1 1 auto;\\n    cursor: pointer;\\n}\\n.p-multiselect-label {\\n    display: block;\\n    white-space: nowrap;\\n    cursor: pointer;\\n    overflow: hidden;\\n    text-overflow: ellipsis;\\n}\\n.p-multiselect-label-empty {\\n    overflow: hidden;\\n    visibility: hidden;\\n}\\n.p-multiselect-token {\\n    cursor: default;\\n    display: inline-flex;\\n    align-items: center;\\n    flex: 0 0 auto;\\n}\\n.p-multiselect-token-icon {\\n    cursor: pointer;\\n}\\n.p-multiselect .p-multiselect-panel {\\n    min-width: 100%;\\n}\\n.p-multiselect-panel {\\n    position: absolute;\\n    top: 0;\\n    left: 0;\\n}\\n.p-multiselect-items-wrapper {\\n    overflow: auto;\\n}\\n.p-multiselect-items {\\n    margin: 0;\\n    padding: 0;\\n    list-style-type: none;\\n}\\n.p-multiselect-item {\\n    cursor: pointer;\\n    display: flex;\\n    align-items: center;\\n    font-weight: normal;\\n    white-space: nowrap;\\n    position: relative;\\n    overflow: hidden;\\n}\\n.p-multiselect-item-group {\\n    cursor: auto;\\n}\\n.p-multiselect-header {\\n    display: flex;\\n    align-items: center;\\n    justify-content: space-between;\\n}\\n.p-multiselect-filter-container {\\n    position: relative;\\n    flex: 1 1 auto;\\n}\\n.p-multiselect-filter-icon {\\n    position: absolute;\\n    top: 50%;\\n    margin-top: -0.5rem;\\n}\\n.p-multiselect-filter-container .p-inputtext {\\n    width: 100%;\\n}\\n.p-multiselect-close {\\n    display: flex;\\n    align-items: center;\\n    justify-content: center;\\n    flex-shrink: 0;\\n    overflow: hidden;\\n    position: relative;\\n    margin-left: auto;\\n}\\n.p-fluid .p-multiselect {\\n    display: flex;\\n}\\n\";\nstyleInject(css_248z);\nscript.render = render;\nexport { script as default };","map":{"version":3,"sources":["C:/Users/emalc/OneDrive/Escritorio/CRUD_keycloak_primeVue/keycloak-workshop/frontend-vuejs/node_modules/primevue/multiselect/multiselect.esm.js"],"names":["FilterService","OverlayEventBus","Portal","Ripple","UniqueComponentId","ZIndexUtils","ObjectUtils","DomHandler","ConnectedOverlayScrollHandler","VirtualScroller","resolveComponent","resolveDirective","openBlock","createElementBlock","normalizeClass","createElementVNode","mergeProps","renderSlot","Fragment","createTextVNode","toDisplayString","renderList","withModifiers","createCommentVNode","createVNode","withCtx","Transition","withDirectives","normalizeStyle","createSlots","script","name","emits","props","modelValue","options","Array","optionLabel","optionValue","optionDisabled","optionGroupLabel","optionGroupChildren","scrollHeight","type","String","default","placeholder","disabled","Boolean","inputId","inputProps","panelClass","panelStyle","panelProps","filterInputProps","closeButtonProps","dataKey","filter","filterPlaceholder","filterLocale","filterMatchMode","filterFields","appendTo","display","selectedItemsLabel","maxSelectedLabels","Number","selectionLimit","showToggleAll","loading","checkboxIcon","closeIcon","dropdownIcon","filterIcon","loadingIcon","removeTokenIcon","selectAll","resetFilterOnHide","virtualScrollerOptions","Object","autoOptionFocus","autoFilterFocus","filterMessage","selectionMessage","emptySelectionMessage","emptyFilterMessage","emptyMessage","tabindex","outsideClickListener","scrollHandler","resizeListener","overlay","list","virtualScroller","startRangeIndex","searchTimeout","searchValue","selectOnFocus","focusOnHover","data","id","$attrs","focused","focusedOptionIndex","headerCheckboxFocused","filterValue","overlayVisible","watch","newValue","autoUpdateModel","mounted","beforeUnmount","unbindOutsideClickListener","unbindResizeListener","destroy","clear","methods","getOptionIndex","index","fn","virtualScrollerDisabled","getOptionLabel","option","resolveFieldData","getOptionValue","getOptionRenderKey","isOptionDisabled","maxSelectionLimitReached","isSelected","isOptionGroup","optionGroup","group","getOptionGroupLabel","getOptionGroupChildren","getAriaPosInset","visibleOptions","slice","length","show","isFocus","$emit","findFirstFocusedOptionIndex","focus","$refs","focusInput","hide","_hide","setTimeout","onFocus","event","scrollInView","onBlur","onKeyDown","preventDefault","metaKey","ctrlKey","code","onArrowDownKey","onArrowUpKey","onHomeKey","onEndKey","onPageDownKey","onPageUpKey","onEnterKey","onEscapeKey","onTabKey","onShiftKey","value","isValidOption","map","updateModel","isPrintableCharacter","key","searchOptions","onContainerClick","contains","target","onFirstHiddenFocus","focusableEl","relatedTarget","getFirstFocusableElement","onLastHiddenFocus","getLastFocusableElement","onCloseClick","onHeaderCheckboxFocus","onHeaderCheckboxBlur","onOptionSelect","selected","val","equals","equalityKey","onOptionMouseMove","changeFocusedOptionIndex","onOptionSelectRange","start","end","findNearestSelectedOptionIndex","rangeStart","Math","min","rangeEnd","max","onFilterChange","originalEvent","scrollToIndex","onFilterKeyDown","onArrowLeftKey","onFilterBlur","onFilterUpdated","alignOverlay","onOverlayClick","emit","$el","onOverlayKeyDown","optionIndex","findNextOptionIndex","shiftKey","pressedInInputText","altKey","findPrevOptionIndex","findLastFocusedOptionIndex","currentTarget","len","setSelectionRange","findFirstOptionIndex","findLastOptionIndex","hasFocusableElements","lastHiddenFocusableElementOnOverlay","firstHiddenFocusableElementOnOverlay","onOverlayEnter","el","set","$primevue","config","zIndex","filterInput","onOverlayAfterEnter","bindOutsideClickListener","bindScrollListener","bindResizeListener","onOverlayLeave","unbindScrollListener","onOverlayAfterLeave","relativePosition","style","minWidth","getOuterWidth","absolutePosition","isOutsideClicked","document","addEventListener","removeEventListener","container","isTouchDevice","window","isSameNode","getLabelByValue","flatOptions","matchedOption","find","getSelectedItemsLabel","pattern","test","replace","match","onToggleAll","checked","allSelected","removeOption","clearFilter","getFocusableElements","isOptionMatched","toLocaleLowerCase","startsWith","isValidSelectedOption","some","findIndex","findLastIndex","matchedOptionIndex","findFirstSelectedOptionIndex","hasSelectedOption","findLastSelectedOptionIndex","findNextSelectedOptionIndex","findPrevSelectedOptionIndex","firstCheckUp","selectedIndex","clearTimeout","focusedOptionId","element","findSingle","scrollIntoView","block","inline","reduce","result","push","forEach","o","overlayRef","listRef","contentRef","virtualScrollerRef","computed","containerClass","labelClass","label","dropdownIconClass","panelStyleClass","inputStyle","ripple","headerCheckboxClass","filteredOptions","searchFields","optionGroups","filtered","filteredItems","items","item","includes","isNotEmpty","i","chipSelectedItems","every","filterResultMessageText","filterMessageText","replaceAll","emptyFilterMessageText","locale","searchMessage","emptySearchMessage","emptyMessageText","selectionMessageText","emptySelectionMessageText","selectedMessageText","ariaSetSize","toggleAllAriaLabel","aria","undefined","closeAriaLabel","close","directives","components","_hoisted_1","class","_hoisted_2","_hoisted_3","_hoisted_4","_hoisted_5","_hoisted_6","_hoisted_7","_hoisted_8","_hoisted_9","_hoisted_10","_hoisted_11","_hoisted_12","role","_hoisted_13","_hoisted_14","_hoisted_15","_hoisted_16","_hoisted_17","_hoisted_18","_hoisted_19","_hoisted_20","_hoisted_21","render","_ctx","_cache","$props","$setup","$data","$options","_component_VirtualScroller","_component_Portal","_directive_ripple","ref","onClick","args","readonly","ariaLabel","ariaLabelledby","onKeydown","$slots","$event","onEnter","onAfterEnter","onLeave","onAfterLeave","onVnodeUpdated","autocomplete","onInput","height","content","styleClass","getItemOptions","contentStyle","itemSize","onMousemove","_","loader","styleInject","css","insertAt","head","getElementsByTagName","createElement","firstChild","insertBefore","appendChild","styleSheet","cssText","createTextNode","css_248z"],"mappings":"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","sourcesContent":["import { FilterService } from 'primevue/api';\nimport OverlayEventBus from 'primevue/overlayeventbus';\nimport Portal from 'primevue/portal';\nimport Ripple from 'primevue/ripple';\nimport { UniqueComponentId, ZIndexUtils, ObjectUtils, DomHandler, ConnectedOverlayScrollHandler } from 'primevue/utils';\nimport VirtualScroller from 'primevue/virtualscroller';\nimport { resolveComponent, resolveDirective, openBlock, createElementBlock, normalizeClass, createElementVNode, mergeProps, renderSlot, Fragment, createTextVNode, toDisplayString, renderList, withModifiers, createCommentVNode, createVNode, withCtx, Transition, withDirectives, normalizeStyle, createSlots } from 'vue';\n\nvar script = {\n    name: 'MultiSelect',\n    emits: ['update:modelValue', 'change', 'focus', 'blur', 'before-show', 'before-hide', 'show', 'hide', 'filter', 'selectall-change'],\n    props: {\n        modelValue: null,\n        options: Array,\n        optionLabel: null,\n        optionValue: null,\n        optionDisabled: null,\n        optionGroupLabel: null,\n        optionGroupChildren: null,\n        scrollHeight: {\n            type: String,\n            default: '200px'\n        },\n        placeholder: String,\n        disabled: Boolean,\n        inputId: {\n            type: String,\n            default: null\n        },\n        inputProps: {\n            type: null,\n            default: null\n        },\n        panelClass: {\n            type: String,\n            default: null\n        },\n        panelStyle: {\n            type: null,\n            default: null\n        },\n        panelProps: {\n            type: null,\n            default: null\n        },\n        filterInputProps: {\n            type: null,\n            default: null\n        },\n        closeButtonProps: {\n            type: null,\n            default: null\n        },\n        dataKey: null,\n        filter: Boolean,\n        filterPlaceholder: String,\n        filterLocale: String,\n        filterMatchMode: {\n            type: String,\n            default: 'contains'\n        },\n        filterFields: {\n            type: Array,\n            default: null\n        },\n        appendTo: {\n            type: String,\n            default: 'body'\n        },\n        display: {\n            type: String,\n            default: 'comma'\n        },\n        selectedItemsLabel: {\n            type: String,\n            default: '{0} items selected'\n        },\n        maxSelectedLabels: {\n            type: Number,\n            default: null\n        },\n        selectionLimit: {\n            type: Number,\n            default: null\n        },\n        showToggleAll: {\n            type: Boolean,\n            default: true\n        },\n        loading: {\n            type: Boolean,\n            default: false\n        },\n        checkboxIcon: {\n            type: String,\n            default: 'pi pi-check'\n        },\n        closeIcon: {\n            type: String,\n            default: 'pi pi-times'\n        },\n        dropdownIcon: {\n            type: String,\n            default: 'pi pi-chevron-down'\n        },\n        filterIcon: {\n            type: String,\n            default: 'pi pi-search'\n        },\n        loadingIcon: {\n            type: String,\n            default: 'pi pi-spinner pi-spin'\n        },\n        removeTokenIcon: {\n            type: String,\n            default: 'pi pi-times-circle'\n        },\n        selectAll: {\n            type: Boolean,\n            default: null\n        },\n        resetFilterOnHide: {\n            type: Boolean,\n            default: false\n        },\n        virtualScrollerOptions: {\n            type: Object,\n            default: null\n        },\n        autoOptionFocus: {\n            type: Boolean,\n            default: true\n        },\n        autoFilterFocus: {\n            type: Boolean,\n            default: false\n        },\n        filterMessage: {\n            type: String,\n            default: null\n        },\n        selectionMessage: {\n            type: String,\n            default: null\n        },\n        emptySelectionMessage: {\n            type: String,\n            default: null\n        },\n        emptyFilterMessage: {\n            type: String,\n            default: null\n        },\n        emptyMessage: {\n            type: String,\n            default: null\n        },\n        tabindex: {\n            type: Number,\n            default: 0\n        },\n        'aria-label': {\n            type: String,\n            default: null\n        },\n        'aria-labelledby': {\n            type: String,\n            default: null\n        }\n    },\n    outsideClickListener: null,\n    scrollHandler: null,\n    resizeListener: null,\n    overlay: null,\n    list: null,\n    virtualScroller: null,\n    startRangeIndex: -1,\n    searchTimeout: null,\n    searchValue: '',\n    selectOnFocus: false,\n    focusOnHover: false,\n    data() {\n        return {\n            id: this.$attrs.id,\n            focused: false,\n            focusedOptionIndex: -1,\n            headerCheckboxFocused: false,\n            filterValue: null,\n            overlayVisible: false\n        };\n    },\n    watch: {\n        '$attrs.id': function (newValue) {\n            this.id = newValue || UniqueComponentId();\n        },\n        options() {\n            this.autoUpdateModel();\n        }\n    },\n    mounted() {\n        this.id = this.id || UniqueComponentId();\n\n        this.autoUpdateModel();\n    },\n    beforeUnmount() {\n        this.unbindOutsideClickListener();\n        this.unbindResizeListener();\n\n        if (this.scrollHandler) {\n            this.scrollHandler.destroy();\n            this.scrollHandler = null;\n        }\n\n        if (this.overlay) {\n            ZIndexUtils.clear(this.overlay);\n            this.overlay = null;\n        }\n    },\n    methods: {\n        getOptionIndex(index, fn) {\n            return this.virtualScrollerDisabled ? index : fn && fn(index)['index'];\n        },\n        getOptionLabel(option) {\n            return this.optionLabel ? ObjectUtils.resolveFieldData(option, this.optionLabel) : option;\n        },\n        getOptionValue(option) {\n            return this.optionValue ? ObjectUtils.resolveFieldData(option, this.optionValue) : option;\n        },\n        getOptionRenderKey(option) {\n            return this.dataKey ? ObjectUtils.resolveFieldData(option, this.dataKey) : this.getOptionLabel(option);\n        },\n        isOptionDisabled(option) {\n            if (this.maxSelectionLimitReached && !this.isSelected(option)) {\n                return true;\n            }\n\n            return this.optionDisabled ? ObjectUtils.resolveFieldData(option, this.optionDisabled) : false;\n        },\n        isOptionGroup(option) {\n            return this.optionGroupLabel && option.optionGroup && option.group;\n        },\n        getOptionGroupLabel(optionGroup) {\n            return ObjectUtils.resolveFieldData(optionGroup, this.optionGroupLabel);\n        },\n        getOptionGroupChildren(optionGroup) {\n            return ObjectUtils.resolveFieldData(optionGroup, this.optionGroupChildren);\n        },\n        getAriaPosInset(index) {\n            return (this.optionGroupLabel ? index - this.visibleOptions.slice(0, index).filter((option) => this.isOptionGroup(option)).length : index) + 1;\n        },\n        show(isFocus) {\n            this.$emit('before-show');\n            this.overlayVisible = true;\n            this.focusedOptionIndex = this.focusedOptionIndex !== -1 ? this.focusedOptionIndex : this.autoOptionFocus ? this.findFirstFocusedOptionIndex() : -1;\n\n            isFocus && DomHandler.focus(this.$refs.focusInput);\n        },\n        hide(isFocus) {\n            const _hide = () => {\n                this.$emit('before-hide');\n                this.overlayVisible = false;\n                this.focusedOptionIndex = -1;\n                this.searchValue = '';\n\n                this.resetFilterOnHide && (this.filterValue = null);\n                isFocus && DomHandler.focus(this.$refs.focusInput);\n            };\n\n            setTimeout(() => {\n                _hide();\n            }, 0); // For ScreenReaders\n        },\n        onFocus(event) {\n            if (this.disabled) {\n                // For ScreenReaders\n                return;\n            }\n\n            this.focused = true;\n            this.focusedOptionIndex = this.focusedOptionIndex !== -1 ? this.focusedOptionIndex : this.overlayVisible && this.autoOptionFocus ? this.findFirstFocusedOptionIndex() : -1;\n            this.overlayVisible && this.scrollInView(this.focusedOptionIndex);\n            this.$emit('focus', event);\n        },\n        onBlur(event) {\n            this.focused = false;\n            this.focusedOptionIndex = -1;\n            this.searchValue = '';\n            this.$emit('blur', event);\n        },\n        onKeyDown(event) {\n            if (this.disabled) {\n                event.preventDefault();\n\n                return;\n            }\n\n            const metaKey = event.metaKey || event.ctrlKey;\n\n            switch (event.code) {\n                case 'ArrowDown':\n                    this.onArrowDownKey(event);\n                    break;\n\n                case 'ArrowUp':\n                    this.onArrowUpKey(event);\n                    break;\n\n                case 'Home':\n                    this.onHomeKey(event);\n                    break;\n\n                case 'End':\n                    this.onEndKey(event);\n                    break;\n\n                case 'PageDown':\n                    this.onPageDownKey(event);\n                    break;\n\n                case 'PageUp':\n                    this.onPageUpKey(event);\n                    break;\n\n                case 'Enter':\n                case 'Space':\n                    this.onEnterKey(event);\n                    break;\n\n                case 'Escape':\n                    this.onEscapeKey(event);\n                    break;\n\n                case 'Tab':\n                    this.onTabKey(event);\n                    break;\n\n                case 'ShiftLeft':\n                case 'ShiftRight':\n                    this.onShiftKey(event);\n                    break;\n\n                default:\n                    if (event.code === 'KeyA' && metaKey) {\n                        const value = this.visibleOptions.filter((option) => this.isValidOption(option)).map((option) => this.getOptionValue(option));\n\n                        this.updateModel(event, value);\n\n                        event.preventDefault();\n                        break;\n                    }\n\n                    if (!metaKey && ObjectUtils.isPrintableCharacter(event.key)) {\n                        !this.overlayVisible && this.show();\n                        this.searchOptions(event);\n                        event.preventDefault();\n                    }\n\n                    break;\n            }\n        },\n        onContainerClick(event) {\n            if (this.disabled || this.loading) {\n                return;\n            }\n\n            if (!this.overlay || !this.overlay.contains(event.target)) {\n                this.overlayVisible ? this.hide(true) : this.show(true);\n            }\n        },\n        onFirstHiddenFocus(event) {\n            const focusableEl = event.relatedTarget === this.$refs.focusInput ? DomHandler.getFirstFocusableElement(this.overlay, ':not(.p-hidden-focusable)') : this.$refs.focusInput;\n\n            DomHandler.focus(focusableEl);\n        },\n        onLastHiddenFocus(event) {\n            const focusableEl = event.relatedTarget === this.$refs.focusInput ? DomHandler.getLastFocusableElement(this.overlay, ':not(.p-hidden-focusable)') : this.$refs.focusInput;\n\n            DomHandler.focus(focusableEl);\n        },\n        onCloseClick() {\n            this.hide(true);\n        },\n        onHeaderCheckboxFocus() {\n            this.headerCheckboxFocused = true;\n        },\n        onHeaderCheckboxBlur() {\n            this.headerCheckboxFocused = false;\n        },\n        onOptionSelect(event, option, index = -1, isFocus = false) {\n            if (this.disabled || this.isOptionDisabled(option)) {\n                return;\n            }\n\n            let selected = this.isSelected(option);\n            let value = null;\n\n            if (selected) value = this.modelValue.filter((val) => !ObjectUtils.equals(val, this.getOptionValue(option), this.equalityKey));\n            else value = [...(this.modelValue || []), this.getOptionValue(option)];\n\n            this.updateModel(event, value);\n            index !== -1 && (this.focusedOptionIndex = index);\n            isFocus && DomHandler.focus(this.$refs.focusInput);\n        },\n        onOptionMouseMove(event, index) {\n            if (this.focusOnHover) {\n                this.changeFocusedOptionIndex(event, index);\n            }\n        },\n        onOptionSelectRange(event, start = -1, end = -1) {\n            start === -1 && (start = this.findNearestSelectedOptionIndex(end, true));\n            end === -1 && (end = this.findNearestSelectedOptionIndex(start));\n\n            if (start !== -1 && end !== -1) {\n                const rangeStart = Math.min(start, end);\n                const rangeEnd = Math.max(start, end);\n                const value = this.visibleOptions\n                    .slice(rangeStart, rangeEnd + 1)\n                    .filter((option) => this.isValidOption(option))\n                    .map((option) => this.getOptionValue(option));\n\n                this.updateModel(event, value);\n            }\n        },\n        onFilterChange(event) {\n            const value = event.target.value;\n\n            this.filterValue = value;\n            this.focusedOptionIndex = -1;\n            this.$emit('filter', { originalEvent: event, value });\n\n            !this.virtualScrollerDisabled && this.virtualScroller.scrollToIndex(0);\n        },\n        onFilterKeyDown(event) {\n            switch (event.code) {\n                case 'ArrowDown':\n                    this.onArrowDownKey(event);\n                    break;\n\n                case 'ArrowUp':\n                    this.onArrowUpKey(event, true);\n                    break;\n\n                case 'ArrowLeft':\n                case 'ArrowRight':\n                    this.onArrowLeftKey(event, true);\n                    break;\n\n                case 'Home':\n                    this.onHomeKey(event, true);\n                    break;\n\n                case 'End':\n                    this.onEndKey(event, true);\n                    break;\n\n                case 'Enter':\n                    this.onEnterKey(event);\n                    break;\n\n                case 'Escape':\n                    this.onEscapeKey(event);\n                    break;\n\n                case 'Tab':\n                    this.onTabKey(event, true);\n                    break;\n            }\n        },\n        onFilterBlur() {\n            this.focusedOptionIndex = -1;\n        },\n        onFilterUpdated() {\n            if (this.overlayVisible) {\n                this.alignOverlay();\n            }\n        },\n        onOverlayClick(event) {\n            OverlayEventBus.emit('overlay-click', {\n                originalEvent: event,\n                target: this.$el\n            });\n        },\n        onOverlayKeyDown(event) {\n            switch (event.code) {\n                case 'Escape':\n                    this.onEscapeKey(event);\n                    break;\n            }\n        },\n        onArrowDownKey(event) {\n            const optionIndex = this.focusedOptionIndex !== -1 ? this.findNextOptionIndex(this.focusedOptionIndex) : this.findFirstFocusedOptionIndex();\n\n            if (event.shiftKey) {\n                this.onOptionSelectRange(event, this.startRangeIndex, optionIndex);\n            }\n\n            this.changeFocusedOptionIndex(event, optionIndex);\n\n            !this.overlayVisible && this.show();\n            event.preventDefault();\n        },\n        onArrowUpKey(event, pressedInInputText = false) {\n            if (event.altKey && !pressedInInputText) {\n                if (this.focusedOptionIndex !== -1) {\n                    this.onOptionSelect(event, this.visibleOptions[this.focusedOptionIndex]);\n                }\n\n                this.overlayVisible && this.hide();\n                event.preventDefault();\n            } else {\n                const optionIndex = this.focusedOptionIndex !== -1 ? this.findPrevOptionIndex(this.focusedOptionIndex) : this.findLastFocusedOptionIndex();\n\n                if (event.shiftKey) {\n                    this.onOptionSelectRange(event, optionIndex, this.startRangeIndex);\n                }\n\n                this.changeFocusedOptionIndex(event, optionIndex);\n\n                !this.overlayVisible && this.show();\n                event.preventDefault();\n            }\n        },\n        onArrowLeftKey(event, pressedInInputText = false) {\n            pressedInInputText && (this.focusedOptionIndex = -1);\n        },\n        onHomeKey(event, pressedInInputText = false) {\n            const { currentTarget } = event;\n\n            if (pressedInInputText) {\n                const len = currentTarget.value.length;\n\n                currentTarget.setSelectionRange(0, event.shiftKey ? len : 0);\n                this.focusedOptionIndex = -1;\n            } else {\n                let metaKey = event.metaKey || event.ctrlKey;\n                let optionIndex = this.findFirstOptionIndex();\n\n                if (event.shiftKey && metaKey) {\n                    this.onOptionSelectRange(event, optionIndex, this.startRangeIndex);\n                }\n\n                this.changeFocusedOptionIndex(event, optionIndex);\n\n                !this.overlayVisible && this.show();\n            }\n\n            event.preventDefault();\n        },\n        onEndKey(event, pressedInInputText = false) {\n            const { currentTarget } = event;\n\n            if (pressedInInputText) {\n                const len = currentTarget.value.length;\n\n                currentTarget.setSelectionRange(event.shiftKey ? 0 : len, len);\n                this.focusedOptionIndex = -1;\n            } else {\n                let metaKey = event.metaKey || event.ctrlKey;\n                let optionIndex = this.findLastOptionIndex();\n\n                if (event.shiftKey && metaKey) {\n                    this.onOptionSelectRange(event, this.startRangeIndex, optionIndex);\n                }\n\n                this.changeFocusedOptionIndex(event, optionIndex);\n\n                !this.overlayVisible && this.show();\n            }\n\n            event.preventDefault();\n        },\n        onPageUpKey(event) {\n            this.scrollInView(0);\n            event.preventDefault();\n        },\n        onPageDownKey(event) {\n            this.scrollInView(this.visibleOptions.length - 1);\n            event.preventDefault();\n        },\n        onEnterKey(event) {\n            if (!this.overlayVisible) {\n                this.onArrowDownKey(event);\n            } else {\n                if (this.focusedOptionIndex !== -1) {\n                    if (event.shiftKey) this.onOptionSelectRange(event, this.focusedOptionIndex);\n                    else this.onOptionSelect(event, this.visibleOptions[this.focusedOptionIndex]);\n                }\n            }\n\n            event.preventDefault();\n        },\n        onEscapeKey(event) {\n            this.overlayVisible && this.hide(true);\n            event.preventDefault();\n        },\n        onTabKey(event, pressedInInputText = false) {\n            if (!pressedInInputText) {\n                if (this.overlayVisible && this.hasFocusableElements()) {\n                    DomHandler.focus(event.shiftKey ? this.$refs.lastHiddenFocusableElementOnOverlay : this.$refs.firstHiddenFocusableElementOnOverlay);\n\n                    event.preventDefault();\n                } else {\n                    if (this.focusedOptionIndex !== -1) {\n                        this.onOptionSelect(event, this.visibleOptions[this.focusedOptionIndex]);\n                    }\n\n                    this.overlayVisible && this.hide(this.filter);\n                }\n            }\n        },\n        onShiftKey() {\n            this.startRangeIndex = this.focusedOptionIndex;\n        },\n        onOverlayEnter(el) {\n            ZIndexUtils.set('overlay', el, this.$primevue.config.zIndex.overlay);\n            this.alignOverlay();\n            this.scrollInView();\n\n            this.autoFilterFocus && DomHandler.focus(this.$refs.filterInput);\n        },\n        onOverlayAfterEnter() {\n            this.bindOutsideClickListener();\n            this.bindScrollListener();\n            this.bindResizeListener();\n\n            this.$emit('show');\n        },\n        onOverlayLeave() {\n            this.unbindOutsideClickListener();\n            this.unbindScrollListener();\n            this.unbindResizeListener();\n\n            this.$emit('hide');\n            this.overlay = null;\n        },\n        onOverlayAfterLeave(el) {\n            ZIndexUtils.clear(el);\n        },\n        alignOverlay() {\n            if (this.appendTo === 'self') {\n                DomHandler.relativePosition(this.overlay, this.$el);\n            } else {\n                this.overlay.style.minWidth = DomHandler.getOuterWidth(this.$el) + 'px';\n                DomHandler.absolutePosition(this.overlay, this.$el);\n            }\n        },\n        bindOutsideClickListener() {\n            if (!this.outsideClickListener) {\n                this.outsideClickListener = (event) => {\n                    if (this.overlayVisible && this.isOutsideClicked(event)) {\n                        this.hide();\n                    }\n                };\n\n                document.addEventListener('click', this.outsideClickListener);\n            }\n        },\n        unbindOutsideClickListener() {\n            if (this.outsideClickListener) {\n                document.removeEventListener('click', this.outsideClickListener);\n                this.outsideClickListener = null;\n            }\n        },\n        bindScrollListener() {\n            if (!this.scrollHandler) {\n                this.scrollHandler = new ConnectedOverlayScrollHandler(this.$refs.container, () => {\n                    if (this.overlayVisible) {\n                        this.hide();\n                    }\n                });\n            }\n\n            this.scrollHandler.bindScrollListener();\n        },\n        unbindScrollListener() {\n            if (this.scrollHandler) {\n                this.scrollHandler.unbindScrollListener();\n            }\n        },\n        bindResizeListener() {\n            if (!this.resizeListener) {\n                this.resizeListener = () => {\n                    if (this.overlayVisible && !DomHandler.isTouchDevice()) {\n                        this.hide();\n                    }\n                };\n\n                window.addEventListener('resize', this.resizeListener);\n            }\n        },\n        unbindResizeListener() {\n            if (this.resizeListener) {\n                window.removeEventListener('resize', this.resizeListener);\n                this.resizeListener = null;\n            }\n        },\n        isOutsideClicked(event) {\n            return !(this.$el.isSameNode(event.target) || this.$el.contains(event.target) || (this.overlay && this.overlay.contains(event.target)));\n        },\n        getLabelByValue(value) {\n            const options = this.optionGroupLabel ? this.flatOptions(this.options) : this.options || [];\n            const matchedOption = options.find((option) => !this.isOptionGroup(option) && ObjectUtils.equals(this.getOptionValue(option), value, this.equalityKey));\n\n            return matchedOption ? this.getOptionLabel(matchedOption) : null;\n        },\n        getSelectedItemsLabel() {\n            let pattern = /{(.*?)}/;\n\n            if (pattern.test(this.selectedItemsLabel)) {\n                return this.selectedItemsLabel.replace(this.selectedItemsLabel.match(pattern)[0], this.modelValue.length + '');\n            }\n\n            return this.selectedItemsLabel;\n        },\n        onToggleAll(event) {\n            if (this.selectAll !== null) {\n                this.$emit('selectall-change', { originalEvent: event, checked: !this.allSelected });\n            } else {\n                const value = this.allSelected ? [] : this.visibleOptions.filter((option) => this.isValidOption(option)).map((option) => this.getOptionValue(option));\n\n                this.updateModel(event, value);\n            }\n\n            this.headerCheckboxFocused = true;\n        },\n        removeOption(event, optionValue) {\n            let value = this.modelValue.filter((val) => !ObjectUtils.equals(val, optionValue, this.equalityKey));\n\n            this.updateModel(event, value);\n        },\n        clearFilter() {\n            this.filterValue = null;\n        },\n        hasFocusableElements() {\n            return DomHandler.getFocusableElements(this.overlay, ':not(.p-hidden-focusable)').length > 0;\n        },\n        isOptionMatched(option) {\n            return this.isValidOption(option) && this.getOptionLabel(option).toLocaleLowerCase(this.filterLocale).startsWith(this.searchValue.toLocaleLowerCase(this.filterLocale));\n        },\n        isValidOption(option) {\n            return option && !(this.isOptionDisabled(option) || this.isOptionGroup(option));\n        },\n        isValidSelectedOption(option) {\n            return this.isValidOption(option) && this.isSelected(option);\n        },\n        isSelected(option) {\n            const optionValue = this.getOptionValue(option);\n\n            return (this.modelValue || []).some((value) => ObjectUtils.equals(value, optionValue, this.equalityKey));\n        },\n        findFirstOptionIndex() {\n            return this.visibleOptions.findIndex((option) => this.isValidOption(option));\n        },\n        findLastOptionIndex() {\n            return ObjectUtils.findLastIndex(this.visibleOptions, (option) => this.isValidOption(option));\n        },\n        findNextOptionIndex(index) {\n            const matchedOptionIndex = index < this.visibleOptions.length - 1 ? this.visibleOptions.slice(index + 1).findIndex((option) => this.isValidOption(option)) : -1;\n\n            return matchedOptionIndex > -1 ? matchedOptionIndex + index + 1 : index;\n        },\n        findPrevOptionIndex(index) {\n            const matchedOptionIndex = index > 0 ? ObjectUtils.findLastIndex(this.visibleOptions.slice(0, index), (option) => this.isValidOption(option)) : -1;\n\n            return matchedOptionIndex > -1 ? matchedOptionIndex : index;\n        },\n        findFirstSelectedOptionIndex() {\n            return this.hasSelectedOption ? this.visibleOptions.findIndex((option) => this.isValidSelectedOption(option)) : -1;\n        },\n        findLastSelectedOptionIndex() {\n            return this.hasSelectedOption ? ObjectUtils.findLastIndex(this.visibleOptions, (option) => this.isValidSelectedOption(option)) : -1;\n        },\n        findNextSelectedOptionIndex(index) {\n            const matchedOptionIndex = this.hasSelectedOption && index < this.visibleOptions.length - 1 ? this.visibleOptions.slice(index + 1).findIndex((option) => this.isValidSelectedOption(option)) : -1;\n\n            return matchedOptionIndex > -1 ? matchedOptionIndex + index + 1 : -1;\n        },\n        findPrevSelectedOptionIndex(index) {\n            const matchedOptionIndex = this.hasSelectedOption && index > 0 ? ObjectUtils.findLastIndex(this.visibleOptions.slice(0, index), (option) => this.isValidSelectedOption(option)) : -1;\n\n            return matchedOptionIndex > -1 ? matchedOptionIndex : -1;\n        },\n        findNearestSelectedOptionIndex(index, firstCheckUp = false) {\n            let matchedOptionIndex = -1;\n\n            if (this.hasSelectedOption) {\n                if (firstCheckUp) {\n                    matchedOptionIndex = this.findPrevSelectedOptionIndex(index);\n                    matchedOptionIndex = matchedOptionIndex === -1 ? this.findNextSelectedOptionIndex(index) : matchedOptionIndex;\n                } else {\n                    matchedOptionIndex = this.findNextSelectedOptionIndex(index);\n                    matchedOptionIndex = matchedOptionIndex === -1 ? this.findPrevSelectedOptionIndex(index) : matchedOptionIndex;\n                }\n            }\n\n            return matchedOptionIndex > -1 ? matchedOptionIndex : index;\n        },\n        findFirstFocusedOptionIndex() {\n            const selectedIndex = this.findFirstSelectedOptionIndex();\n\n            return selectedIndex < 0 ? this.findFirstOptionIndex() : selectedIndex;\n        },\n        findLastFocusedOptionIndex() {\n            const selectedIndex = this.findLastSelectedOptionIndex();\n\n            return selectedIndex < 0 ? this.findLastOptionIndex() : selectedIndex;\n        },\n        searchOptions(event) {\n            this.searchValue = (this.searchValue || '') + event.key;\n\n            let optionIndex = -1;\n\n            if (this.focusedOptionIndex !== -1) {\n                optionIndex = this.visibleOptions.slice(this.focusedOptionIndex).findIndex((option) => this.isOptionMatched(option));\n                optionIndex = optionIndex === -1 ? this.visibleOptions.slice(0, this.focusedOptionIndex).findIndex((option) => this.isOptionMatched(option)) : optionIndex + this.focusedOptionIndex;\n            } else {\n                optionIndex = this.visibleOptions.findIndex((option) => this.isOptionMatched(option));\n            }\n\n            if (optionIndex === -1 && this.focusedOptionIndex === -1) {\n                optionIndex = this.findFirstFocusedOptionIndex();\n            }\n\n            if (optionIndex !== -1) {\n                this.changeFocusedOptionIndex(event, optionIndex);\n            }\n\n            if (this.searchTimeout) {\n                clearTimeout(this.searchTimeout);\n            }\n\n            this.searchTimeout = setTimeout(() => {\n                this.searchValue = '';\n                this.searchTimeout = null;\n            }, 500);\n        },\n        changeFocusedOptionIndex(event, index) {\n            if (this.focusedOptionIndex !== index) {\n                this.focusedOptionIndex = index;\n                this.scrollInView();\n            }\n        },\n        scrollInView(index = -1) {\n            const id = index !== -1 ? `${this.id}_${index}` : this.focusedOptionId;\n            const element = DomHandler.findSingle(this.list, `li[id=\"${id}\"]`);\n\n            if (element) {\n                element.scrollIntoView && element.scrollIntoView({ block: 'nearest', inline: 'nearest' });\n            } else if (!this.virtualScrollerDisabled) {\n                this.virtualScroller && this.virtualScroller.scrollToIndex(index !== -1 ? index : this.focusedOptionIndex);\n            }\n        },\n        autoUpdateModel() {\n            if (this.selectOnFocus && this.autoOptionFocus && !this.hasSelectedOption) {\n                this.focusedOptionIndex = this.findFirstFocusedOptionIndex();\n                const value = this.getOptionValue(this.visibleOptions[this.focusedOptionIndex]);\n\n                this.updateModel(null, [value]);\n            }\n        },\n        updateModel(event, value) {\n            this.$emit('update:modelValue', value);\n            this.$emit('change', { originalEvent: event, value });\n        },\n        flatOptions(options) {\n            return (options || []).reduce((result, option, index) => {\n                result.push({ optionGroup: option, group: true, index });\n\n                const optionGroupChildren = this.getOptionGroupChildren(option);\n\n                optionGroupChildren && optionGroupChildren.forEach((o) => result.push(o));\n\n                return result;\n            }, []);\n        },\n        overlayRef(el) {\n            this.overlay = el;\n        },\n        listRef(el, contentRef) {\n            this.list = el;\n            contentRef && contentRef(el); // For VirtualScroller\n        },\n        virtualScrollerRef(el) {\n            this.virtualScroller = el;\n        }\n    },\n    computed: {\n        containerClass() {\n            return [\n                'p-multiselect p-component p-inputwrapper',\n                {\n                    'p-multiselect-chip': this.display === 'chip',\n                    'p-disabled': this.disabled,\n                    'p-focus': this.focused,\n                    'p-inputwrapper-filled': this.modelValue && this.modelValue.length,\n                    'p-inputwrapper-focus': this.focused || this.overlayVisible,\n                    'p-overlay-open': this.overlayVisible\n                }\n            ];\n        },\n        labelClass() {\n            return [\n                'p-multiselect-label',\n                {\n                    'p-placeholder': this.label === this.placeholder,\n                    'p-multiselect-label-empty': !this.placeholder && (!this.modelValue || this.modelValue.length === 0)\n                }\n            ];\n        },\n        dropdownIconClass() {\n            return ['p-multiselect-trigger-icon', this.loading ? this.loadingIcon : this.dropdownIcon];\n        },\n        panelStyleClass() {\n            return [\n                'p-multiselect-panel p-component',\n                this.panelClass,\n                {\n                    'p-input-filled': this.$primevue.config.inputStyle === 'filled',\n                    'p-ripple-disabled': this.$primevue.config.ripple === false\n                }\n            ];\n        },\n        headerCheckboxClass() {\n            return [\n                'p-checkbox p-component',\n                {\n                    'p-checkbox-checked': this.allSelected,\n                    'p-checkbox-focused': this.headerCheckboxFocused\n                }\n            ];\n        },\n        visibleOptions() {\n            const options = this.optionGroupLabel ? this.flatOptions(this.options) : this.options || [];\n\n            if (this.filterValue) {\n                const filteredOptions = FilterService.filter(options, this.searchFields, this.filterValue, this.filterMatchMode, this.filterLocale);\n\n                if (this.optionGroupLabel) {\n                    const optionGroups = this.options || [];\n                    const filtered = [];\n\n                    optionGroups.forEach((group) => {\n                        const filteredItems = group.items.filter((item) => filteredOptions.includes(item));\n\n                        if (filteredItems.length > 0) filtered.push({ ...group, items: [...filteredItems] });\n                    });\n\n                    return this.flatOptions(filtered);\n                }\n\n                return filteredOptions;\n            }\n\n            return options;\n        },\n        label() {\n            // TODO: Refactor\n            let label;\n\n            if (this.modelValue && this.modelValue.length) {\n                if (ObjectUtils.isNotEmpty(this.maxSelectedLabels) && this.modelValue.length > this.maxSelectedLabels) {\n                    return this.getSelectedItemsLabel();\n                } else {\n                    label = '';\n\n                    for (let i = 0; i < this.modelValue.length; i++) {\n                        if (i !== 0) {\n                            label += ', ';\n                        }\n\n                        label += this.getLabelByValue(this.modelValue[i]);\n                    }\n                }\n            } else {\n                label = this.placeholder;\n            }\n\n            return label;\n        },\n        chipSelectedItems() {\n            return ObjectUtils.isNotEmpty(this.maxSelectedLabels) && this.modelValue && this.modelValue.length > this.maxSelectedLabels ? this.modelValue.slice(0, this.maxSelectedLabels) : this.modelValue;\n        },\n        allSelected() {\n            return this.selectAll !== null ? this.selectAll : ObjectUtils.isNotEmpty(this.visibleOptions) && this.visibleOptions.every((option) => this.isOptionGroup(option) || this.isOptionDisabled(option) || this.isSelected(option));\n        },\n        hasSelectedOption() {\n            return ObjectUtils.isNotEmpty(this.modelValue);\n        },\n        equalityKey() {\n            return this.optionValue ? null : this.dataKey;\n        },\n        searchFields() {\n            return this.filterFields || [this.optionLabel];\n        },\n        maxSelectionLimitReached() {\n            return this.selectionLimit && this.modelValue && this.modelValue.length === this.selectionLimit;\n        },\n        filterResultMessageText() {\n            return ObjectUtils.isNotEmpty(this.visibleOptions) ? this.filterMessageText.replaceAll('{0}', this.visibleOptions.length) : this.emptyFilterMessageText;\n        },\n        filterMessageText() {\n            return this.filterMessage || this.$primevue.config.locale.searchMessage || '';\n        },\n        emptyFilterMessageText() {\n            return this.emptyFilterMessage || this.$primevue.config.locale.emptySearchMessage || this.$primevue.config.locale.emptyFilterMessage || '';\n        },\n        emptyMessageText() {\n            return this.emptyMessage || this.$primevue.config.locale.emptyMessage || '';\n        },\n        selectionMessageText() {\n            return this.selectionMessage || this.$primevue.config.locale.selectionMessage || '';\n        },\n        emptySelectionMessageText() {\n            return this.emptySelectionMessage || this.$primevue.config.locale.emptySelectionMessage || '';\n        },\n        selectedMessageText() {\n            return this.hasSelectedOption ? this.selectionMessageText.replaceAll('{0}', this.modelValue.length) : this.emptySelectionMessageText;\n        },\n        focusedOptionId() {\n            return this.focusedOptionIndex !== -1 ? `${this.id}_${this.focusedOptionIndex}` : null;\n        },\n        ariaSetSize() {\n            return this.visibleOptions.filter((option) => !this.isOptionGroup(option)).length;\n        },\n        toggleAllAriaLabel() {\n            return this.$primevue.config.locale.aria ? this.$primevue.config.locale.aria[this.allSelected ? 'selectAll' : 'unselectAll'] : undefined;\n        },\n        closeAriaLabel() {\n            return this.$primevue.config.locale.aria ? this.$primevue.config.locale.aria.close : undefined;\n        },\n        virtualScrollerDisabled() {\n            return !this.virtualScrollerOptions;\n        }\n    },\n    directives: {\n        ripple: Ripple\n    },\n    components: {\n        VirtualScroller: VirtualScroller,\n        Portal: Portal\n    }\n};\n\nconst _hoisted_1 = { class: \"p-hidden-accessible\" };\nconst _hoisted_2 = [\"id\", \"disabled\", \"placeholder\", \"tabindex\", \"aria-label\", \"aria-labelledby\", \"aria-expanded\", \"aria-controls\", \"aria-activedescendant\"];\nconst _hoisted_3 = { class: \"p-multiselect-label-container\" };\nconst _hoisted_4 = { class: \"p-multiselect-token-label\" };\nconst _hoisted_5 = [\"onClick\"];\nconst _hoisted_6 = { class: \"p-multiselect-trigger\" };\nconst _hoisted_7 = {\n  key: 0,\n  class: \"p-multiselect-header\"\n};\nconst _hoisted_8 = { class: \"p-hidden-accessible\" };\nconst _hoisted_9 = [\"checked\", \"aria-label\"];\nconst _hoisted_10 = {\n  key: 1,\n  class: \"p-multiselect-filter-container\"\n};\nconst _hoisted_11 = [\"value\", \"placeholder\", \"aria-owns\", \"aria-activedescendant\"];\nconst _hoisted_12 = {\n  key: 2,\n  role: \"status\",\n  \"aria-live\": \"polite\",\n  class: \"p-hidden-accessible\"\n};\nconst _hoisted_13 = [\"aria-label\"];\nconst _hoisted_14 = [\"id\"];\nconst _hoisted_15 = [\"id\"];\nconst _hoisted_16 = [\"id\", \"aria-label\", \"aria-selected\", \"aria-disabled\", \"aria-setsize\", \"aria-posinset\", \"onClick\", \"onMousemove\"];\nconst _hoisted_17 = { class: \"p-checkbox p-component\" };\nconst _hoisted_18 = {\n  key: 0,\n  class: \"p-multiselect-empty-message\",\n  role: \"option\"\n};\nconst _hoisted_19 = {\n  key: 1,\n  class: \"p-multiselect-empty-message\",\n  role: \"option\"\n};\nconst _hoisted_20 = {\n  key: 1,\n  role: \"status\",\n  \"aria-live\": \"polite\",\n  class: \"p-hidden-accessible\"\n};\nconst _hoisted_21 = {\n  role: \"status\",\n  \"aria-live\": \"polite\",\n  class: \"p-hidden-accessible\"\n};\n\nfunction render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_VirtualScroller = resolveComponent(\"VirtualScroller\");\n  const _component_Portal = resolveComponent(\"Portal\");\n  const _directive_ripple = resolveDirective(\"ripple\");\n\n  return (openBlock(), createElementBlock(\"div\", {\n    ref: \"container\",\n    class: normalizeClass($options.containerClass),\n    onClick: _cache[15] || (_cache[15] = (...args) => ($options.onContainerClick && $options.onContainerClick(...args)))\n  }, [\n    createElementVNode(\"div\", _hoisted_1, [\n      createElementVNode(\"input\", mergeProps({\n        ref: \"focusInput\",\n        id: $props.inputId,\n        type: \"text\",\n        readonly: \"\",\n        disabled: $props.disabled,\n        placeholder: $props.placeholder,\n        tabindex: !$props.disabled ? $props.tabindex : -1,\n        role: \"combobox\",\n        \"aria-label\": _ctx.ariaLabel,\n        \"aria-labelledby\": _ctx.ariaLabelledby,\n        \"aria-haspopup\": \"listbox\",\n        \"aria-expanded\": $data.overlayVisible,\n        \"aria-controls\": $data.id + '_list',\n        \"aria-activedescendant\": $data.focused ? $options.focusedOptionId : undefined,\n        onFocus: _cache[0] || (_cache[0] = (...args) => ($options.onFocus && $options.onFocus(...args))),\n        onBlur: _cache[1] || (_cache[1] = (...args) => ($options.onBlur && $options.onBlur(...args))),\n        onKeydown: _cache[2] || (_cache[2] = (...args) => ($options.onKeyDown && $options.onKeyDown(...args)))\n      }, $props.inputProps), null, 16, _hoisted_2)\n    ]),\n    createElementVNode(\"div\", _hoisted_3, [\n      createElementVNode(\"div\", {\n        class: normalizeClass($options.labelClass)\n      }, [\n        renderSlot(_ctx.$slots, \"value\", {\n          value: $props.modelValue,\n          placeholder: $props.placeholder\n        }, () => [\n          ($props.display === 'comma')\n            ? (openBlock(), createElementBlock(Fragment, { key: 0 }, [\n                createTextVNode(toDisplayString($options.label || 'empty'), 1)\n              ], 64))\n            : ($props.display === 'chip')\n              ? (openBlock(), createElementBlock(Fragment, { key: 1 }, [\n                  (openBlock(true), createElementBlock(Fragment, null, renderList($options.chipSelectedItems, (item) => {\n                    return (openBlock(), createElementBlock(\"div\", {\n                      key: $options.getLabelByValue(item),\n                      class: \"p-multiselect-token\"\n                    }, [\n                      renderSlot(_ctx.$slots, \"chip\", { value: item }, () => [\n                        createElementVNode(\"span\", _hoisted_4, toDisplayString($options.getLabelByValue(item)), 1)\n                      ]),\n                      (!$props.disabled)\n                        ? (openBlock(), createElementBlock(\"span\", {\n                            key: 0,\n                            class: normalizeClass(['p-multiselect-token-icon', $props.removeTokenIcon]),\n                            onClick: withModifiers($event => ($options.removeOption($event, item)), [\"stop\"])\n                          }, null, 10, _hoisted_5))\n                        : createCommentVNode(\"\", true)\n                    ]))\n                  }), 128)),\n                  (!$props.modelValue || $props.modelValue.length === 0)\n                    ? (openBlock(), createElementBlock(Fragment, { key: 0 }, [\n                        createTextVNode(toDisplayString($props.placeholder || 'empty'), 1)\n                      ], 64))\n                    : createCommentVNode(\"\", true)\n                ], 64))\n              : createCommentVNode(\"\", true)\n        ])\n      ], 2)\n    ]),\n    createElementVNode(\"div\", _hoisted_6, [\n      renderSlot(_ctx.$slots, \"indicator\", {}, () => [\n        createElementVNode(\"span\", {\n          class: normalizeClass($options.dropdownIconClass),\n          \"aria-hidden\": \"true\"\n        }, null, 2)\n      ])\n    ]),\n    createVNode(_component_Portal, { appendTo: $props.appendTo }, {\n      default: withCtx(() => [\n        createVNode(Transition, {\n          name: \"p-connected-overlay\",\n          onEnter: $options.onOverlayEnter,\n          onAfterEnter: $options.onOverlayAfterEnter,\n          onLeave: $options.onOverlayLeave,\n          onAfterLeave: $options.onOverlayAfterLeave\n        }, {\n          default: withCtx(() => [\n            ($data.overlayVisible)\n              ? (openBlock(), createElementBlock(\"div\", mergeProps({\n                  key: 0,\n                  ref: $options.overlayRef,\n                  style: $props.panelStyle,\n                  class: $options.panelStyleClass,\n                  onClick: _cache[13] || (_cache[13] = (...args) => ($options.onOverlayClick && $options.onOverlayClick(...args))),\n                  onKeydown: _cache[14] || (_cache[14] = (...args) => ($options.onOverlayKeyDown && $options.onOverlayKeyDown(...args)))\n                }, $props.panelProps), [\n                  createElementVNode(\"span\", {\n                    ref: \"firstHiddenFocusableElementOnOverlay\",\n                    role: \"presentation\",\n                    \"aria-hidden\": \"true\",\n                    class: \"p-hidden-accessible p-hidden-focusable\",\n                    tabindex: 0,\n                    onFocus: _cache[3] || (_cache[3] = (...args) => ($options.onFirstHiddenFocus && $options.onFirstHiddenFocus(...args)))\n                  }, null, 544),\n                  renderSlot(_ctx.$slots, \"header\", {\n                    value: $props.modelValue,\n                    options: $options.visibleOptions\n                  }),\n                  (($props.showToggleAll && $props.selectionLimit == null) || $props.filter)\n                    ? (openBlock(), createElementBlock(\"div\", _hoisted_7, [\n                        ($props.showToggleAll && $props.selectionLimit == null)\n                          ? (openBlock(), createElementBlock(\"div\", {\n                              key: 0,\n                              class: normalizeClass($options.headerCheckboxClass),\n                              onClick: _cache[6] || (_cache[6] = (...args) => ($options.onToggleAll && $options.onToggleAll(...args)))\n                            }, [\n                              createElementVNode(\"div\", _hoisted_8, [\n                                createElementVNode(\"input\", {\n                                  type: \"checkbox\",\n                                  readonly: \"\",\n                                  checked: $options.allSelected,\n                                  \"aria-label\": $options.toggleAllAriaLabel,\n                                  onFocus: _cache[4] || (_cache[4] = (...args) => ($options.onHeaderCheckboxFocus && $options.onHeaderCheckboxFocus(...args))),\n                                  onBlur: _cache[5] || (_cache[5] = (...args) => ($options.onHeaderCheckboxBlur && $options.onHeaderCheckboxBlur(...args)))\n                                }, null, 40, _hoisted_9)\n                              ]),\n                              createElementVNode(\"div\", {\n                                class: normalizeClass(['p-checkbox-box', { 'p-highlight': $options.allSelected, 'p-focus': $data.headerCheckboxFocused }])\n                              }, [\n                                createElementVNode(\"span\", {\n                                  class: normalizeClass(['p-checkbox-icon', { [$props.checkboxIcon]: $options.allSelected }])\n                                }, null, 2)\n                              ], 2)\n                            ], 2))\n                          : createCommentVNode(\"\", true),\n                        ($props.filter)\n                          ? (openBlock(), createElementBlock(\"div\", _hoisted_10, [\n                              createElementVNode(\"input\", mergeProps({\n                                ref: \"filterInput\",\n                                type: \"text\",\n                                value: $data.filterValue,\n                                onVnodeUpdated: _cache[7] || (_cache[7] = (...args) => ($options.onFilterUpdated && $options.onFilterUpdated(...args))),\n                                class: \"p-multiselect-filter p-inputtext p-component\",\n                                placeholder: $props.filterPlaceholder,\n                                role: \"searchbox\",\n                                autocomplete: \"off\",\n                                \"aria-owns\": $data.id + '_list',\n                                \"aria-activedescendant\": $options.focusedOptionId,\n                                onKeydown: _cache[8] || (_cache[8] = (...args) => ($options.onFilterKeyDown && $options.onFilterKeyDown(...args))),\n                                onBlur: _cache[9] || (_cache[9] = (...args) => ($options.onFilterBlur && $options.onFilterBlur(...args))),\n                                onInput: _cache[10] || (_cache[10] = (...args) => ($options.onFilterChange && $options.onFilterChange(...args)))\n                              }, $props.filterInputProps), null, 16, _hoisted_11),\n                              createElementVNode(\"span\", {\n                                class: normalizeClass(['p-multiselect-filter-icon', $props.filterIcon])\n                              }, null, 2)\n                            ]))\n                          : createCommentVNode(\"\", true),\n                        ($props.filter)\n                          ? (openBlock(), createElementBlock(\"span\", _hoisted_12, toDisplayString($options.filterResultMessageText), 1))\n                          : createCommentVNode(\"\", true),\n                        withDirectives((openBlock(), createElementBlock(\"button\", mergeProps({\n                          class: \"p-multiselect-close p-link\",\n                          \"aria-label\": $options.closeAriaLabel,\n                          onClick: _cache[11] || (_cache[11] = (...args) => ($options.onCloseClick && $options.onCloseClick(...args))),\n                          type: \"button\"\n                        }, $props.closeButtonProps), [\n                          createElementVNode(\"span\", {\n                            class: normalizeClass(['p-multiselect-close-icon', $props.closeIcon])\n                          }, null, 2)\n                        ], 16, _hoisted_13)), [\n                          [_directive_ripple]\n                        ])\n                      ]))\n                    : createCommentVNode(\"\", true),\n                  createElementVNode(\"div\", {\n                    class: \"p-multiselect-items-wrapper\",\n                    style: normalizeStyle({ 'max-height': $options.virtualScrollerDisabled ? $props.scrollHeight : '' })\n                  }, [\n                    createVNode(_component_VirtualScroller, mergeProps({ ref: $options.virtualScrollerRef }, $props.virtualScrollerOptions, {\n                      items: $options.visibleOptions,\n                      style: { height: $props.scrollHeight },\n                      tabindex: -1,\n                      disabled: $options.virtualScrollerDisabled\n                    }), createSlots({\n                      content: withCtx(({ styleClass, contentRef, items, getItemOptions, contentStyle, itemSize }) => [\n                        createElementVNode(\"ul\", {\n                          ref: (el) => $options.listRef(el, contentRef),\n                          id: $data.id + '_list',\n                          class: normalizeClass(['p-multiselect-items p-component', styleClass]),\n                          style: normalizeStyle(contentStyle),\n                          role: \"listbox\",\n                          \"aria-multiselectable\": \"true\"\n                        }, [\n                          (openBlock(true), createElementBlock(Fragment, null, renderList(items, (option, i) => {\n                            return (openBlock(), createElementBlock(Fragment, {\n                              key: $options.getOptionRenderKey(option, $options.getOptionIndex(i, getItemOptions))\n                            }, [\n                              ($options.isOptionGroup(option))\n                                ? (openBlock(), createElementBlock(\"li\", {\n                                    key: 0,\n                                    id: $data.id + '_' + $options.getOptionIndex(i, getItemOptions),\n                                    style: normalizeStyle({ height: itemSize ? itemSize + 'px' : undefined }),\n                                    class: \"p-multiselect-item-group\",\n                                    role: \"option\"\n                                  }, [\n                                    renderSlot(_ctx.$slots, \"optiongroup\", {\n                                      option: option.optionGroup,\n                                      index: $options.getOptionIndex(i, getItemOptions)\n                                    }, () => [\n                                      createTextVNode(toDisplayString($options.getOptionGroupLabel(option.optionGroup)), 1)\n                                    ])\n                                  ], 12, _hoisted_15))\n                                : withDirectives((openBlock(), createElementBlock(\"li\", {\n                                    key: 1,\n                                    id: $data.id + '_' + $options.getOptionIndex(i, getItemOptions),\n                                    style: normalizeStyle({ height: itemSize ? itemSize + 'px' : undefined }),\n                                    class: normalizeClass(['p-multiselect-item', { 'p-highlight': $options.isSelected(option), 'p-focus': $data.focusedOptionIndex === $options.getOptionIndex(i, getItemOptions), 'p-disabled': $options.isOptionDisabled(option) }]),\n                                    role: \"option\",\n                                    \"aria-label\": $options.getOptionLabel(option),\n                                    \"aria-selected\": $options.isSelected(option),\n                                    \"aria-disabled\": $options.isOptionDisabled(option),\n                                    \"aria-setsize\": $options.ariaSetSize,\n                                    \"aria-posinset\": $options.getAriaPosInset($options.getOptionIndex(i, getItemOptions)),\n                                    onClick: $event => ($options.onOptionSelect($event, option, $options.getOptionIndex(i, getItemOptions), true)),\n                                    onMousemove: $event => ($options.onOptionMouseMove($event, $options.getOptionIndex(i, getItemOptions)))\n                                  }, [\n                                    createElementVNode(\"div\", _hoisted_17, [\n                                      createElementVNode(\"div\", {\n                                        class: normalizeClass(['p-checkbox-box', { 'p-highlight': $options.isSelected(option) }])\n                                      }, [\n                                        createElementVNode(\"span\", {\n                                          class: normalizeClass(['p-checkbox-icon', { [$props.checkboxIcon]: $options.isSelected(option) }])\n                                        }, null, 2)\n                                      ], 2)\n                                    ]),\n                                    renderSlot(_ctx.$slots, \"option\", {\n                                      option: option,\n                                      index: $options.getOptionIndex(i, getItemOptions)\n                                    }, () => [\n                                      createElementVNode(\"span\", null, toDisplayString($options.getOptionLabel(option)), 1)\n                                    ])\n                                  ], 46, _hoisted_16)), [\n                                    [_directive_ripple]\n                                  ])\n                            ], 64))\n                          }), 128)),\n                          ($data.filterValue && (!items || (items && items.length === 0)))\n                            ? (openBlock(), createElementBlock(\"li\", _hoisted_18, [\n                                renderSlot(_ctx.$slots, \"emptyfilter\", {}, () => [\n                                  createTextVNode(toDisplayString($options.emptyFilterMessageText), 1)\n                                ])\n                              ]))\n                            : (!$props.options || ($props.options && $props.options.length === 0))\n                              ? (openBlock(), createElementBlock(\"li\", _hoisted_19, [\n                                  renderSlot(_ctx.$slots, \"empty\", {}, () => [\n                                    createTextVNode(toDisplayString($options.emptyMessageText), 1)\n                                  ])\n                                ]))\n                              : createCommentVNode(\"\", true)\n                        ], 14, _hoisted_14)\n                      ]),\n                      _: 2\n                    }, [\n                      (_ctx.$slots.loader)\n                        ? {\n                            name: \"loader\",\n                            fn: withCtx(({ options }) => [\n                              renderSlot(_ctx.$slots, \"loader\", { options: options })\n                            ]),\n                            key: \"0\"\n                          }\n                        : undefined\n                    ]), 1040, [\"items\", \"style\", \"disabled\"])\n                  ], 4),\n                  renderSlot(_ctx.$slots, \"footer\", {\n                    value: $props.modelValue,\n                    options: $options.visibleOptions\n                  }),\n                  (!$props.options || ($props.options && $props.options.length === 0))\n                    ? (openBlock(), createElementBlock(\"span\", _hoisted_20, toDisplayString($options.emptyMessageText), 1))\n                    : createCommentVNode(\"\", true),\n                  createElementVNode(\"span\", _hoisted_21, toDisplayString($options.selectedMessageText), 1),\n                  createElementVNode(\"span\", {\n                    ref: \"lastHiddenFocusableElementOnOverlay\",\n                    role: \"presentation\",\n                    \"aria-hidden\": \"true\",\n                    class: \"p-hidden-accessible p-hidden-focusable\",\n                    tabindex: 0,\n                    onFocus: _cache[12] || (_cache[12] = (...args) => ($options.onLastHiddenFocus && $options.onLastHiddenFocus(...args)))\n                  }, null, 544)\n                ], 16))\n              : createCommentVNode(\"\", true)\n          ]),\n          _: 3\n        }, 8, [\"onEnter\", \"onAfterEnter\", \"onLeave\", \"onAfterLeave\"])\n      ]),\n      _: 3\n    }, 8, [\"appendTo\"])\n  ], 2))\n}\n\nfunction styleInject(css, ref) {\n  if ( ref === void 0 ) ref = {};\n  var insertAt = ref.insertAt;\n\n  if (!css || typeof document === 'undefined') { return; }\n\n  var head = document.head || document.getElementsByTagName('head')[0];\n  var style = document.createElement('style');\n  style.type = 'text/css';\n\n  if (insertAt === 'top') {\n    if (head.firstChild) {\n      head.insertBefore(style, head.firstChild);\n    } else {\n      head.appendChild(style);\n    }\n  } else {\n    head.appendChild(style);\n  }\n\n  if (style.styleSheet) {\n    style.styleSheet.cssText = css;\n  } else {\n    style.appendChild(document.createTextNode(css));\n  }\n}\n\nvar css_248z = \"\\n.p-multiselect {\\n    display: inline-flex;\\n    cursor: pointer;\\n    position: relative;\\n    user-select: none;\\n}\\n.p-multiselect-trigger {\\n    display: flex;\\n    align-items: center;\\n    justify-content: center;\\n    flex-shrink: 0;\\n}\\n.p-multiselect-label-container {\\n    overflow: hidden;\\n    flex: 1 1 auto;\\n    cursor: pointer;\\n}\\n.p-multiselect-label {\\n    display: block;\\n    white-space: nowrap;\\n    cursor: pointer;\\n    overflow: hidden;\\n    text-overflow: ellipsis;\\n}\\n.p-multiselect-label-empty {\\n    overflow: hidden;\\n    visibility: hidden;\\n}\\n.p-multiselect-token {\\n    cursor: default;\\n    display: inline-flex;\\n    align-items: center;\\n    flex: 0 0 auto;\\n}\\n.p-multiselect-token-icon {\\n    cursor: pointer;\\n}\\n.p-multiselect .p-multiselect-panel {\\n    min-width: 100%;\\n}\\n.p-multiselect-panel {\\n    position: absolute;\\n    top: 0;\\n    left: 0;\\n}\\n.p-multiselect-items-wrapper {\\n    overflow: auto;\\n}\\n.p-multiselect-items {\\n    margin: 0;\\n    padding: 0;\\n    list-style-type: none;\\n}\\n.p-multiselect-item {\\n    cursor: pointer;\\n    display: flex;\\n    align-items: center;\\n    font-weight: normal;\\n    white-space: nowrap;\\n    position: relative;\\n    overflow: hidden;\\n}\\n.p-multiselect-item-group {\\n    cursor: auto;\\n}\\n.p-multiselect-header {\\n    display: flex;\\n    align-items: center;\\n    justify-content: space-between;\\n}\\n.p-multiselect-filter-container {\\n    position: relative;\\n    flex: 1 1 auto;\\n}\\n.p-multiselect-filter-icon {\\n    position: absolute;\\n    top: 50%;\\n    margin-top: -0.5rem;\\n}\\n.p-multiselect-filter-container .p-inputtext {\\n    width: 100%;\\n}\\n.p-multiselect-close {\\n    display: flex;\\n    align-items: center;\\n    justify-content: center;\\n    flex-shrink: 0;\\n    overflow: hidden;\\n    position: relative;\\n    margin-left: auto;\\n}\\n.p-fluid .p-multiselect {\\n    display: flex;\\n}\\n\";\nstyleInject(css_248z);\n\nscript.render = render;\n\nexport { script as default };\n"]},"metadata":{},"sourceType":"module"}