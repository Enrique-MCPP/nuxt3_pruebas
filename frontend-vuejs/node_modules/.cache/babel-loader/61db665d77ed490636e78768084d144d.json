{"ast":null,"code":"import { createElementVNode as _createElementVNode, resolveComponent as _resolveComponent, createVNode as _createVNode, createTextVNode as _createTextVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, withCtx as _withCtx, createBlock as _createBlock, toDisplayString as _toDisplayString, resolveDynamicComponent as _resolveDynamicComponent, createCommentVNode as _createCommentVNode, normalizeClass as _normalizeClass, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-2e89076a\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  style: {\n    \"margin\": \"0 auto\",\n    \"width\": \"80%\"\n  }\n};\nconst _hoisted_2 = {\n  class: \"flex justify-content-end\"\n};\nconst _hoisted_3 = {\n  class: \"p-input-icon-left\"\n};\nconst _hoisted_4 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"i\", {\n  class: \"pi pi-search\"\n}, null, -1 /* HOISTED */));\nconst _hoisted_5 = /*#__PURE__*/_createTextVNode(\" No hay elementos disponibles. \");\nconst _hoisted_6 = /*#__PURE__*/_createTextVNode(\" Cargando elementos. Por favor, espera. \");\nconst _hoisted_7 = {\n  class: \"panel-flex\",\n  style: {\n    \"margin-bottom\": \"20px\",\n    \"margin\": \"0 auto\",\n    \"width\": \"80%\"\n  }\n};\nconst _hoisted_8 = [\"for\"];\nconst _hoisted_9 = {\n  class: \"center-buttons\",\n  style: {\n    \"margin\": \"0 auto\",\n    \"width\": \"80%\",\n    \"text-align\": \"center\"\n  }\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_p58inputText = _resolveComponent(\"p:inputText\");\n  const _component_p_column = _resolveComponent(\"p_column\");\n  const _component_p58dataTable = _resolveComponent(\"p:dataTable\");\n  const _component_p_panel = _resolveComponent(\"p_panel\");\n  const _component_ZDialog = _resolveComponent(\"ZDialog\");\n  const _component_p58commandButton = _resolveComponent(\"p:commandButton\");\n  return _openBlock(), _createElementBlock(_Fragment, null, [_createElementVNode(\"div\", _hoisted_1, [_createVNode(_component_p_panel, {\n    header: $props.header\n  }, {\n    default: _withCtx(() => [_createVNode(_component_p58dataTable, {\n      value: $data.localList,\n      paginator: true,\n      rows: 10,\n      selection: $data.selectedRow,\n      \"onUpdate:selection\": _cache[1] || (_cache[1] = $event => $data.selectedRow = $event),\n      class: \"p-datatable-pedidos\",\n      onRowClick: $options.onRowSelect,\n      selectionMode: \"single\",\n      dataKey: \"id\",\n      paginatorTemplate: \"CurrentPageReport FirstPageLink PrevPageLink PageLinks NextPageLink LastPageLink RowsPerPageDropdown\",\n      rowsPerPageOptions: [10, 20, 50],\n      responsiveLayout: \"scroll\",\n      filterDisplay: \"row\",\n      globalFilterFields: $options.globalFilterFields,\n      filters: $data.filters,\n      \"onUpdate:filters\": _cache[2] || (_cache[2] = $event => $data.filters = $event),\n      currentPageReportTemplate: \"Mostrando {first} a {last} de {totalRecords}\"\n    }, {\n      header: _withCtx(() => [_createElementVNode(\"div\", _hoisted_2, [_createElementVNode(\"span\", _hoisted_3, [_hoisted_4, _createVNode(_component_p58inputText, {\n        modelValue: $data.filters['global'].value,\n        \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.filters['global'].value = $event),\n        placeholder: \"Buscar...\"\n      }, null, 8 /* PROPS */, [\"modelValue\"])])])]),\n      empty: _withCtx(() => [_hoisted_5]),\n      loading: _withCtx(() => [_hoisted_6]),\n      default: _withCtx(() => [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($props.columns, column => {\n        return _openBlock(), _createBlock(_component_p_column, {\n          field: column.field,\n          header: column.title,\n          key: column.field,\n          ref_for: true,\n          ref: column.field,\n          sortable: true\n        }, {\n          filter: _withCtx(({\n            filterModel,\n            filterCallback\n          }) => [_createVNode(_component_p58inputText, {\n            type: \"text\",\n            modelValue: filterModel.value,\n            \"onUpdate:modelValue\": $event => filterModel.value = $event,\n            onKeyup: $event => filterCallback(),\n            class: \"p-column-filter\",\n            placeholder: 'Buscar por ' + column.title\n          }, null, 8 /* PROPS */, [\"modelValue\", \"onUpdate:modelValue\", \"onKeyup\", \"placeholder\"])]),\n          _: 2 /* DYNAMIC */\n        }, 1032 /* PROPS, DYNAMIC_SLOTS */, [\"field\", \"header\"]);\n      }), 128 /* KEYED_FRAGMENT */))]),\n\n      _: 1 /* STABLE */\n    }, 8 /* PROPS */, [\"value\", \"selection\", \"onRowClick\", \"globalFilterFields\", \"filters\"])]),\n    _: 1 /* STABLE */\n  }, 8 /* PROPS */, [\"header\"])]), _createVNode(_component_p_panel, {\n    style: {\n      \"margin-bottom\": \"20px\",\n      \"margin\": \"0 auto\",\n      \"width\": \"80%\"\n    }\n  }, {\n    default: _withCtx(() => [_createElementVNode(\"div\", _hoisted_7, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($props.crudInputs, (input, index) => {\n      return _openBlock(), _createElementBlock(\"div\", {\n        key: index,\n        style: {\n          \"display\": \"inline-block\",\n          \"margin-right\": \"10px\",\n          \"vertical-align\": \"middle\"\n        }\n      }, [_createElementVNode(\"label\", {\n        for: input.value,\n        style: {\n          \"display\": \"block\"\n        }\n      }, _toDisplayString(input.label), 9 /* TEXT, PROPS */, _hoisted_8), input.component !== 'ZDialog' ? (_openBlock(), _createBlock(_resolveDynamicComponent(input.component), {\n        key: 0,\n        options: input.options,\n        \"option-label\": option => option.label,\n        \"option-value\": option => option.value,\n        disabled: $data.isDisabled,\n        modelValue: $data.localEditedRow[input.value],\n        \"onUpdate:modelValue\": $event => $data.localEditedRow[input.value] = $event,\n        style: {\n          \"width\": \"200px\"\n        }\n      }, null, 8 /* PROPS */, [\"options\", \"option-label\", \"option-value\", \"disabled\", \"modelValue\", \"onUpdate:modelValue\"])) : (_openBlock(), _createBlock(_component_ZDialog, {\n        key: 1,\n        ref_for: true,\n        ref: \"zDialog\",\n        data: input.zDialogData,\n        columns: input.zDialogColumns,\n        labelDialogButton: input.localLabelDialogButton,\n        header: input.header,\n        onElementosSeleccionados: $options.onElementosSeleccionados,\n        idDialog: input.id\n      }, null, 8 /* PROPS */, [\"data\", \"columns\", \"labelDialogButton\", \"header\", \"onElementosSeleccionados\", \"idDialog\"]))]);\n    }), 128 /* KEYED_FRAGMENT */))])]),\n\n    _: 1 /* STABLE */\n  }), _createVNode(_component_p_panel, {\n    style: {\n      \"margin-bottom\": \"20px\",\n      \"margin\": \"0 auto\",\n      \"width\": \"80%\"\n    }\n  }, {\n    default: _withCtx(() => [_createElementVNode(\"div\", _hoisted_9, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($props.crudButtons, (input, index) => {\n      return _openBlock(), _createElementBlock(\"div\", {\n        key: index,\n        style: {\n          \"display\": \"inline-block\",\n          \"margin-right\": \"10px\",\n          \"vertical-align\": \"middle\"\n        }\n      }, [_createVNode(_component_p58commandButton, {\n        is: input.component,\n        label: input.label,\n        onClick: $event => $options.onClick(input.onClick, () => _ctx.$emit(input.onClick)),\n        class: _normalizeClass(input.className),\n        icon: input.icon\n      }, null, 8 /* PROPS */, [\"is\", \"label\", \"onClick\", \"class\", \"icon\"])]);\n    }), 128 /* KEYED_FRAGMENT */))])]),\n\n    _: 1 /* STABLE */\n  }), _createElementVNode(\"h2\", null, [_createElementVNode(\"p\", null, \"El valor del estado seleccionado es: \" + _toDisplayString($data.localEditedRow[\"estadoUno\"]), 1 /* TEXT */), _createElementVNode(\"p\", null, \"El valor del producto seleccionado es: \" + _toDisplayString($data.localEditedRow[\"producto\"]), 1 /* TEXT */), _createElementVNode(\"p\", null, \"El valor de los productos seleccionados es: \" + _toDisplayString($data.localEditedRow[\"productos\"]), 1 /* TEXT */), _createElementVNode(\"p\", null, \"El valor del nombre es: \" + _toDisplayString($data.localEditedRow[\"name\"]), 1 /* TEXT */), _createElementVNode(\"p\", null, \"El valor del método de pago es: \" + _toDisplayString($data.localEditedRow[\"metodoDePago\"]), 1 /* TEXT */), _createElementVNode(\"p\", null, \"El valor de la fecha de creación es: \" + _toDisplayString($data.localEditedRow[\"fechaCreacion\"]), 1 /* TEXT */), _createElementVNode(\"p\", null, \"El pedido es caro: \" + _toDisplayString($data.localEditedRow[\"esPedidoCaro\"]), 1 /* TEXT */)])], 64 /* STABLE_FRAGMENT */);\n}","map":{"version":3,"names":["style","class","_createElementVNode","_hoisted_1","_createVNode","_component_p_panel","header","$props","_component_p58dataTable","value","$data","localList","paginator","rows","selection","selectedRow","$event","onRowClick","$options","onRowSelect","selectionMode","dataKey","paginatorTemplate","rowsPerPageOptions","responsiveLayout","filterDisplay","globalFilterFields","filters","currentPageReportTemplate","_withCtx","_hoisted_2","_hoisted_3","_hoisted_4","_component_p58inputText","placeholder","empty","loading","_createElementBlock","_Fragment","_renderList","columns","column","_createBlock","_component_p_column","field","title","key","ref","sortable","filter","filterModel","filterCallback","type","onKeyup","_hoisted_7","crudInputs","input","index","for","label","_hoisted_8","component","_resolveDynamicComponent","options","option","disabled","isDisabled","localEditedRow","_component_ZDialog","data","zDialogData","zDialogColumns","labelDialogButton","localLabelDialogButton","onElementosSeleccionados","idDialog","id","_hoisted_9","crudButtons","_component_p58commandButton","is","onClick","_ctx","$emit","_normalizeClass","className","icon","_toDisplayString"],"sources":["C:\\Users\\emalc\\OneDrive\\Escritorio\\CRUD_keycloak_primeVue\\keycloak-workshop\\frontend-vuejs\\src\\componentes\\GenericDatatable.vue"],"sourcesContent":["<template>\r\n    <div style=\"margin: 0 auto; width: 80%\">\r\n        <p_panel :header=\"header\">\r\n            <p:dataTable :value=\"localList\" :paginator=\"true\" :rows=\"10\" v-model:selection=\"selectedRow\"\r\n                class=\"p-datatable-pedidos\" @row-click=\"onRowSelect\" selectionMode=\"single\" dataKey=\"id\"\r\n                paginatorTemplate=\"CurrentPageReport FirstPageLink PrevPageLink PageLinks NextPageLink LastPageLink RowsPerPageDropdown\"\r\n                :rowsPerPageOptions=\"[10, 20, 50]\" responsiveLayout=\"scroll\" filterDisplay=\"row\"\r\n                :globalFilterFields=\"globalFilterFields\" v-model:filters=\"filters\"\r\n                currentPageReportTemplate=\"Mostrando {first} a {last} de {totalRecords}\">\r\n                <template #header>\r\n                    <div class=\"flex justify-content-end\">\r\n                        <span class=\"p-input-icon-left \">\r\n                            <i class=\"pi pi-search\" />\r\n                            <p:inputText v-model=\"filters['global'].value\" placeholder=\"Buscar...\" />\r\n                        </span>\r\n                    </div>\r\n                </template>\r\n                <template #empty>\r\n                    No hay elementos disponibles.\r\n                </template>\r\n                <template #loading>\r\n                    Cargando elementos. Por favor, espera.\r\n                </template>\r\n                <p_column v-for=\"column in columns\" :field=\"column.field\" :header=\"column.title\" :key=\"column.field\"\r\n                    :ref=\"column.field\" :sortable=\"true\">\r\n                    <template #filter=\"{ filterModel, filterCallback }\">\r\n                        <p:inputText type=\"text\" v-model=\"filterModel.value\" @keyup=\"filterCallback()\"\r\n                            class=\"p-column-filter\" :placeholder=\"'Buscar por ' + column.title\" />\r\n                    </template>\r\n                </p_column>\r\n\r\n            </p:dataTable>\r\n        </p_panel>\r\n    </div>\r\n    <p_panel style=\"margin-bottom: 20px;margin: 0 auto; width: 80%\">\r\n        <div class=\"panel-flex\" style=\"margin-bottom: 20px;margin: 0 auto; width: 80%\">\r\n            <div v-for=\"(input, index) in crudInputs\" :key=\"index\"\r\n                style=\"display: inline-block; margin-right: 10px; vertical-align: middle;\">\r\n\r\n                <label :for=\"input.value\" style=\"display: block;\">{{ input.label }}</label>\r\n                <component v-if=\"input.component !== 'ZDialog'\" :is=\"input.component\" :options=\"input.options\"\r\n                    :option-label=\"(option) => option.label\" :option-value=\"(option) => option.value\" :disabled=\"isDisabled\"\r\n                    v-model=\"localEditedRow[input.value]\" style=\"width: 200px;\">\r\n                </component>\r\n\r\n                <ZDialog ref=\"zDialog\" v-else :data=\"input.zDialogData\" :columns=\"input.zDialogColumns\"\r\n                    :labelDialogButton=\"input.localLabelDialogButton\" :header=\"input.header\"\r\n                    @elementosSeleccionados=\"onElementosSeleccionados\" :idDialog=\"input.id\">\r\n                </ZDialog>\r\n\r\n            </div>\r\n\r\n        </div>\r\n    </p_panel>\r\n    <p_panel style=\"margin-bottom: 20px;margin: 0 auto; width: 80%\">\r\n        <div class=\"center-buttons\" style=\"margin: 0 auto; width: 80%; text-align: center;\">\r\n\r\n            <div v-for=\"(input, index) in crudButtons\" :key=\"index\"\r\n                style=\"display: inline-block; margin-right: 10px; vertical-align: middle;\">\r\n                <p:commandButton :is=\"input.component\" :label=\"input.label\"\r\n                    @click=\"onClick(input.onClick, () => $emit(input.onClick))\" :class=\"input.className\" :icon=\"input.icon\">\r\n                </p:commandButton>\r\n            </div>\r\n\r\n        </div>\r\n    </p_panel>\r\n\r\n\r\n    <h2>\r\n        <p>El valor del estado seleccionado es: {{ localEditedRow[\"estadoUno\"] }}</p>\r\n        <p>El valor del producto seleccionado es: {{ localEditedRow[\"producto\"] }}</p>\r\n        <p>El valor de los productos seleccionados es: {{ localEditedRow[\"productos\"] }}</p>\r\n        <p>El valor del nombre es: {{ localEditedRow[\"name\"] }}</p>\r\n\r\n        <p>El valor del método de pago es: {{ localEditedRow[\"metodoDePago\"] }}</p>\r\n\r\n        <p>El valor de la fecha de creación es: {{ localEditedRow[\"fechaCreacion\"] }}</p>\r\n\r\n        <p>El pedido es caro: {{ localEditedRow[\"esPedidoCaro\"] }}</p>\r\n\r\n\r\n    </h2>\r\n</template>\r\n  \r\n<script>\r\nimport { FilterMatchMode } from 'primevue/api';\r\nimport { mapGetters } from 'vuex';\r\nimport axios from \"axios\";\r\nimport ZDialog from './ZDialog.vue';\r\nimport PedidoService from '@/service/PedidoService';\r\n\r\nexport default {\r\n\r\n    props: {\r\n        columns: {\r\n            type: Array,\r\n            required: true\r\n        },\r\n        pathListDatatable: {\r\n            type: String,\r\n            required: false\r\n        },\r\n\r\n        header: {\r\n            type: String,\r\n            default: \"Lista de elementos\"\r\n        },\r\n        editedRow: {\r\n            type: Object,\r\n            default: null\r\n        },\r\n        crudInputs: {\r\n            type: Object,\r\n            default: function () {\r\n                return {}\r\n            }\r\n        },\r\n        crudButtons: {\r\n            type: Array,\r\n            required: true\r\n        },\r\n\r\n        beforeInsert: {\r\n            type: Function,\r\n            required: true,\r\n        },\r\n        service: {\r\n            type: Object,\r\n            required: true\r\n        },\r\n        rowSelectListener: {\r\n            type: Function,\r\n            required: true,\r\n        },\r\n\r\n\r\n\r\n\r\n    },\r\n    components: {\r\n        ZDialog,\r\n\r\n    },\r\n    emits: ['elementosSeleccionados', 'save', 'select', 'eventService'],\r\n    data() {\r\n\r\n        return {\r\n            filters: {},\r\n            selectedRow: null,\r\n            localEditedRow: Object.assign({}, this.editedRow),\r\n            isDisabled: true,\r\n            localList: [],\r\n            checked: null,\r\n\r\n\r\n\r\n\r\n        }\r\n\r\n    },\r\n    beforeCreate() {\r\n        this.pedidoService = new PedidoService();\r\n    },\r\n    watch: {\r\n        editedRow: {\r\n            handler: function (newVal) {\r\n                this.localEditedRow = Object.assign({}, newVal);\r\n            },\r\n            deep: true\r\n        },\r\n    }\r\n    ,\r\n    computed: {\r\n        globalFilterFields() {\r\n            return [\r\n                'global',\r\n                ...this.columns.map((column) => column.field)\r\n            ];\r\n        },\r\n        currentPageReportTemplate() {\r\n            return `Mostrando {first} a {last} de ${this.data.length} pedidos`;\r\n        },\r\n        currentSelection() {\r\n            return this.selectedRow[0] || {};\r\n        },\r\n        ...mapGetters({\r\n            username: 'username',\r\n            keycloakToken: 'keycloakToken',\r\n            keycloakTokenParsed: 'keycloakTokenParsed',\r\n            axiosConfig: 'axiosConfig',\r\n            roles: 'roles',\r\n        }),\r\n        getValue() {\r\n            return (value) => this.localEditedRow[value];\r\n        }\r\n\r\n    },\r\n    created() {\r\n        console.log(\"created\");\r\n        this.initFilters();\r\n        this.getAll();\r\n    },\r\n    mounted() {\r\n        console.log('mounted hijo');\r\n        // Recorre los inputs y si existe pathList, realiza una solicitud GET para obtener las opciones del selectOneMenu\r\n        this.crudInputs.forEach(async (input) => {\r\n            if (input.component.includes('select') && input.pathList) {\r\n                const response = await axios.get(input.pathList, this.axiosConfig);\r\n                const parsedData = response.data;\r\n                input.options = parsedData.map((item) => ({\r\n                    label: item.nombre,\r\n                    value: item,\r\n                }));\r\n            } else if (input.component.includes('ZDialog') && input.pathList) {\r\n                const response = await axios.get(input.pathList, this.axiosConfig);\r\n                input.zDialogData = response.data;\r\n                console.log(input.zDialogData);\r\n            }\r\n        });\r\n    },\r\n    methods: {\r\n        onRowSelect(event) {\r\n            this.localEditedRow = Object.assign({}, event.data);\r\n            console.log('localEditedRow del hijo', this.localEditedRow);\r\n            this.isDisabled = false;\r\n            this.rowSelectListener(() => {\r\n\r\n                if (typeof handleRowSelection === 'function') {\r\n                    this.handleRowSelection();\r\n                }\r\n\r\n            }, this.localEditedRow);\r\n            console.log('Paco')\r\n            let nombrePrueba = 'Kike'\r\n            console.log('El nombre prueba en rowselect es ', nombrePrueba)\r\n            console.log('El nombre prueba en rowselect es ' + nombrePrueba)\r\n\r\n            this.service.getEvent(() => {\r\n\r\n                if (typeof handleRowSelection === 'function') {\r\n                    this.handleEventPrueba();\r\n                }\r\n\r\n            }, nombrePrueba);\r\n\r\n            console.log('El nombre prueba en rowselect ahora es es ' + nombrePrueba)\r\n        },\r\n        handleRowSelection() {\r\n            console.log('Row selected!');\r\n        },\r\n        handleEventPrueba() {\r\n            console.log('Row event prueba!');\r\n        },\r\n        initFilters() {\r\n            const filters = {\r\n                'global': { value: null, matchMode: FilterMatchMode.CONTAINS }\r\n            };\r\n            this.columns.forEach((column) => {\r\n                filters[column.field] = {\r\n                    value: null,\r\n                    matchMode: FilterMatchMode.CONTAINS\r\n                };\r\n            });\r\n            this.filters = filters;\r\n        },\r\n        onElementosSeleccionados(elementosSeleccionados, idDialog) {\r\n\r\n            this.$emit('elementosSeleccionados', elementosSeleccionados, idDialog, this.localEditedRow);\r\n\r\n        },\r\n        onClick(action, callback) {\r\n            if (action === 'save') {\r\n                console.log('onClick del hijo antes de llamar al beforesave del padre');\r\n                this.beforeInsert(() => {\r\n                    console.log('beforeInsert callback del hijo');\r\n                    callback();\r\n                });\r\n                this.save();\r\n            } else if (action === 'remove') {\r\n                this.remove();\r\n            } else if (action === 'create') {\r\n                this.create();\r\n            }\r\n        },\r\n        save() {\r\n\r\n            console.log(this.localEditedRow);\r\n\r\n            try {\r\n                this.service.save(this.localEditedRow, this.axiosConfig).then(() => {\r\n                    this.$toast.add({\r\n                        severity: 'success',\r\n                        summary: 'Guardando',\r\n                        detail: 'REGISTRO CREADO CORRECTAMENTE. GUARDADO EN BASE DE DATOS',\r\n                        life: 3000\r\n                    });\r\n                    this.getAll();\r\n                    this.isDisabled = true;\r\n                }).catch((error) => {\r\n                    console.log('primer catch');\r\n                    console.log(error);\r\n                    if (error.response.status === 400) {\r\n                        const errorMessage = error.response.data;\r\n                        this.$toast.add({\r\n                            severity: 'error',\r\n                            summary: 'Error',\r\n                            detail: errorMessage,\r\n                            life: 3000\r\n                        });\r\n                    }\r\n                });\r\n            } catch (error) {\r\n                console.log('segundo catch');\r\n                console.log(error);\r\n                this.$toast.add({\r\n                    severity: 'error',\r\n                    summary: 'Error',\r\n                    detail: 'No se pudo guardar el registro. Por favor, inténtalo de nuevo más tarde.',\r\n                    life: 3000\r\n                });\r\n            }\r\n        },\r\n        create() {\r\n            this.isDisabled = false;\r\n            console.log('Hola create')\r\n            this.localEditedRow = {\r\n                id: null,\r\n                estado: null,\r\n                productos: null,\r\n                precioTotal: null,\r\n                direccionEnvio: null,\r\n                metodoDePago: null,\r\n                numSeguimiento: null,\r\n                observaciones: null,\r\n            };\r\n\r\n        },\r\n        remove() {\r\n            try {\r\n                this.service.remove(this.localEditedRow.id, this.axiosConfig).then(() => {\r\n                    this.$toast.add({ severity: 'success', summary: 'Eliminando', detail: 'REGISTRO ELIMINADO CORRECTAMENTE. BORRADO EN BASE DE DATOS', life: 3000 })\r\n                    this.getAll();\r\n                    this.isDisabled = true;\r\n                });\r\n            } catch (error) {\r\n                this.$toast.add({ severity: 'error', summary: 'Error', detail: 'No se pudo eliminar el registro. Por favor, inténtalo de nuevo más tarde.', life: 3000 });\r\n            }\r\n        },\r\n        async getAll() {\r\n            let response;\r\n            if (!this.$props.pathListDatatable) {\r\n                response = await this.service.getAll(this.axiosConfig);\r\n\r\n            } else {\r\n                console.log('lo he conseguido')\r\n                response = await this.axios.get(this.pathListDatatable, this.axiosConfig);\r\n            }\r\n            this.localList = response.data;\r\n\r\n        },\r\n\r\n\r\n    }\r\n}\r\n</script>\r\n  \r\n\r\n<style lang=\"scss\" scoped>\r\n::v-deep(.p-datatable.p-datatable-pedidos) {\r\n    .p-datatable-header {\r\n        padding: 1rem;\r\n        text-align: left;\r\n        font-size: 1.5rem;\r\n    }\r\n\r\n    .p-paginator {\r\n        padding: 1rem;\r\n    }\r\n\r\n    .p-datatable-thead>tr>th {\r\n        text-align: left;\r\n    }\r\n\r\n    .p-datatable-tbody>tr>td {\r\n        cursor: auto;\r\n    }\r\n\r\n    .p-dropdown-label:not(.p-placeholder) {\r\n        text-transform: uppercase;\r\n    }\r\n}\r\n\r\n.panel-flex {\r\n    display: flex;\r\n    flex-wrap: wrap;\r\n    justify-content: flex-start;\r\n    align-items: flex-start;\r\n}\r\n\r\n.panel-flex>div {\r\n    flex-basis: calc(25% - 10px);\r\n    margin-right: 10px;\r\n    margin-bottom: 20px;\r\n}\r\n</style>"],"mappings":"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"},"metadata":{},"sourceType":"module"}