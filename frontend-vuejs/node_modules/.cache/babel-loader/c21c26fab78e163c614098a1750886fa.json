{"ast":null,"code":"import { FilterMatchMode } from 'primevue/api';\nimport { mapGetters } from 'vuex';\nimport axios from \"axios\";\nimport ZDialog from './ZDialog.vue';\nimport PedidoService from '@/service/PedidoService';\nexport default {\n  props: {\n    columns: {\n      type: Array,\n      required: true\n    },\n    list: {\n      type: Array,\n      required: true\n    },\n    header: {\n      type: String,\n      default: \"Lista de elementos\"\n    },\n    editedRow: {\n      type: Object,\n      default: null\n    },\n    crudInputs: {\n      type: Object,\n      default: function () {\n        return {};\n      }\n    },\n    crudButtons: {\n      type: Array,\n      required: true\n    },\n    beforeInsert: {\n      type: Function,\n      required: true\n    },\n    service: {\n      type: Object,\n      required: true\n    }\n  },\n  components: {\n    ZDialog\n  },\n  emits: ['elementosSeleccionados', 'save'],\n\n  data() {\n    return {\n      filters: {},\n      selectedRow: null,\n      localEditedRow: Object.assign({}, this.editedRow),\n      optionsData: [],\n      customValueInput: null,\n      localLabelDialogButton: null,\n      isDisabled: true,\n      localList: this.list\n    };\n  },\n\n  beforeCreate() {\n    this.pedidoService = new PedidoService();\n  },\n\n  watch: {\n    editedRow: {\n      handler: function (newVal) {\n        this.localEditedRow = Object.assign({}, newVal);\n      },\n      deep: true\n    }\n  },\n  computed: {\n    globalFilterFields() {\n      return ['global', ...this.columns.map(column => column.field)];\n    },\n\n    currentPageReportTemplate() {\n      return `Mostrando {first} a {last} de ${this.data.length} pedidos`;\n    },\n\n    currentSelection() {\n      return this.selectedRow[0] || {};\n    },\n\n    ...mapGetters({\n      username: 'username',\n      keycloakToken: 'keycloakToken',\n      keycloakTokenParsed: 'keycloakTokenParsed',\n      axiosConfig: 'axiosConfig',\n      roles: 'roles'\n    }),\n\n    getValue() {\n      return value => this.localEditedRow[value];\n    }\n\n  },\n\n  async created() {\n    console.log(\"created\");\n    this.initFilters();\n    this.getAll();\n  },\n\n  mounted() {\n    // Recorre los inputs y si existe pathList, realiza una solicitud GET para obtener las opciones del selectOneMenu\n    this.crudInputs.forEach(async input => {\n      if (input.component.includes('select') && input.pathList) {\n        const response = await axios.get(input.pathList, this.axiosConfig);\n        const parsedData = response.data;\n        input.options = parsedData.map(item => ({\n          label: item.nombre,\n          value: item\n        }));\n      } else if (input.component.includes('ZDialog') && input.pathList) {\n        const response = await axios.get(input.pathList, this.axiosConfig);\n        input.zDialogData = response.data;\n        console.log(input.zDialogData);\n      }\n    });\n  },\n\n  methods: {\n    onRowSelect(event) {\n      this.localEditedRow = Object.assign({}, event.data);\n      this.isDisabled = false;\n    },\n\n    initFilters() {\n      const filters = {\n        'global': {\n          value: null,\n          matchMode: FilterMatchMode.CONTAINS\n        }\n      };\n      this.columns.forEach(column => {\n        filters[column.field] = {\n          value: null,\n          matchMode: FilterMatchMode.CONTAINS\n        };\n      });\n      this.filters = filters;\n    },\n\n    updateLocalEditedRow(value, key) {\n      this.$set(this.localEditedRow, key, value);\n    },\n\n    loadLazyData() {\n      this.loading = true;\n      setTimeout(() => {\n        this.customerService.getCustomers({\n          lazyEvent: JSON.stringify(this.lazyParams)\n        }).then(data => {\n          this.customers = data.customers;\n          this.totalRecords = data.totalRecords;\n          this.loading = false;\n        });\n      }, Math.random() * 1000 + 250);\n    },\n\n    onElementosSeleccionados(elementosSeleccionados, idDialog) {\n      this.$emit('elementosSeleccionados', elementosSeleccionados, idDialog, this.localEditedRow);\n    },\n\n    onClick(action, callback) {\n      if (action === 'save') {\n        console.log('onClick del hijo antes de llamar al beforesave del padre');\n        this.beforeInsert(() => {\n          console.log('beforeInsert callback del hijo');\n          callback();\n        });\n        this.save();\n      } else if (action === 'remove') {\n        this.remove();\n      } else if (action === 'create') {\n        this.create();\n      }\n    },\n\n    save() {\n      console.log(this.localEditedRow);\n\n      try {\n        this.localEditedRow.fechaCreacion = \"2023-03-01T00:00:00.000Z\";\n        this.service.save(this.localEditedRow, this.axiosConfig).then(() => {\n          this.$toast.add({\n            severity: 'success',\n            summary: 'Guardando',\n            detail: 'REGISTRO CREADO CORRECTAMENTE. GUARDADO EN BASE DE DATOS',\n            life: 3000\n          });\n          this.getAll();\n          this.isDisabled = true;\n        }).catch(error => {\n          console.log('primer catch');\n          console.log(error);\n\n          if (error.response.status === 400) {\n            const errorMessage = error.response.data;\n            this.$toast.add({\n              severity: 'error',\n              summary: 'Error',\n              detail: errorMessage,\n              life: 3000\n            });\n          }\n        });\n      } catch (error) {\n        console.log('segundo catch');\n        console.log(error);\n        this.$toast.add({\n          severity: 'error',\n          summary: 'Error',\n          detail: 'No se pudo guardar el registro. Por favor, inténtalo de nuevo más tarde.',\n          life: 3000\n        });\n      }\n    },\n\n    create() {\n      this.isDisabled = false;\n      console.log('Hola create');\n      this.localEditedRow = {\n        id: null,\n        estado: null,\n        productos: null,\n        precioTotal: null,\n        direccionEnvio: null,\n        metodoDePago: null,\n        numSeguimiento: null,\n        observaciones: null\n      };\n    },\n\n    remove() {\n      try {\n        this.service.remove(this.localEditedRow.id, this.axiosConfig).then(() => {\n          this.$toast.add({\n            severity: 'success',\n            summary: 'Eliminando',\n            detail: 'REGISTRO ELIMINADO CORRECTAMENTE. BORRADO EN BASE DE DATOS',\n            life: 3000\n          });\n          this.getAll();\n          this.isDisabled = true;\n        });\n      } catch (error) {\n        this.$toast.add({\n          severity: 'error',\n          summary: 'Error',\n          detail: 'No se pudo eliminar el registro. Por favor, inténtalo de nuevo más tarde.',\n          life: 3000\n        });\n      }\n    },\n\n    getAll() {\n      this.service.getAll(this.axiosConfig).then(response => {\n        this.localList = response.data;\n      });\n    }\n\n  }\n};","map":{"version":3,"mappings":"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","names":["FilterMatchMode","mapGetters","axios","ZDialog","PedidoService","props","columns","type","Array","required","list","header","String","default","editedRow","Object","crudInputs","crudButtons","beforeInsert","Function","service","components","emits","data","filters","selectedRow","localEditedRow","assign","optionsData","customValueInput","localLabelDialogButton","isDisabled","localList","beforeCreate","pedidoService","watch","handler","newVal","deep","computed","globalFilterFields","map","column","field","currentPageReportTemplate","length","currentSelection","username","keycloakToken","keycloakTokenParsed","axiosConfig","roles","getValue","value","created","console","log","initFilters","getAll","mounted","forEach","input","component","includes","pathList","response","get","parsedData","options","item","label","nombre","zDialogData","methods","onRowSelect","event","matchMode","CONTAINS","updateLocalEditedRow","key","$set","loadLazyData","loading","setTimeout","customerService","getCustomers","lazyEvent","JSON","stringify","lazyParams","then","customers","totalRecords","Math","random","onElementosSeleccionados","elementosSeleccionados","idDialog","$emit","onClick","action","callback","save","remove","create","fechaCreacion","$toast","add","severity","summary","detail","life","catch","error","status","errorMessage","id","estado","productos","precioTotal","direccionEnvio","metodoDePago","numSeguimiento","observaciones"],"sourceRoot":"","sources":["C:\\Users\\emalc\\OneDrive\\Escritorio\\CRUD_keycloak_primeVue\\keycloak-workshop\\frontend-vuejs\\src\\componentes\\GenericCRUD.vue"],"sourcesContent":["<template>\r\n    <div style=\"margin: 0 auto; width: 80%\">\r\n        <p_panel :header=\"header\">\r\n            <p:dataTable :value=\"localList\" :paginator=\"true\" :rows=\"10\" v-model:selection=\"selectedRow\"\r\n                class=\"p-datatable-pedidos\" @row-click=\"onRowSelect\" selectionMode=\"single\" dataKey=\"id\"\r\n                paginatorTemplate=\"CurrentPageReport FirstPageLink PrevPageLink PageLinks NextPageLink LastPageLink RowsPerPageDropdown\"\r\n                :rowsPerPageOptions=\"[10, 20, 50]\" responsiveLayout=\"scroll\" filterDisplay=\"row\"\r\n                :globalFilterFields=\"globalFilterFields\" v-model:filters=\"filters\"\r\n                currentPageReportTemplate=\"Mostrando {first} a {last} de {totalRecords}\">\r\n                <template #header>\r\n                    <div class=\"flex justify-content-end\">\r\n                        <span class=\"p-input-icon-left \">\r\n                            <i class=\"pi pi-search\" />\r\n                            <p:inputText v-model=\"filters['global'].value\" placeholder=\"Buscar...\" />\r\n                        </span>\r\n                    </div>\r\n                </template>\r\n                <template #empty>\r\n                    No hay elementos disponibles.\r\n                </template>\r\n                <template #loading>\r\n                    Cargando elementos. Por favor, espera.\r\n                </template>\r\n                <p_column v-for=\"column in columns\" :field=\"column.field\" :header=\"column.title\" :key=\"column.field\"\r\n                    :ref=\"column.field\" :sortable=\"true\">\r\n                    <template #filter=\"{ filterModel, filterCallback }\">\r\n                        <p:inputText type=\"text\" v-model=\"filterModel.value\" @keyup=\"filterCallback()\"\r\n                            class=\"p-column-filter\" :placeholder=\"'Buscar por ' + column.title\" />\r\n                    </template>\r\n                </p_column>\r\n\r\n            </p:dataTable>\r\n        </p_panel>\r\n    </div>\r\n    <p_panel style=\"margin-bottom: 20px;margin: 0 auto; width: 80%\">\r\n        <div class=\"panel-flex\" style=\"margin-bottom: 20px;margin: 0 auto; width: 80%\">\r\n            <div v-for=\"(input, index) in crudInputs\" :key=\"index\"\r\n                style=\"display: inline-block; margin-right: 10px; vertical-align: middle;\">\r\n                <label :for=\"input.value\" style=\"display: block;\">{{ input.label }}</label>\r\n                <component v-if=\"input.component !== 'ZDialog'\" :is=\"input.component\" :options=\"input.options\"\r\n                    :option-label=\"(option) => option.label\" :option-value=\"(option) => option.value\"\r\n                    v-model=\"localEditedRow[input.value]\" style=\"width: 200px;\" :disabled=\"isDisabled\">\r\n                </component>\r\n                <ZDialog v-else :data=\"input.zDialogData\" :columns=\"input.zDialogColumns\"\r\n                    :labelDialogButton=\"input.localLabelDialogButton\" :header=\"input.header\"\r\n                    @elementosSeleccionados=\"onElementosSeleccionados\" :idDialog=\"input.id\">\r\n                </ZDialog>\r\n\r\n\r\n\r\n            </div>\r\n\r\n        </div>\r\n    </p_panel>\r\n    <p_panel style=\"margin-bottom: 20px;margin: 0 auto; width: 80%\">\r\n        <div class=\"center-buttons\" style=\"margin: 0 auto; width: 80%; text-align: center;\">\r\n            <div v-for=\"(input, index) in crudButtons\" :key=\"index\"\r\n                style=\"display: inline-block; margin-right: 10px; vertical-align: middle;\">\r\n                <p:commandButton :is=\"input.component\" :label=\"input.label\"\r\n                    @click=\"onClick(input.onClick, () => $emit(input.onClick))\" :class=\"input.className\" :icon=\"input.icon\">\r\n                </p:commandButton>\r\n            </div>\r\n\r\n        </div>\r\n    </p_panel>\r\n\r\n\r\n    <h2>\r\n        <p>El valor del estado seleccionado es: {{ localEditedRow[\"estadoUno\"] }}</p>\r\n        <p>El valor del producto seleccionado es: {{ localEditedRow[\"producto\"] }}</p>\r\n        <p>El valor de los productos seleccionados es: {{ localEditedRow[\"productos\"] }}</p>\r\n        <p>El valor del nombre es: {{ localEditedRow[\"name\"] }}</p>\r\n\r\n        <p>El valor del método de pago es: {{ localEditedRow[\"metodoDePago\"] }}</p>\r\n\r\n        <p>El valor de la fecha de creación es: {{ localEditedRow[\"fechaCreacion\"] }}</p>\r\n\r\n\r\n    </h2>\r\n</template>\r\n  \r\n<script>\r\nimport { FilterMatchMode } from 'primevue/api';\r\nimport { mapGetters } from 'vuex';\r\nimport axios from \"axios\";\r\nimport ZDialog from './ZDialog.vue';\r\nimport PedidoService from '@/service/PedidoService';\r\nexport default {\r\n\r\n    props: {\r\n        columns: {\r\n            type: Array,\r\n            required: true\r\n        },\r\n        list: {\r\n            type: Array,\r\n            required: true\r\n        },\r\n\r\n        header: {\r\n            type: String,\r\n            default: \"Lista de elementos\"\r\n        },\r\n        editedRow: {\r\n            type: Object,\r\n            default: null\r\n        },\r\n        crudInputs: {\r\n            type: Object,\r\n            default: function () {\r\n                return {}\r\n            }\r\n        },\r\n        crudButtons: {\r\n            type: Array,\r\n            required: true\r\n        },\r\n\r\n        beforeInsert: {\r\n            type: Function,\r\n            required: true,\r\n        },\r\n        service: {\r\n            type: Object,\r\n            required: true\r\n        }\r\n\r\n\r\n\r\n\r\n    },\r\n    components: {\r\n        ZDialog,\r\n\r\n    },\r\n    emits: ['elementosSeleccionados', 'save'],\r\n    data() {\r\n\r\n        return {\r\n            filters: {},\r\n            selectedRow: null,\r\n            localEditedRow: Object.assign({}, this.editedRow),\r\n            optionsData: [],\r\n            customValueInput: null,\r\n            localLabelDialogButton: null,\r\n            isDisabled: true,\r\n            localList: this.list,\r\n\r\n\r\n\r\n        }\r\n\r\n    },\r\n    beforeCreate() {\r\n        this.pedidoService = new PedidoService();\r\n    },\r\n    watch: {\r\n        editedRow: {\r\n            handler: function (newVal) {\r\n                this.localEditedRow = Object.assign({}, newVal);\r\n            },\r\n            deep: true\r\n        },\r\n    }\r\n    ,\r\n    computed: {\r\n        globalFilterFields() {\r\n            return [\r\n                'global',\r\n                ...this.columns.map((column) => column.field)\r\n            ];\r\n        },\r\n        currentPageReportTemplate() {\r\n            return `Mostrando {first} a {last} de ${this.data.length} pedidos`;\r\n        },\r\n        currentSelection() {\r\n            return this.selectedRow[0] || {};\r\n        },\r\n        ...mapGetters({\r\n            username: 'username',\r\n            keycloakToken: 'keycloakToken',\r\n            keycloakTokenParsed: 'keycloakTokenParsed',\r\n            axiosConfig: 'axiosConfig',\r\n            roles: 'roles',\r\n        }),\r\n        getValue() {\r\n            return (value) => this.localEditedRow[value];\r\n        }\r\n\r\n    },\r\n    async created() {\r\n        console.log(\"created\");\r\n        this.initFilters();\r\n        this.getAll();\r\n    },\r\n    mounted() {\r\n        // Recorre los inputs y si existe pathList, realiza una solicitud GET para obtener las opciones del selectOneMenu\r\n        this.crudInputs.forEach(async (input) => {\r\n            if (input.component.includes('select') && input.pathList) {\r\n                const response = await axios.get(input.pathList, this.axiosConfig);\r\n                const parsedData = response.data;\r\n                input.options = parsedData.map((item) => ({\r\n                    label: item.nombre,\r\n                    value: item,\r\n                }));\r\n            } else if (input.component.includes('ZDialog') && input.pathList) {\r\n                const response = await axios.get(input.pathList, this.axiosConfig);\r\n                input.zDialogData = response.data;\r\n                console.log(input.zDialogData);\r\n            }\r\n        });\r\n    },\r\n    methods: {\r\n        onRowSelect(event) {\r\n            this.localEditedRow = Object.assign({}, event.data);\r\n            this.isDisabled = false;\r\n        },\r\n        initFilters() {\r\n            const filters = {\r\n                'global': { value: null, matchMode: FilterMatchMode.CONTAINS }\r\n            };\r\n            this.columns.forEach((column) => {\r\n                filters[column.field] = {\r\n                    value: null,\r\n                    matchMode: FilterMatchMode.CONTAINS\r\n                };\r\n            });\r\n            this.filters = filters;\r\n        },\r\n        updateLocalEditedRow(value, key) {\r\n            this.$set(this.localEditedRow, key, value);\r\n        },\r\n        loadLazyData() {\r\n            this.loading = true;\r\n\r\n            setTimeout(() => {\r\n                this.customerService.getCustomers(\r\n                    { lazyEvent: JSON.stringify(this.lazyParams) })\r\n                    .then(data => {\r\n                        this.customers = data.customers;\r\n                        this.totalRecords = data.totalRecords;\r\n                        this.loading = false;\r\n                    }\r\n                    );\r\n            }, Math.random() * 1000 + 250);\r\n        },\r\n        onElementosSeleccionados(elementosSeleccionados, idDialog) {\r\n\r\n            this.$emit('elementosSeleccionados', elementosSeleccionados, idDialog, this.localEditedRow);\r\n\r\n        },\r\n        onClick(action, callback) {\r\n            if (action === 'save') {\r\n                console.log('onClick del hijo antes de llamar al beforesave del padre');\r\n                this.beforeInsert(() => {\r\n                    console.log('beforeInsert callback del hijo');\r\n                    callback();\r\n                });\r\n                this.save();\r\n            } else if (action === 'remove') {\r\n                this.remove();\r\n            } else if (action === 'create') {\r\n                this.create();\r\n            }\r\n        },\r\n        save() {\r\n           \r\n            console.log(this.localEditedRow);\r\n\r\n            try {\r\n             this.localEditedRow.fechaCreacion = \"2023-03-01T00:00:00.000Z\";\r\n                this.service.save(this.localEditedRow, this.axiosConfig).then(() => {\r\n                    this.$toast.add({\r\n                        severity: 'success',\r\n                        summary: 'Guardando',\r\n                        detail: 'REGISTRO CREADO CORRECTAMENTE. GUARDADO EN BASE DE DATOS',\r\n                        life: 3000\r\n                    });\r\n                    this.getAll();\r\n                    this.isDisabled = true;\r\n                }).catch((error) => {\r\n                    console.log('primer catch');\r\n                    console.log(error);\r\n                    if (error.response.status === 400) {\r\n                        const errorMessage = error.response.data;\r\n                        this.$toast.add({\r\n                            severity: 'error',\r\n                            summary: 'Error',\r\n                            detail: errorMessage,\r\n                            life: 3000\r\n                        });\r\n                    }\r\n                });\r\n            } catch (error) {\r\n                console.log('segundo catch');\r\n                console.log(error);\r\n                this.$toast.add({\r\n                    severity: 'error',\r\n                    summary: 'Error',\r\n                    detail: 'No se pudo guardar el registro. Por favor, inténtalo de nuevo más tarde.',\r\n                    life: 3000\r\n                });\r\n            }\r\n        },\r\n        create() {\r\n            this.isDisabled = false;\r\n            console.log('Hola create')\r\n            this.localEditedRow = {\r\n                id: null,\r\n                estado: null,\r\n                productos: null,\r\n                precioTotal: null,\r\n                direccionEnvio: null,\r\n                metodoDePago: null,\r\n                numSeguimiento: null,\r\n                observaciones: null,\r\n            };\r\n\r\n        },\r\n        remove() {\r\n            try {\r\n                this.service.remove(this.localEditedRow.id, this.axiosConfig).then(() => {\r\n                    this.$toast.add({ severity: 'success', summary: 'Eliminando', detail: 'REGISTRO ELIMINADO CORRECTAMENTE. BORRADO EN BASE DE DATOS', life: 3000 })\r\n                    this.getAll();\r\n                    this.isDisabled = true;\r\n                });\r\n            } catch (error) {\r\n                this.$toast.add({ severity: 'error', summary: 'Error', detail: 'No se pudo eliminar el registro. Por favor, inténtalo de nuevo más tarde.', life: 3000 });\r\n            }\r\n        },\r\n        getAll() {\r\n            this.service.getAll(this.axiosConfig).then(response => {\r\n                this.localList = response.data;\r\n            });\r\n\r\n        },\r\n\r\n\r\n    }\r\n}\r\n</script>\r\n  \r\n\r\n<style lang=\"scss\" scoped>\r\n::v-deep(.p-datatable.p-datatable-pedidos) {\r\n    .p-datatable-header {\r\n        padding: 1rem;\r\n        text-align: left;\r\n        font-size: 1.5rem;\r\n    }\r\n\r\n    .p-paginator {\r\n        padding: 1rem;\r\n    }\r\n\r\n    .p-datatable-thead>tr>th {\r\n        text-align: left;\r\n    }\r\n\r\n    .p-datatable-tbody>tr>td {\r\n        cursor: auto;\r\n    }\r\n\r\n    .p-dropdown-label:not(.p-placeholder) {\r\n        text-transform: uppercase;\r\n    }\r\n}\r\n\r\n.panel-flex {\r\n    display: flex;\r\n    flex-wrap: wrap;\r\n    justify-content: flex-start;\r\n    align-items: flex-start;\r\n}\r\n\r\n.panel-flex>div {\r\n    flex-basis: calc(25% - 10px);\r\n    margin-right: 10px;\r\n    margin-bottom: 20px;\r\n}\r\n</style>"]},"metadata":{},"sourceType":"module"}