{"ast":null,"code":"import { mapGetters } from 'vuex';\nimport ProductoService from '@/service/ProductoService';\nimport { ref } from 'vue';\nimport { useToast } from \"primevue/usetoast\";\nconst text = ref();\nconst toast = useToast();\n\nconst save = () => {\n  this.productoService.save(this.editedRow, this.axiosConfig).then(() => {\n    this.toast.add({\n      severity: \"success\",\n      summary: \"Éxito\",\n      detail: \"Producto guardado correctamente\",\n      life: 3000\n    });\n    this.editedRow = {\n      id: null,\n      nombre: null,\n      descripcion: null,\n      precio: null\n    };\n    this.productoService.getAll(this.axiosConfig);\n  });\n};\n\nconst remove = () => {\n  toast.add({\n    severity: 'success',\n    summary: 'Eliminando',\n    detail: 'REGISTRO ELIMINADO CORRECTAMENTE. BORRADO EN BASE DE DATOS',\n    life: 3000\n  });\n};\n\nexport default {\n  name: 'CrudApp',\n\n  data() {\n    return {\n      productos: [],\n      editedRow: {\n        id: null,\n        nombre: null,\n        descripcion: null,\n        precio: null\n      }\n    };\n  },\n\n  productoService: null,\n\n  created() {\n    this.productoService = new ProductoService();\n  },\n\n  computed: { ...mapGetters({\n      username: 'username',\n      keycloakToken: 'keycloakToken',\n      keycloakTokenParsed: 'keycloakTokenParsed',\n      axiosConfig: 'axiosConfig'\n    })\n  },\n  watch: {\n    keycloakToken: function (val) {\n      if (val) {\n        this.productoService.getAll(this.axiosConfig).then(response => {\n          this.productos = response.data;\n        });\n      }\n    }\n  },\n  methods: {\n    save() {},\n\n    create() {},\n\n    remove() {\n      this.productoService.remove(this.editedRow.id, this.axiosConfig).then(() => {\n        this.toast.show({\n          severity: \"success\",\n          summary: \"Éxito\",\n          detail: \"Producto eliminado correctamente\",\n          life: 3000\n        });\n        this.editedRow = {\n          id: null,\n          nombre: null,\n          descripcion: null,\n          precio: null\n        };\n      });\n    }\n\n  }\n};","map":{"version":3,"mappings":"AA6CA,SAASA,UAAT,QAA2B,MAA3B;AACA,OAAOC,eAAP,MAA4B,2BAA5B;AACA,SAASC,GAAT,QAAoB,KAApB;AACA,SAASC,QAAT,QAAyB,mBAAzB;AACA,MAAMC,IAAG,GAAIF,GAAG,EAAhB;AACA,MAAMG,KAAI,GAAIF,QAAQ,EAAtB;;AACA,MAAMG,IAAG,GAAI,MAAM;AACjB,OAAKC,eAAL,CAAqBD,IAArB,CAA0B,KAAKE,SAA/B,EAA0C,KAAKC,WAA/C,EAA4DC,IAA5D,CAAiE,MAAM;AACjE,SAAKL,KAAL,CAAWM,GAAX,CAAe;AAAEC,cAAQ,EAAE,SAAZ;AAAuBC,aAAO,EAAE,OAAhC;AAAyCC,YAAM,EAAE,iCAAjD;AAAoFC,UAAI,EAAE;AAA1F,KAAf;AACA,SAAKP,SAAL,GAAiB;AACfQ,QAAE,EAAE,IADW;AAEfC,YAAM,EAAE,IAFO;AAGfC,iBAAW,EAAE,IAHE;AAIfC,YAAM,EAAE;AAJO,KAAjB;AAMA,SAAKZ,eAAL,CAAqBa,MAArB,CAA4B,KAAKX,WAAjC;AACD,GATL;AAaF,CAdA;;AAeA,MAAMY,MAAK,GAAI,MAAM;AAGrBhB,OAAK,CAACM,GAAN,CAAU;AAAEC,YAAQ,EAAE,SAAZ;AAAuBC,WAAO,EAAE,YAAhC;AAA8CC,UAAM,EAAE,4DAAtD;AAAoHC,QAAI,EAAE;AAA1H,GAAV;AAEA,CALA;;AAQA,eAAe;AACbO,MAAI,EAAE,SADO;;AAEbC,MAAI,GAAG;AACL,WAAO;AACLC,eAAS,EAAE,EADN;AAELhB,eAAS,EAAE;AACTQ,UAAE,EAAE,IADK;AAETC,cAAM,EAAE,IAFC;AAGTC,mBAAW,EAAE,IAHJ;AAITC,cAAM,EAAE;AAJC;AAFN,KAAP;AAUD,GAbY;;AAcbZ,iBAAe,EAAE,IAdJ;;AAebkB,SAAO,GAAG;AACR,SAAKlB,eAAL,GAAuB,IAAIN,eAAJ,EAAvB;AACD,GAjBY;;AAkBbyB,UAAQ,EAAE,EACR,GAAG1B,UAAU,CAAC;AACZ2B,cAAQ,EAAE,UADE;AAEZC,mBAAa,EAAE,eAFH;AAGZC,yBAAmB,EAAE,qBAHT;AAIZpB,iBAAW,EAAE;AAJD,KAAD;AADL,GAlBG;AA0BbqB,OAAK,EAAE;AACLF,iBAAa,EAAE,UAAUG,GAAV,EAAe;AAC5B,UAAIA,GAAJ,EAAS;AAEP,aAAKxB,eAAL,CAAqBa,MAArB,CAA4B,KAAKX,WAAjC,EAA8CC,IAA9C,CAAmDsB,QAAO,IAAK;AAC7D,eAAKR,SAAL,GAAiBQ,QAAQ,CAACT,IAA1B;AACD,SAFD;AAGF;AACF;AARK,GA1BM;AAoCbU,SAAO,EAAE;AACP3B,QAAI,GAAG,CAEN,CAHM;;AAIP4B,UAAM,GAAG,CAER,CANM;;AAOPb,UAAM,GAAE;AACN,WAAKd,eAAL,CAAqBc,MAArB,CAA4B,KAAKb,SAAL,CAAeQ,EAA3C,EAA+C,KAAKP,WAApD,EAAiEC,IAAjE,CAAsE,MAAM;AAC1E,aAAKL,KAAL,CAAW8B,IAAX,CAAgB;AAAEvB,kBAAQ,EAAE,SAAZ;AAAuBC,iBAAO,EAAE,OAAhC;AAAyCC,gBAAM,EAAE,kCAAjD;AAAqFC,cAAI,EAAE;AAA3F,SAAhB;AACA,aAAKP,SAAL,GAAiB;AACfQ,YAAE,EAAE,IADW;AAEfC,gBAAM,EAAE,IAFO;AAGfC,qBAAW,EAAE,IAHE;AAIfC,gBAAM,EAAE;AAJO,SAAjB;AAMD,OARD;AASF;;AAjBO;AApCI,CAAf","names":["mapGetters","ProductoService","ref","useToast","text","toast","save","productoService","editedRow","axiosConfig","then","add","severity","summary","detail","life","id","nombre","descripcion","precio","getAll","remove","name","data","productos","created","computed","username","keycloakToken","keycloakTokenParsed","watch","val","response","methods","create","show"],"sourceRoot":"","sources":["C:\\Users\\emalc\\OneDrive\\Escritorio\\CRUD_keycloak_primeVue\\keycloak-workshop\\frontend-vuejs\\src\\componentes\\ProductoDatatable.vue"],"sourcesContent":["<template>\r\n  <div style=\"margin: 0 auto; width: 80%\">\r\n\r\n    <p_panel header=\"Lista de Personas\">\r\n      <p:dataTable :value=\"productos\" :paginator=\"true\" :rows=\"10\"\r\n        paginatorTemplate=\"CurrentPageReport FirstPageLink PrevPageLink PageLinks NextPageLink LastPageLink RowsPerPageDropdown\"\r\n        :rowsPerPageOptions=\"[10, 20, 50]\" responsiveLayout=\"scroll\"\r\n        currentPageReportTemplate=\"Mostrando {first} a {last} de {totalRecords}\">\r\n        <p_column field=\"nombre\" header=\"Nombre\"></p_column>\r\n        <p_column field=\"descripcion\" header=\"Descripción\"></p_column>\r\n        <p_column field=\"precio\" header=\"precio\"></p_column>\r\n        <template #paginatorstart>\r\n          <p:commandButton type=\"button\" icon=\"pi pi-refresh\" class=\"p-button-text\" />\r\n        </template>\r\n        <template #paginatorend>\r\n          <p:commandButton type=\"button\" icon=\"pi pi-cloud\" class=\"p-button-text\" />\r\n        </template>\r\n      </p:dataTable>\r\n    </p_panel>\r\n  </div>\r\n\r\n  <p_toast></p_toast>\r\n  <p_panel style=\"margin-bottom: 20px;margin: 0 auto; width: 80%\">\r\n    <span class=\"p-float-label\">\r\n      <p:inputText id=\"username\" type=\"text\" v-model=\"this.editedRow.nombre\" />\r\n      <label for=\"nombre\">Nombre</label>\r\n    </span>\r\n\r\n  </p_panel>\r\n  <p_panel style=\"margin-bottom: 20px;margin: 0 auto; width: 80%\">\r\n    <div class=\"center-buttons\" style=\"margin: 0 auto; width: 80%\">\r\n      <p:commandButton label=\"Nuevo\" @click=\"create\" class=\"p-button-success mr-2\" icon=\"pi pi-plus\"></p:commandButton>\r\n      <p:commandButton label=\"Guardar\" @click=\"save\" icon=\"pi pi-save\"></p:commandButton>\r\n      <p:commandButton label=\"Eliminar\" @click=\"remove\" class=\"p-button-danger\" icon=\"pi pi-trash\"></p:commandButton>\r\n    </div>\r\n  </p_panel>\r\n\r\n\r\n\r\n\r\n\r\n</template>\r\n\r\n<script>\r\n\r\nimport { mapGetters } from 'vuex';\r\nimport ProductoService from '@/service/ProductoService';\r\nimport { ref } from 'vue';\r\nimport { useToast } from \"primevue/usetoast\";\r\nconst text = ref();\r\nconst toast = useToast();\r\nconst save = () => {\r\n  this.productoService.save(this.editedRow, this.axiosConfig).then(() => {\r\n        this.toast.add({ severity: \"success\", summary: \"Éxito\", detail: \"Producto guardado correctamente\", life: 3000 });\r\n        this.editedRow = {\r\n          id: null,\r\n          nombre: null,\r\n          descripcion: null,\r\n          precio: null\r\n        };\r\n        this.productoService.getAll(this.axiosConfig);\r\n      });\r\n\r\n\t\r\n\r\n}\r\nconst remove = () => {\r\n\r\n\r\ntoast.add({ severity: 'success', summary: 'Eliminando', detail: 'REGISTRO ELIMINADO CORRECTAMENTE. BORRADO EN BASE DE DATOS', life: 3000 })\r\n\r\n}\r\n\r\n\r\nexport default {\r\n  name: 'CrudApp',\r\n  data() {\r\n    return {\r\n      productos: [],\r\n      editedRow: {\r\n        id: null,\r\n        nombre: null,\r\n        descripcion: null,\r\n        precio: null\r\n      }\r\n    }\r\n\r\n  },\r\n  productoService: null,\r\n  created() {\r\n    this.productoService = new ProductoService();\r\n  },\r\n  computed: {\r\n    ...mapGetters({\r\n      username: 'username',\r\n      keycloakToken: 'keycloakToken',\r\n      keycloakTokenParsed: 'keycloakTokenParsed',\r\n      axiosConfig: 'axiosConfig'\r\n    })\r\n  },\r\n  watch: {\r\n    keycloakToken: function (val) {\r\n      if (val) {\r\n\r\n        this.productoService.getAll(this.axiosConfig).then(response => {\r\n          this.productos = response.data;\r\n        });\r\n      }\r\n    }\r\n  },\r\n  methods: {\r\n    save() {\r\n      \r\n    },\r\n    create() {\r\n      \r\n    },\r\n    remove(){\r\n      this.productoService.remove(this.editedRow.id, this.axiosConfig).then(() => {\r\n        this.toast.show({ severity: \"success\", summary: \"Éxito\", detail: \"Producto eliminado correctamente\", life: 3000 });\r\n        this.editedRow = {\r\n          id: null,\r\n          nombre: null,\r\n          descripcion: null,\r\n          precio: null\r\n        }\r\n      });\r\n    }\r\n\r\n  }\r\n\r\n}\r\n\r\n</script>\r\n\r\n<style>\r\n\r\n</style>"]},"metadata":{},"sourceType":"module"}