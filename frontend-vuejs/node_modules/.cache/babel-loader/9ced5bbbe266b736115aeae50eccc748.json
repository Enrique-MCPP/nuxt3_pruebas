{"ast":null,"code":"import { createStore } from 'vuex';\nconst store = createStore({\n  state() {\n    return {\n      username: null,\n      keycloakToken: null,\n      keycloakTokenParsed: null,\n      axiosConfig: {\n        headers: {}\n      },\n      roles: []\n    };\n  },\n  mutations: {\n    setUserName(state, val) {\n      state.username = val;\n    },\n    setKeycloakToken(state, val) {\n      state.keycloakToken = val;\n      state.axiosConfig.headers.Authorization = `Bearer ${val}`;\n    },\n    setKeycloakTokenParsed(state, val) {\n      state.keycloakTokenParsed = val;\n    },\n    setRoles(state, val) {\n      state.roles = val;\n    }\n  },\n  getters: {\n    username(state) {\n      return state.username;\n    },\n    keycloakToken(state) {\n      return state.keycloakToken;\n    },\n    keycloakTokenParsed(state) {\n      return state.keycloakTokenParsed;\n    },\n    axiosConfig(state) {\n      return state.axiosConfig;\n    },\n    roles(state) {\n      return state.roles;\n    }\n  }\n});\nexport default store;","map":{"version":3,"names":["createStore","store","state","username","keycloakToken","keycloakTokenParsed","axiosConfig","headers","roles","mutations","setUserName","val","setKeycloakToken","Authorization","setKeycloakTokenParsed","setRoles","getters"],"sources":["C:/Users/emalc/OneDrive/Escritorio/CRUD_keycloak_primeVue/keycloak-workshop/frontend-vuejs/src/store/user.js"],"sourcesContent":["import { createStore } from 'vuex'\r\n\r\nconst store = createStore({\r\n    state() {\r\n        return {\r\n            username: null,\r\n            keycloakToken: null,\r\n            keycloakTokenParsed: null,\r\n            axiosConfig: {\r\n                headers: {}\r\n            },\r\n            roles: []\r\n        };\r\n    },\r\n    mutations: {\r\n        setUserName(state, val) {\r\n            state.username = val;\r\n        },\r\n        setKeycloakToken(state, val) {\r\n            state.keycloakToken = val;\r\n            state.axiosConfig.headers.Authorization = `Bearer ${val}`\r\n        },\r\n        setKeycloakTokenParsed(state, val) {\r\n            state.keycloakTokenParsed = val;\r\n        },\r\n        setRoles(state, val) {\r\n            state.roles = val;\r\n        }\r\n    },\r\n    getters: {\r\n        username(state) {\r\n            return state.username;\r\n        },\r\n        keycloakToken(state) {\r\n            return state.keycloakToken;\r\n        },\r\n        keycloakTokenParsed(state) {\r\n            return state.keycloakTokenParsed;\r\n        },\r\n        axiosConfig(state) {\r\n            return state.axiosConfig;\r\n        },\r\n        roles(state) {\r\n            return state.roles;\r\n        }\r\n    }\r\n});\r\n\r\nexport default store;"],"mappings":"AAAA,SAASA,WAAW,QAAQ,MAAM;AAElC,MAAMC,KAAK,GAAGD,WAAW,CAAC;EACtBE,KAAKA,CAAA,EAAG;IACJ,OAAO;MACHC,QAAQ,EAAE,IAAI;MACdC,aAAa,EAAE,IAAI;MACnBC,mBAAmB,EAAE,IAAI;MACzBC,WAAW,EAAE;QACTC,OAAO,EAAE,CAAC;MACd,CAAC;MACDC,KAAK,EAAE;IACX,CAAC;EACL,CAAC;EACDC,SAAS,EAAE;IACPC,WAAWA,CAACR,KAAK,EAAES,GAAG,EAAE;MACpBT,KAAK,CAACC,QAAQ,GAAGQ,GAAG;IACxB,CAAC;IACDC,gBAAgBA,CAACV,KAAK,EAAES,GAAG,EAAE;MACzBT,KAAK,CAACE,aAAa,GAAGO,GAAG;MACzBT,KAAK,CAACI,WAAW,CAACC,OAAO,CAACM,aAAa,GAAI,UAASF,GAAI,EAAC;IAC7D,CAAC;IACDG,sBAAsBA,CAACZ,KAAK,EAAES,GAAG,EAAE;MAC/BT,KAAK,CAACG,mBAAmB,GAAGM,GAAG;IACnC,CAAC;IACDI,QAAQA,CAACb,KAAK,EAAES,GAAG,EAAE;MACjBT,KAAK,CAACM,KAAK,GAAGG,GAAG;IACrB;EACJ,CAAC;EACDK,OAAO,EAAE;IACLb,QAAQA,CAACD,KAAK,EAAE;MACZ,OAAOA,KAAK,CAACC,QAAQ;IACzB,CAAC;IACDC,aAAaA,CAACF,KAAK,EAAE;MACjB,OAAOA,KAAK,CAACE,aAAa;IAC9B,CAAC;IACDC,mBAAmBA,CAACH,KAAK,EAAE;MACvB,OAAOA,KAAK,CAACG,mBAAmB;IACpC,CAAC;IACDC,WAAWA,CAACJ,KAAK,EAAE;MACf,OAAOA,KAAK,CAACI,WAAW;IAC5B,CAAC;IACDE,KAAKA,CAACN,KAAK,EAAE;MACT,OAAOA,KAAK,CAACM,KAAK;IACtB;EACJ;AACJ,CAAC,CAAC;AAEF,eAAeP,KAAK"},"metadata":{},"sourceType":"module"}