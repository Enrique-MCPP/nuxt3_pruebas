{"ast":null,"code":"import { resolveComponent as _resolveComponent, createVNode as _createVNode, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nexport function render(_ctx, _cache) {\n  const _component_GenericDatatable = _resolveComponent(\"GenericDatatable\");\n  const _component_panelInputsPedidosCRUD = _resolveComponent(\"panelInputsPedidosCRUD\");\n  const _component_p_toast = _resolveComponent(\"p_toast\");\n  return _openBlock(), _createElementBlock(_Fragment, null, [_createVNode(_component_GenericDatatable, {\n    columns: _ctx.crudColumns,\n    selectedRow: _ctx.state.selectedRow,\n    header: _ctx.header,\n    list: _ctx.state.list,\n    rowSelectListener: _ctx.rowSelectListenerPedidos\n  }, null, 8 /* PROPS */, [\"columns\", \"selectedRow\", \"header\", \"list\", \"rowSelectListener\"]), _createVNode(_component_panelInputsPedidosCRUD, {\n    state: _ctx.state,\n    create: _ctx.beforeCreate,\n    delete: _ctx.beforeDelete,\n    save: _ctx.beforeSave,\n    estados: _ctx.estados\n  }, null, 8 /* PROPS */, [\"state\", \"create\", \"delete\", \"save\", \"estados\"]), _createVNode(_component_p_toast)], 64 /* STABLE_FRAGMENT */);\n}","map":{"version":3,"names":["_createVNode","_component_GenericDatatable","columns","_ctx","crudColumns","selectedRow","state","header","list","rowSelectListener","rowSelectListenerPedidos","_component_panelInputsPedidosCRUD","create","beforeCreate","delete","beforeDelete","save","beforeSave","estados","_component_p_toast"],"sources":["C:\\Users\\emalc\\OneDrive\\Escritorio\\CRUD_keycloak_primeVue\\keycloak-workshop\\frontend-vuejs\\src\\componentes\\PedidosCRUD.vue"],"sourcesContent":["<template>\r\n  <GenericDatatable :columns=\"crudColumns\" :selectedRow=\"state.selectedRow\" :header=\"header\" :list=\"state.list\"\r\n    :rowSelectListener=\"rowSelectListenerPedidos\">\r\n  </GenericDatatable>\r\n  <panelInputsPedidosCRUD :state=\"state\" :create=\"beforeCreate\" :delete=\"beforeDelete\" :save=\"beforeSave\"\r\n    :estados=\"estados\">\r\n  </panelInputsPedidosCRUD>\r\n  <p_toast></p_toast>\r\n</template>\r\n\r\n<script>\r\nimport { useStore } from 'vuex';\r\nimport { tableBean } from '@/composables/tableBean';\r\nimport PedidoService from '@/service/PedidoService';\r\nimport EstadoService from '@/service/EstadoService';\r\nimport { computed, ref } from 'vue';\r\nimport GenericDatatable from './GenericDatatable.vue';\r\nimport panelInputsPedidosCRUD from './panelInputsPedidosCRUD.vue';\r\n\r\nexport default {\r\n  components: {\r\n    GenericDatatable,\r\n    panelInputsPedidosCRUD\r\n  },\r\n  setup() {\r\n    const axiosConfig = computed(() => store.getters.axiosConfig);\r\n    const store = useStore();\r\n    const pedidoService = new PedidoService();\r\n    const estadoService = new EstadoService();\r\n\r\n    const { state, list, save, rowSelectListener } = tableBean(pedidoService, axiosConfig.value);\r\n    const header = \"Lista de Pedidos\";\r\n    const crudColumns = [\r\n      { title: 'ID', field: 'id' },\r\n      { title: 'Nº de seguimiento', field: 'numSeguimiento' },\r\n      { title: 'Método de pago', field: 'metodoDePago' },\r\n      { title: 'Estado', field: 'estado.nombre' },\r\n      { title: 'Precio total', field: 'precioTotal' },\r\n      { title: 'Dirección de envío', field: 'direccionEnvio' },\r\n      { title: 'Observaciones', field: 'observaciones' },\r\n      { title: 'Fecha del pedido', field: 'fechaPedido' },\r\n    ];\r\n    /**Obtener los estados para el selectOnemenu de estados */\r\n    const estados = ref([]);\r\n    const getEstados = async () => {\r\n      const response = await estadoService.getAll(axiosConfig.value);\r\n      estados.value = response.data;\r\n    }\r\n    if (estados.value.length === 0) {\r\n      getEstados();\r\n    }\r\n    const rowSelectListenerPedidos = async (selectedRow) => {\r\n      console.log('rowselect del padre', selectedRow);\r\n      await rowSelectListener(selectedRow);\r\n      console.log('ha vuelto al rowselect del padre');\r\n    };\r\n\r\n    const beforeSave = async (editedRow) => {\r\n      console.log('beforeSave del padre', editedRow);\r\n      await save(editedRow);\r\n      console.log('ha vuelto al beforeSave del padre');\r\n    };\r\n\r\n    const beforeCreate = async () => {\r\n      console.log('beforeCreate del padre');\r\n      await create();\r\n      console.log('ha vuelto al beforeCreate del padre');\r\n    };\r\n\r\n    const beforeDelete = async (editedRow) => {\r\n      console.log('beforeDelete del padre', editedRow);\r\n      await delete(editedRow);\r\n      console.log('ha vuelto al beforeDelete del padre');\r\n    };\r\n\r\n    provide('rowSelectListenerPedidos', rowSelectListenerPedidos);\r\n    provide('beforeSave', beforeSave);\r\n    provide('beforeCreate', beforeCreate);\r\n    provide('beforeDelete', beforeDelete);\r\n\r\n    return {\r\n      state,\r\n      list,\r\n      crudColumns,\r\n      rowSelectListener,\r\n      header,\r\n      save,\r\n      estados\r\n    };\r\n  }\r\n\r\n\r\n};\r\n</script>\r\n"],"mappings":";;;;;6DACEA,YAAA,CAEmBC,2BAAA;IAFAC,OAAO,EAAEC,IAAA,CAAAC,WAAW;IAAGC,WAAW,EAAEF,IAAA,CAAAG,KAAK,CAACD,WAAW;IAAGE,MAAM,EAAEJ,IAAA,CAAAI,MAAM;IAAGC,IAAI,EAAEL,IAAA,CAAAG,KAAK,CAACE,IAAI;IACzGC,iBAAiB,EAAEN,IAAA,CAAAO;8FAEtBV,YAAA,CAEyBW,iCAAA;IAFAL,KAAK,EAAEH,IAAA,CAAAG,KAAK;IAAGM,MAAM,EAAET,IAAA,CAAAU,YAAY;IAAGC,MAAM,EAAEX,IAAA,CAAAY,YAAY;IAAGC,IAAI,EAAEb,IAAA,CAAAc,UAAU;IACnGC,OAAO,EAAEf,IAAA,CAAAe;6EAEZlB,YAAA,CAAmBmB,kBAAA,E"},"metadata":{},"sourceType":"module"}