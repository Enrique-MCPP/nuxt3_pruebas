{"ast":null,"code":"import { mapGetters } from 'vuex';\nimport PedidosCRUD from './componentes/PedidosCRUD.vue';\nexport default {\n  name: 'App',\n  components: {\n    PedidosCRUD\n  },\n  data() {\n    return {\n      backendToken: null\n    };\n  },\n  computed: {\n    ...mapGetters({\n      username: 'username',\n      keycloakToken: 'keycloakToken',\n      keycloakTokenParsed: 'keycloakTokenParsed',\n      roles: 'roles'\n    })\n  },\n  methods: {\n    logout() {\n      this.emitter.emit('keycloak-logout');\n    },\n    getBackendTokenInfo() {\n      const config = {\n        headers: {\n          Authorization: `Bearer ${this.keycloakToken}`\n        }\n      };\n      this.axios.get(\"api/product/\", config).then(response => {\n        this.backendToken = response.data;\n      });\n    },\n    filteredRoles() {\n      return this.roles.filter(role => !role.includes(\"offline_access\") && !role.includes(\"uma_authorization\") && !role.includes(\"default-roles-spring-boot-microservices-realm\"));\n    }\n  }\n};","map":{"version":3,"names":["mapGetters","PedidosCRUD","name","components","data","backendToken","computed","username","keycloakToken","keycloakTokenParsed","roles","methods","logout","emitter","emit","getBackendTokenInfo","config","headers","Authorization","axios","get","then","response","filteredRoles","filter","role","includes"],"sources":["C:\\Users\\emalc\\OneDrive\\Escritorio\\CRUD_keycloak_primeVue\\keycloak-workshop\\frontend-vuejs\\src\\App.vue"],"sourcesContent":["<template>\r\n  <!--\r\n  <img alt=\"Vue logo\" src=\"./assets/logo.png\">\r\n  <h3>{{ 'username:' + username }}</h3>\r\n  <h1>Keycloak Token</h1>\r\n  <json-viewer :value=\"keycloakTokenParsed\" copyable boxed sort />\r\n  <h1>Backend Token</h1>\r\n  <BuTTon @click=\"getBackendTokenInfo\"> Auth Token Info</BuTTon>\r\n  <json-viewer :value=\"backendToken\" copyable boxed sort /> -->\r\n  <h3>{{ 'Usuario: ' + username }}</h3>\r\n  <h3>{{ 'Roles: ' + filteredRoles().join(', ') }}</h3>\r\n\r\n  <p:commandButton @click=\"logout\"> Logout</p:commandButton>\r\n\r\n\r\n\r\n  <PedidosCRUD />\r\n \r\n</template>\r\n\r\n<script>\r\nimport { mapGetters } from 'vuex'\r\n\r\n\r\nimport PedidosCRUD from './componentes/PedidosCRUD.vue'\r\n\r\n\r\n\r\n\r\n\r\nexport default {\r\n  name: 'App',\r\n  components: {\r\n\r\n\r\n    PedidosCRUD,\r\n\r\n\r\n\r\n\r\n  },\r\n  data() {\r\n    return {\r\n      backendToken: null,\r\n    }\r\n  },\r\n  computed: {\r\n    ...mapGetters({\r\n      username: 'username',\r\n      keycloakToken: 'keycloakToken',\r\n      keycloakTokenParsed: 'keycloakTokenParsed',\r\n      roles: 'roles',\r\n    })\r\n  },\r\n  methods: {\r\n    logout() {\r\n      this.emitter.emit('keycloak-logout')\r\n    },\r\n    getBackendTokenInfo() {\r\n      const config = {\r\n        headers: {\r\n          Authorization: `Bearer ${this.keycloakToken}`\r\n        }\r\n      }\r\n      this.axios.get(\"api/product/\", config).then((response) => {\r\n        this.backendToken = response.data\r\n      })\r\n    },\r\n    filteredRoles() {\r\n      return this.roles.filter(role => !role.includes(\"offline_access\") && !role.includes(\"uma_authorization\") && !role.includes(\"default-roles-spring-boot-microservices-realm\"));\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style></style>"],"mappings":"AAqBA,SAASA,UAAS,QAAS,MAAK;AAGhC,OAAOC,WAAU,MAAO,+BAA8B;AAMtD,eAAe;EACbC,IAAI,EAAE,KAAK;EACXC,UAAU,EAAE;IAGVF;EAKF,CAAC;EACDG,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,YAAY,EAAE;IAChB;EACF,CAAC;EACDC,QAAQ,EAAE;IACR,GAAGN,UAAU,CAAC;MACZO,QAAQ,EAAE,UAAU;MACpBC,aAAa,EAAE,eAAe;MAC9BC,mBAAmB,EAAE,qBAAqB;MAC1CC,KAAK,EAAE;IACT,CAAC;EACH,CAAC;EACDC,OAAO,EAAE;IACPC,MAAMA,CAAA,EAAG;MACP,IAAI,CAACC,OAAO,CAACC,IAAI,CAAC,iBAAiB;IACrC,CAAC;IACDC,mBAAmBA,CAAA,EAAG;MACpB,MAAMC,MAAK,GAAI;QACbC,OAAO,EAAE;UACPC,aAAa,EAAG,UAAS,IAAI,CAACV,aAAc;QAC9C;MACF;MACA,IAAI,CAACW,KAAK,CAACC,GAAG,CAAC,cAAc,EAAEJ,MAAM,CAAC,CAACK,IAAI,CAAEC,QAAQ,IAAK;QACxD,IAAI,CAACjB,YAAW,GAAIiB,QAAQ,CAAClB,IAAG;MAClC,CAAC;IACH,CAAC;IACDmB,aAAaA,CAAA,EAAG;MACd,OAAO,IAAI,CAACb,KAAK,CAACc,MAAM,CAACC,IAAG,IAAK,CAACA,IAAI,CAACC,QAAQ,CAAC,gBAAgB,KAAK,CAACD,IAAI,CAACC,QAAQ,CAAC,mBAAmB,KAAK,CAACD,IAAI,CAACC,QAAQ,CAAC,+CAA+C,CAAC,CAAC;IAC9K;EACF;AACF"},"metadata":{},"sourceType":"module"}