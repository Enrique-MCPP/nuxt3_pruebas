{"ast":null,"code":"import { resolveComponent as _resolveComponent, createVNode as _createVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode } from \"vue\";\nconst _hoisted_1 = {\n  key: 0\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_p58selectOneMenu = _resolveComponent(\"p:selectOneMenu\");\n\n  return _openBlock(), _createElementBlock(\"div\", null, [$data.showOptionsData ? (_openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createVNode(_component_p58selectOneMenu, {\n    options: $data.optionsData,\n    optionLabel: \"label\",\n    optionValue: \"value\",\n    modelValue: $data.selectedOption,\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.selectedOption = $event)\n  }, null, 8\n  /* PROPS */\n  , [\"options\", \"modelValue\"])])) : _createCommentVNode(\"v-if\", true)]);\n}","map":{"version":3,"mappings":";;;;;;;uBACIA,oBAIM,KAJN,EAIM,IAJN,EAIM,CAHOC,uCAAXD,oBAEM,KAFN,EAEME,UAFN,EAEM,CADJC,aAA2GC,2BAA3G,EAA2G;AAAzFC,WAAO,EAAEJ,iBAAgF;AAAnEK,eAAW,EAAC,OAAuD;AAA/CC,eAAW,EAAC,OAAmC;gBAAlBN,oBAAkB;+DAAlBA,uBAAcO;AAAI,GAA3G;;AAAA,8BACI,CAFN,sCAGI,CAJN","names":["_createElementBlock","$data","_hoisted_1","_createVNode","_component_p58selectOneMenu","options","optionLabel","optionValue","$event"],"sourceRoot":"","sources":["C:\\Users\\emalc\\OneDrive\\Escritorio\\CRUD_keycloak_primeVue\\keycloak-workshop\\frontend-vuejs\\src\\componentes\\UseGenericCRUD.vue"],"sourcesContent":["<template>\r\n    <div>\r\n      <div v-if=\"showOptionsData\">\r\n        <p:selectOneMenu :options=\"optionsData\" optionLabel=\"label\" optionValue=\"value\" v-model=\"selectedOption\" />\r\n      </div>\r\n    </div>\r\n  </template>\r\n  \r\n  <script>\r\n  import { mapGetters } from 'vuex';\r\n  import axios from \"axios\";\r\n  \r\n  export default {\r\n    data() {\r\n      return {\r\n        path: \"/api/product/\",\r\n        optionsData: [],\r\n        selectedOption: null,\r\n        showOptionsData: false\r\n      }\r\n    },\r\n    computed: {\r\n      ...mapGetters({\r\n        username: 'username',\r\n        keycloakToken: 'keycloakToken',\r\n        keycloakTokenParsed: 'keycloakTokenParsed',\r\n        axiosConfig: 'axiosConfig',\r\n        roles: 'roles',\r\n      }),\r\n    },\r\n    methods: {\r\n      async getOptions() {\r\n        const response = await axios.get(this.path, this.axiosConfig);\r\n        const parsedData = response.data;\r\n        this.optionsData = parsedData.map((item) => ({\r\n          label: item.nombre,\r\n          value: item.id,\r\n        }));\r\n        console.log(this.optionsData);\r\n        this.showOptionsData = true;\r\n      }\r\n    },\r\n    async created() {\r\n      await this.getOptions();\r\n    }\r\n  }\r\n  </script>\r\n  "]},"metadata":{},"sourceType":"module"}