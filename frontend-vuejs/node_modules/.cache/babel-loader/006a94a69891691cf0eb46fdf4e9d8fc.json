{"ast":null,"code":"import { createElementVNode as _createElementVNode, resolveComponent as _resolveComponent, createVNode as _createVNode, createTextVNode as _createTextVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, withCtx as _withCtx, createBlock as _createBlock, toDisplayString as _toDisplayString, resolveDynamicComponent as _resolveDynamicComponent, createCommentVNode as _createCommentVNode, normalizeClass as _normalizeClass, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\n\nconst _withScopeId = n => (_pushScopeId(\"data-v-88b8f4f0\"), n = n(), _popScopeId(), n);\n\nconst _hoisted_1 = {\n  style: {\n    \"margin\": \"0 auto\",\n    \"width\": \"80%\"\n  }\n};\nconst _hoisted_2 = {\n  class: \"flex justify-content-end\"\n};\nconst _hoisted_3 = {\n  class: \"p-input-icon-left\"\n};\n\nconst _hoisted_4 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"i\", {\n  class: \"pi pi-search\"\n}, null, -1\n/* HOISTED */\n));\n\nconst _hoisted_5 = /*#__PURE__*/_createTextVNode(\" No hay elementos disponibles. \");\n\nconst _hoisted_6 = /*#__PURE__*/_createTextVNode(\" Cargando elementos. Por favor, espera. \");\n\nconst _hoisted_7 = {\n  class: \"panel-flex\",\n  style: {\n    \"margin-bottom\": \"20px\",\n    \"margin\": \"0 auto\",\n    \"width\": \"80%\"\n  }\n};\nconst _hoisted_8 = [\"for\"];\nconst _hoisted_9 = {\n  class: \"center-buttons\",\n  style: {\n    \"margin\": \"0 auto\",\n    \"width\": \"80%\",\n    \"text-align\": \"center\"\n  }\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_p58inputText = _resolveComponent(\"p:inputText\");\n\n  const _component_p_column = _resolveComponent(\"p_column\");\n\n  const _component_p58dataTable = _resolveComponent(\"p:dataTable\");\n\n  const _component_p_panel = _resolveComponent(\"p_panel\");\n\n  const _component_ZDialog = _resolveComponent(\"ZDialog\");\n\n  const _component_p58commandButton = _resolveComponent(\"p:commandButton\");\n\n  return _openBlock(), _createElementBlock(_Fragment, null, [_createElementVNode(\"div\", _hoisted_1, [_createVNode(_component_p_panel, {\n    header: $props.header\n  }, {\n    default: _withCtx(() => [_createVNode(_component_p58dataTable, {\n      value: _ctx.data,\n      paginator: true,\n      rows: 10,\n      selection: $data.selectedRow,\n      \"onUpdate:selection\": _cache[1] || (_cache[1] = $event => $data.selectedRow = $event),\n      class: \"p-datatable-pedidos\",\n      onRowClick: $options.onRowSelect,\n      selectionMode: \"single\",\n      dataKey: \"id\",\n      paginatorTemplate: \"CurrentPageReport FirstPageLink PrevPageLink PageLinks NextPageLink LastPageLink RowsPerPageDropdown\",\n      rowsPerPageOptions: [10, 20, 50],\n      responsiveLayout: \"scroll\",\n      filterDisplay: \"row\",\n      globalFilterFields: $options.globalFilterFields,\n      filters: $data.filters,\n      \"onUpdate:filters\": _cache[2] || (_cache[2] = $event => $data.filters = $event),\n      currentPageReportTemplate: \"Mostrando {first} a {last} de {totalRecords}\"\n    }, {\n      header: _withCtx(() => [_createElementVNode(\"div\", _hoisted_2, [_createElementVNode(\"span\", _hoisted_3, [_hoisted_4, _createVNode(_component_p58inputText, {\n        modelValue: $data.filters['global'].value,\n        \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.filters['global'].value = $event),\n        placeholder: \"Buscar...\"\n      }, null, 8\n      /* PROPS */\n      , [\"modelValue\"])])])]),\n      empty: _withCtx(() => [_hoisted_5]),\n      loading: _withCtx(() => [_hoisted_6]),\n      default: _withCtx(() => [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($props.columns, column => {\n        return _openBlock(), _createBlock(_component_p_column, {\n          field: column.field,\n          header: column.title,\n          key: column.field,\n          ref_for: true,\n          ref: column.field,\n          sortable: true\n        }, {\n          filter: _withCtx(({\n            filterModel,\n            filterCallback\n          }) => [_createVNode(_component_p58inputText, {\n            type: \"text\",\n            modelValue: filterModel.value,\n            \"onUpdate:modelValue\": $event => filterModel.value = $event,\n            onKeyup: $event => filterCallback(),\n            class: \"p-column-filter\",\n            placeholder: 'Buscar por ' + column.title\n          }, null, 8\n          /* PROPS */\n          , [\"modelValue\", \"onUpdate:modelValue\", \"onKeyup\", \"placeholder\"])]),\n          _: 2\n          /* DYNAMIC */\n\n        }, 1032\n        /* PROPS, DYNAMIC_SLOTS */\n        , [\"field\", \"header\"]);\n      }), 128\n      /* KEYED_FRAGMENT */\n      ))]),\n      _: 1\n      /* STABLE */\n\n    }, 8\n    /* PROPS */\n    , [\"value\", \"selection\", \"onRowClick\", \"globalFilterFields\", \"filters\"])]),\n    _: 1\n    /* STABLE */\n\n  }, 8\n  /* PROPS */\n  , [\"header\"])]), _createVNode(_component_p_panel, {\n    style: {\n      \"margin-bottom\": \"20px\",\n      \"margin\": \"0 auto\",\n      \"width\": \"80%\"\n    }\n  }, {\n    default: _withCtx(() => [_createElementVNode(\"div\", _hoisted_7, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($props.crudInputs, (input, index) => {\n      return _openBlock(), _createElementBlock(\"div\", {\n        key: index,\n        style: {\n          \"display\": \"inline-block\",\n          \"margin-right\": \"10px\",\n          \"vertical-align\": \"middle\"\n        }\n      }, [_createElementVNode(\"label\", {\n        for: input.value,\n        style: {\n          \"display\": \"block\"\n        }\n      }, _toDisplayString(input.label), 9\n      /* TEXT, PROPS */\n      , _hoisted_8), input.component !== 'ZDialog' ? (_openBlock(), _createBlock(_resolveDynamicComponent(input.component), {\n        key: 0,\n        options: input.options,\n        \"option-label\": option => option.label,\n        \"option-value\": option => option.value,\n        modelValue: $data.localEditedRow[input.value],\n        \"onUpdate:modelValue\": $event => $data.localEditedRow[input.value] = $event,\n        style: {\n          \"width\": \"200px\"\n        }\n      }, null, 8\n      /* PROPS */\n      , [\"options\", \"option-label\", \"option-value\", \"modelValue\", \"onUpdate:modelValue\"])) : (_openBlock(), _createBlock(_component_ZDialog, {\n        key: 1,\n        data: input.zDialogData,\n        columns: input.zDialogColumns,\n        labelDialogButton: input.localLabelDialogButton,\n        header: input.header,\n        onElementosSeleccionados: $options.onElementosSeleccionados,\n        idDialog: input.id\n      }, null, 8\n      /* PROPS */\n      , [\"data\", \"columns\", \"labelDialogButton\", \"header\", \"onElementosSeleccionados\", \"idDialog\"]))]);\n    }), 128\n    /* KEYED_FRAGMENT */\n    ))])]),\n    _: 1\n    /* STABLE */\n\n  }), _createVNode(_component_p_panel, {\n    style: {\n      \"margin-bottom\": \"20px\",\n      \"margin\": \"0 auto\",\n      \"width\": \"80%\"\n    }\n  }, {\n    default: _withCtx(() => [_createElementVNode(\"div\", _hoisted_9, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($props.crudButtons, (input, index) => {\n      return _openBlock(), _createElementBlock(\"div\", {\n        key: index,\n        style: {\n          \"display\": \"inline-block\",\n          \"margin-right\": \"10px\",\n          \"vertical-align\": \"middle\"\n        }\n      }, [_createVNode(_component_p58commandButton, {\n        is: input.component,\n        label: input.label,\n        onClick: $event => $options.onClick(input.onClick, () => _ctx.$emit(input.onClick)),\n        class: _normalizeClass(input.className),\n        icon: input.icon\n      }, null, 8\n      /* PROPS */\n      , [\"is\", \"label\", \"onClick\", \"class\", \"icon\"])]);\n    }), 128\n    /* KEYED_FRAGMENT */\n    ))])]),\n    _: 1\n    /* STABLE */\n\n  }), _createElementVNode(\"h2\", null, [_createElementVNode(\"p\", null, \"El valor del estado seleccionado es: \" + _toDisplayString($data.localEditedRow[\"estadoUno\"]), 1\n  /* TEXT */\n  ), _createElementVNode(\"p\", null, \"El valor del producto seleccionado es: \" + _toDisplayString($data.localEditedRow[\"producto\"]), 1\n  /* TEXT */\n  ), _createElementVNode(\"p\", null, \"El valor de los productos seleccionados es: \" + _toDisplayString($data.localEditedRow[\"productos\"]), 1\n  /* TEXT */\n  ), _createElementVNode(\"p\", null, \"El valor del nombre es: \" + _toDisplayString($data.localEditedRow[\"name\"]), 1\n  /* TEXT */\n  ), _createElementVNode(\"p\", null, \"El valor del m√©todo de pago es: \" + _toDisplayString($data.localEditedRow[\"metodoDePago\"]), 1\n  /* TEXT */\n  )])], 64\n  /* STABLE_FRAGMENT */\n  );\n}","map":{"version":3,"mappings":"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","names":["style","class","_createElementVNode","_createVNode","_component_p_panel","header","$props","_component_p58dataTable","value","_ctx","paginator","rows","selection","$data","$event","onRowClick","$options","selectionMode","dataKey","paginatorTemplate","rowsPerPageOptions","responsiveLayout","filterDisplay","globalFilterFields","filters","currentPageReportTemplate","_hoisted_4","_component_p58inputText","placeholder","empty","loading","_createElementBlock","_Fragment","_renderList","column","_createBlock","_component_p_column","field","title","key","ref","sortable","filter","filterModel","filterCallback","type","onKeyup","input","index","for","label","_hoisted_8","component","_resolveDynamicComponent","options","option","_component_ZDialog","data","zDialogData","columns","zDialogColumns","labelDialogButton","localLabelDialogButton","onElementosSeleccionados","idDialog","id","_component_p58commandButton","is","onClick","className","icon","_toDisplayString"],"sourceRoot":"","sources":["C:\\Users\\emalc\\OneDrive\\Escritorio\\CRUD_keycloak_primeVue\\keycloak-workshop\\frontend-vuejs\\src\\componentes\\GenericCRUD.vue"],"sourcesContent":["<template>\r\n    <div style=\"margin: 0 auto; width: 80%\">\r\n        <p_panel :header=\"header\">\r\n            <p:dataTable :value=\"data\" :paginator=\"true\" :rows=\"10\" v-model:selection=\"selectedRow\"\r\n                class=\"p-datatable-pedidos\" @row-click=\"onRowSelect\" selectionMode=\"single\" dataKey=\"id\"\r\n                paginatorTemplate=\"CurrentPageReport FirstPageLink PrevPageLink PageLinks NextPageLink LastPageLink RowsPerPageDropdown\"\r\n                :rowsPerPageOptions=\"[10, 20, 50]\" responsiveLayout=\"scroll\" filterDisplay=\"row\"\r\n                :globalFilterFields=\"globalFilterFields\" v-model:filters=\"filters\"\r\n                currentPageReportTemplate=\"Mostrando {first} a {last} de {totalRecords}\">\r\n                <template #header>\r\n                    <div class=\"flex justify-content-end\">\r\n                        <span class=\"p-input-icon-left \">\r\n                            <i class=\"pi pi-search\" />\r\n                            <p:inputText v-model=\"filters['global'].value\" placeholder=\"Buscar...\" />\r\n                        </span>\r\n                    </div>\r\n                </template>\r\n                <template #empty>\r\n                    No hay elementos disponibles.\r\n                </template>\r\n                <template #loading>\r\n                    Cargando elementos. Por favor, espera.\r\n                </template>\r\n                <p_column v-for=\"column in columns\" :field=\"column.field\" :header=\"column.title\" :key=\"column.field\"\r\n                    :ref=\"column.field\" :sortable=\"true\">\r\n                    <template #filter=\"{ filterModel, filterCallback }\">\r\n                        <p:inputText type=\"text\" v-model=\"filterModel.value\" @keyup=\"filterCallback()\"\r\n                            class=\"p-column-filter\" :placeholder=\"'Buscar por ' + column.title\" />\r\n                    </template>\r\n                </p_column>\r\n\r\n            </p:dataTable>\r\n        </p_panel>\r\n    </div>\r\n    <p_panel style=\"margin-bottom: 20px;margin: 0 auto; width: 80%\">\r\n        <div class=\"panel-flex\" style=\"margin-bottom: 20px;margin: 0 auto; width: 80%\">\r\n            <div v-for=\"(input, index) in crudInputs\" :key=\"index\"\r\n                style=\"display: inline-block; margin-right: 10px; vertical-align: middle;\">\r\n                <label :for=\"input.value\" style=\"display: block;\">{{ input.label }}</label>\r\n                <component v-if=\"input.component !== 'ZDialog'\" :is=\"input.component\" :options=\"input.options\"\r\n                    :option-label=\"(option) => option.label\" :option-value=\"(option) => option.value\"\r\n                    v-model=\"localEditedRow[input.value]\" style=\"width: 200px;\">\r\n                </component>\r\n                <ZDialog v-else :data=\"input.zDialogData\" :columns=\"input.zDialogColumns\"\r\n                    :labelDialogButton=\"input.localLabelDialogButton\" :header=\"input.header\"\r\n                    @elementosSeleccionados=\"onElementosSeleccionados\" :idDialog=\"input.id\">\r\n                </ZDialog>\r\n\r\n\r\n\r\n            </div>\r\n\r\n        </div>\r\n    </p_panel>\r\n    <p_panel style=\"margin-bottom: 20px;margin: 0 auto; width: 80%\">\r\n        <div class=\"center-buttons\" style=\"margin: 0 auto; width: 80%; text-align: center;\">\r\n            <div v-for=\"(input, index) in crudButtons\" :key=\"index\"\r\n                style=\"display: inline-block; margin-right: 10px; vertical-align: middle;\">\r\n                <p:commandButton :is=\"input.component\" :label=\"input.label\"\r\n                    @click=\"onClick(input.onClick, () => $emit(input.onClick))\" :class=\"input.className\" :icon=\"input.icon\">\r\n                </p:commandButton>\r\n            </div>\r\n\r\n        </div>\r\n    </p_panel>\r\n\r\n\r\n    <h2>\r\n        <p>El valor del estado seleccionado es: {{ localEditedRow[\"estadoUno\"] }}</p>\r\n        <p>El valor del producto seleccionado es: {{ localEditedRow[\"producto\"] }}</p>\r\n        <p>El valor de los productos seleccionados es: {{ localEditedRow[\"productos\"] }}</p>\r\n        <p>El valor del nombre es: {{ localEditedRow[\"name\"] }}</p>\r\n\r\n        <p>El valor del m√©todo de pago es: {{ localEditedRow[\"metodoDePago\"] }}</p>\r\n\r\n\r\n    </h2>\r\n</template>\r\n  \r\n<script>\r\nimport { FilterMatchMode } from 'primevue/api';\r\nimport { mapGetters } from 'vuex';\r\nimport axios from \"axios\";\r\nimport ZDialog from './ZDialog.vue';\r\nimport PedidoService from '@/service/PedidoService';\r\nexport default {\r\n\r\n    props: {\r\n        columns: {\r\n            type: Array,\r\n            required: true\r\n        },\r\n        list: {\r\n            type: Array,\r\n            required: true\r\n        },\r\n\r\n        header: {\r\n            type: String,\r\n            default: \"Lista de elementos\"\r\n        },\r\n        editedRow: {\r\n            type: Object,\r\n            default: null\r\n        },\r\n        crudInputs: {\r\n            type: Object,\r\n            default: function () {\r\n                return {}\r\n            }\r\n        },\r\n        crudButtons: {\r\n            type: Array,\r\n            required: true\r\n        },\r\n\r\n        beforeInsert: {\r\n            type: Function,\r\n            required: true,\r\n        },\r\n        service: {\r\n            type: Object,\r\n            required: true\r\n        }\r\n\r\n\r\n\r\n\r\n    },\r\n    components: {\r\n        ZDialog,\r\n\r\n    },\r\n    emits: ['elementosSeleccionados', 'save'],\r\n    data() {\r\n\r\n        return {\r\n            filters: {},\r\n            selectedRow: null,\r\n            localEditedRow: Object.assign({}, this.editedRow),\r\n            optionsData: [],\r\n            customValueInput: null,\r\n            localLabelDialogButton: null,\r\n            isDisabled: true,\r\n            localList: [],\r\n\r\n\r\n\r\n        }\r\n\r\n    },\r\n    beforeCreate() {\r\n        this.pedidoService = new PedidoService();\r\n    },\r\n    watch: {\r\n        editedRow: {\r\n            handler: function (newVal) {\r\n                this.localEditedRow = Object.assign({}, newVal);\r\n            },\r\n            deep: true\r\n        },\r\n        labelDialogButton: {\r\n            handler: function (newVal) {\r\n                this.localLabelDialogButton = Object.assign({}, newVal);\r\n            },\r\n            deep: true\r\n        },\r\n\r\n\r\n\r\n    }\r\n    ,\r\n    computed: {\r\n        globalFilterFields() {\r\n            return [\r\n                'global',\r\n                ...this.columns.map((column) => column.field)\r\n            ];\r\n        },\r\n        currentPageReportTemplate() {\r\n            return `Mostrando {first} a {last} de ${this.data.length} pedidos`;\r\n        },\r\n        currentSelection() {\r\n            return this.selectedRow[0] || {};\r\n        },\r\n        ...mapGetters({\r\n            username: 'username',\r\n            keycloakToken: 'keycloakToken',\r\n            keycloakTokenParsed: 'keycloakTokenParsed',\r\n            axiosConfig: 'axiosConfig',\r\n            roles: 'roles',\r\n        }),\r\n        getValue() {\r\n            return (value) => this.localEditedRow[value];\r\n        }\r\n\r\n    },\r\n    async created() {\r\n        console.log(\"created\");\r\n        this.initFilters();\r\n    },\r\n    mounted() {\r\n        // Recorre los inputs y si existe pathList, realiza una solicitud GET para obtener las opciones del selectOneMenu\r\n        this.crudInputs.forEach(async (input) => {\r\n            if (input.component.includes('select') && input.pathList) {\r\n                const response = await axios.get(input.pathList, this.axiosConfig);\r\n                const parsedData = response.data;\r\n                input.options = parsedData.map((item) => ({\r\n                    label: item.nombre,\r\n                    value: item,\r\n                }));\r\n            } else if (input.component.includes('ZDialog') && input.pathList) {\r\n                const response = await axios.get(input.pathList, this.axiosConfig);\r\n                input.zDialogData = response.data;\r\n                console.log(input.zDialogData);\r\n            }\r\n        });\r\n    },\r\n    methods: {\r\n        onRowSelect(event) {\r\n            this.localEditedRow = Object.assign({}, event.data);\r\n        },\r\n        initFilters() {\r\n            const filters = {\r\n                'global': { value: null, matchMode: FilterMatchMode.CONTAINS }\r\n            };\r\n            this.columns.forEach((column) => {\r\n                filters[column.field] = {\r\n                    value: null,\r\n                    matchMode: FilterMatchMode.CONTAINS\r\n                };\r\n            });\r\n            this.filters = filters;\r\n        },\r\n        updateLocalEditedRow(value, key) {\r\n            this.$set(this.localEditedRow, key, value);\r\n        },\r\n        loadLazyData() {\r\n            this.loading = true;\r\n\r\n            setTimeout(() => {\r\n                this.customerService.getCustomers(\r\n                    { lazyEvent: JSON.stringify(this.lazyParams) })\r\n                    .then(data => {\r\n                        this.customers = data.customers;\r\n                        this.totalRecords = data.totalRecords;\r\n                        this.loading = false;\r\n                    }\r\n                    );\r\n            }, Math.random() * 1000 + 250);\r\n        },\r\n        onElementosSeleccionados(elementosSeleccionados, idDialog) {\r\n\r\n            this.$emit('elementosSeleccionados', elementosSeleccionados, idDialog, this.localEditedRow);\r\n\r\n        },\r\n        onClick(action, callback) {\r\n            if (action === 'save') {\r\n                console.log('onClick del hijo antes de llamar al beforesave del padre');\r\n                this.beforeInsert(() => {\r\n                    console.log('beforeInsert callback del hijo');\r\n                    callback();\r\n                });\r\n                this.save();\r\n            } else {\r\n                // l√≥gica para otros botones\r\n            }\r\n        },\r\n        save() {\r\n\r\n            try {\r\n                this.service.save(this.localEditedRow, this.axiosConfig).then(() => {\r\n                    this.$toast.add({\r\n                        severity: 'success',\r\n                        summary: 'Guardando',\r\n                        detail: 'REGISTRO CREADO CORRECTAMENTE. GUARDADO EN BASE DE DATOS',\r\n                        life: 3000\r\n                    });\r\n                    this.getAll();\r\n                    this.isDisabled = true;\r\n                }).catch((error) => {\r\n                    console.log('primer catch');\r\n                    console.log(error);\r\n                    if (error.response.status === 400) {\r\n                        const errorMessage = error.response.data;\r\n                        this.$toast.add({\r\n                            severity: 'error',\r\n                            summary: 'Error',\r\n                            detail: errorMessage,\r\n                            life: 3000\r\n                        });\r\n                    }\r\n                });\r\n            } catch (error) {\r\n                console.log('segundo catch');\r\n                console.log(error);\r\n                this.$toast.add({\r\n                    severity: 'error',\r\n                    summary: 'Error',\r\n                    detail: 'No se pudo guardar el registro. Por favor, int√©ntalo de nuevo m√°s tarde.',\r\n                    life: 3000\r\n                });\r\n            }\r\n        },\r\n        create() {\r\n            this.isDisabled = false;\r\n            console.log('Hola create')\r\n            this.localEditedRow = {\r\n                id: null,\r\n                estado: null,\r\n                productos: null,\r\n                precioTotal: null,\r\n                direccionEnvio: null,\r\n                metodoDePago: null,\r\n                numSeguimiento: null,\r\n                observaciones: null,\r\n            };\r\n\r\n        },\r\n        remove() {\r\n            try {\r\n                this.pedidoService.remove(this.editedRow.id, this.axiosConfig).then(() => {\r\n                    this.$toast.add({ severity: 'success', summary: 'Eliminando', detail: 'REGISTRO ELIMINADO CORRECTAMENTE. BORRADO EN BASE DE DATOS', life: 3000 })\r\n                    this.getAll();\r\n                    this.isDisabled = true;\r\n                });\r\n            } catch (error) {\r\n                this.$toast.add({ severity: 'error', summary: 'Error', detail: 'No se pudo eliminar el registro. Por favor, int√©ntalo de nuevo m√°s tarde.', life: 3000 });\r\n            }\r\n        },\r\n        getAll() {\r\n            this.service.getAll(this.axiosConfig).then(response => {\r\n                this.data = response.data;\r\n            });\r\n        },\r\n\r\n\r\n    }\r\n}\r\n</script>\r\n  \r\n\r\n<style lang=\"scss\" scoped>\r\n::v-deep(.p-datatable.p-datatable-pedidos) {\r\n    .p-datatable-header {\r\n        padding: 1rem;\r\n        text-align: left;\r\n        font-size: 1.5rem;\r\n    }\r\n\r\n    .p-paginator {\r\n        padding: 1rem;\r\n    }\r\n\r\n    .p-datatable-thead>tr>th {\r\n        text-align: left;\r\n    }\r\n\r\n    .p-datatable-tbody>tr>td {\r\n        cursor: auto;\r\n    }\r\n\r\n    .p-dropdown-label:not(.p-placeholder) {\r\n        text-transform: uppercase;\r\n    }\r\n}\r\n\r\n.panel-flex {\r\n    display: flex;\r\n    flex-wrap: wrap;\r\n    justify-content: flex-start;\r\n    align-items: flex-start;\r\n}\r\n\r\n.panel-flex>div {\r\n    flex-basis: calc(25% - 10px);\r\n    margin-right: 10px;\r\n    margin-bottom: 20px;\r\n}\r\n</style>"]},"metadata":{},"sourceType":"module"}