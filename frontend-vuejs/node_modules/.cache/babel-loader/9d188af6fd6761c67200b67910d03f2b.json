{"ast":null,"code":"import { mapGetters } from 'vuex';\nimport ProductoService from '@/service/ProductoService';\nexport default {\n  name: 'CrudApp',\n\n  data() {\n    return {\n      productos: [],\n      items: [{\n        label: 'Nuevo',\n        icon: 'pi pi-fw pi-plus',\n        command: () => {}\n      }],\n      editedRow: {\n        id: null,\n        nombre: null,\n        descripcion: null,\n        precio: null\n      }\n    };\n  },\n\n  productoService: null,\n\n  created() {\n    this.productoService = new ProductoService();\n  },\n\n  computed: { ...mapGetters({\n      username: 'username',\n      keycloakToken: 'keycloakToken',\n      keycloakTokenParsed: 'keycloakTokenParsed',\n      axiosConfig: 'axiosConfig'\n    })\n  },\n  watch: {\n    keycloakToken: function (val) {\n      if (val) {\n        this.productoService.getAll(this.axiosConfig).then(response => {\n          this.productos = response.data;\n        });\n      }\n    }\n  },\n  methods: {\n    save() {\n      alert('saved!!');\n    }\n\n  }\n};","map":{"version":3,"mappings":"AAyBA,SAASA,UAAT,QAA2B,MAA3B;AACA,OAAOC,eAAP,MAA4B,2BAA5B;AAEA,eAAe;AACbC,MAAI,EAAE,SADO;;AAEbC,MAAI,GAAG;AACL,WAAO;AACLC,eAAS,EAAE,EADN;AAELC,WAAK,EAAE,CACL;AACEC,aAAK,EAAE,OADT;AAEEC,YAAI,EAAE,kBAFR;AAGEC,eAAO,EAAE,MAAM,CAEf;AALF,OADK,CAFF;AAWLC,eAAS,EAAE;AACTC,UAAE,EAAE,IADK;AAETC,cAAM,EAAE,IAFC;AAGTC,mBAAW,EAAE,IAHJ;AAITC,cAAM,EAAE;AAJC;AAXN,KAAP;AAmBD,GAtBY;;AAuBbC,iBAAe,EAAE,IAvBJ;;AAwBbC,SAAO,GAAG;AACR,SAAKD,eAAL,GAAuB,IAAIb,eAAJ,EAAvB;AACD,GA1BY;;AA2Bbe,UAAQ,EAAE,EACR,GAAGhB,UAAU,CAAC;AACZiB,cAAQ,EAAE,UADE;AAEZC,mBAAa,EAAE,eAFH;AAGZC,yBAAmB,EAAE,qBAHT;AAIZC,iBAAW,EAAE;AAJD,KAAD;AADL,GA3BG;AAmCbC,OAAK,EAAE;AACLH,iBAAa,EAAE,UAAUI,GAAV,EAAe;AAC5B,UAAIA,GAAJ,EAAS;AAEP,aAAKR,eAAL,CAAqBS,MAArB,CAA4B,KAAKH,WAAjC,EAA8CI,IAA9C,CAAmDC,QAAO,IAAK;AAC7D,eAAKrB,SAAL,GAAiBqB,QAAQ,CAACtB,IAA1B;AACD,SAFD;AAGF;AACF;AARK,GAnCM;AA6CbuB,SAAO,EAAE;AAEPC,QAAI,GAAG;AACLC,WAAK,CAAC,SAAD,CAAL;AAEF;;AALO;AA7CI,CAAf","names":["mapGetters","ProductoService","name","data","productos","items","label","icon","command","editedRow","id","nombre","descripcion","precio","productoService","created","computed","username","keycloakToken","keycloakTokenParsed","axiosConfig","watch","val","getAll","then","response","methods","save","alert"],"sourceRoot":"","sources":["C:\\Users\\emalc\\OneDrive\\Escritorio\\CRUD_keycloak_primeVue\\keycloak-workshop\\frontend-vuejs\\src\\componentes\\ProductoDatatable.vue"],"sourcesContent":["<template>\r\n  <div style=\"margin: 0 auto; width: 80%\">\r\n\r\n    <p_panel header=\"Lista de Personas\">\r\n      <p:dataTable :value=\"productos\" :paginator=\"true\" :rows=\"10\"\r\n        paginatorTemplate=\"CurrentPageReport FirstPageLink PrevPageLink PageLinks NextPageLink LastPageLink RowsPerPageDropdown\"\r\n        :rowsPerPageOptions=\"[10, 20, 50]\" responsiveLayout=\"scroll\"\r\n        currentPageReportTemplate=\"Mostrando {first} a {last} de {totalRecords}\">\r\n        <p_column field=\"nombre\" header=\"Nombre\"></p_column>\r\n        <p_column field=\"descripcion\" header=\"DescripciÃ³n\"></p_column>\r\n        <p_column field=\"precio\" header=\"precio\"></p_column>\r\n        <template #paginatorstart>\r\n          <p:commandButton type=\"button\" icon=\"pi pi-refresh\" class=\"p-button-text\" />\r\n        </template>\r\n        <template #paginatorend>\r\n          <p:commandButton type=\"button\" icon=\"pi pi-cloud\" class=\"p-button-text\" />\r\n        </template>\r\n      </p:dataTable>\r\n    </p_panel>\r\n  </div>\r\n\r\n</template>\r\n\r\n<script>\r\n\r\nimport { mapGetters } from 'vuex';\r\nimport ProductoService from '@/service/ProductoService';\r\n\r\nexport default {\r\n  name: 'CrudApp',\r\n  data() {\r\n    return {\r\n      productos: [],\r\n      items: [\r\n        {\r\n          label: 'Nuevo',\r\n          icon: 'pi pi-fw pi-plus',\r\n          command: () => {\r\n\r\n          }\r\n\r\n        }],\r\n      editedRow: {\r\n        id: null,\r\n        nombre: null,\r\n        descripcion: null,\r\n        precio: null\r\n      }\r\n    }\r\n\r\n  },\r\n  productoService: null,\r\n  created() {\r\n    this.productoService = new ProductoService();\r\n  },\r\n  computed: {\r\n    ...mapGetters({\r\n      username: 'username',\r\n      keycloakToken: 'keycloakToken',\r\n      keycloakTokenParsed: 'keycloakTokenParsed',\r\n      axiosConfig: 'axiosConfig'\r\n    })\r\n  },\r\n  watch: {\r\n    keycloakToken: function (val) {\r\n      if (val) {\r\n\r\n        this.productoService.getAll(this.axiosConfig).then(response => {\r\n          this.productos = response.data;\r\n        });\r\n      }\r\n    }\r\n  },\r\n  methods: {\r\n\r\n    save() {\r\n      alert('saved!!')\r\n\r\n    }\r\n\r\n\r\n  }\r\n\r\n\r\n}\r\n\r\n</script>\r\n\r\n<style>\r\n\r\n</style>"]},"metadata":{},"sourceType":"module"}