{"ast":null,"code":"import { resolveComponent as _resolveComponent, createVNode as _createVNode, withCtx as _withCtx, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = {\n  style: {\n    \"margin\": \"0 auto\",\n    \"width\": \"80%\"\n  }\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_p_column = _resolveComponent(\"p_column\");\n\n  const _component_p58commandButton = _resolveComponent(\"p:commandButton\");\n\n  const _component_p58dataTable = _resolveComponent(\"p:dataTable\");\n\n  const _component_p_panel = _resolveComponent(\"p_panel\");\n\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createVNode(_component_p_panel, {\n    header: \"Lista de Personas\"\n  }, {\n    default: _withCtx(() => [_createVNode(_component_p58dataTable, {\n      value: $data.productos,\n      paginator: true,\n      rows: 10,\n      paginatorTemplate: \"CurrentPageReport FirstPageLink PrevPageLink PageLinks NextPageLink LastPageLink RowsPerPageDropdown\",\n      rowsPerPageOptions: [10, 20, 50],\n      responsiveLayout: \"scroll\",\n      currentPageReportTemplate: \"Mostrando {first} a {last} de {totalRecords}\"\n    }, {\n      paginatorstart: _withCtx(() => [_createVNode(_component_p58commandButton, {\n        type: \"button\",\n        icon: \"pi pi-refresh\",\n        class: \"p-button-text\"\n      })]),\n      paginatorend: _withCtx(() => [_createVNode(_component_p58commandButton, {\n        type: \"button\",\n        icon: \"pi pi-cloud\",\n        class: \"p-button-text\"\n      })]),\n      default: _withCtx(() => [_createVNode(_component_p_column, {\n        field: \"nombre\",\n        header: \"Nombre\"\n      }), _createVNode(_component_p_column, {\n        field: \"descripcion\",\n        header: \"Descripción\"\n      }), _createVNode(_component_p_column, {\n        field: \"precio\",\n        header: \"precio\"\n      })]),\n      _: 1\n      /* STABLE */\n\n    }, 8\n    /* PROPS */\n    , [\"value\"])]),\n    _: 1\n    /* STABLE */\n\n  })]);\n}","map":{"version":3,"mappings":";;AACOA,OAAkC,EAAlC;AAAA;AAAA;AAAA;;;;;;;;;;;uBAALC,oBAkBM,KAlBN,cAkBM,CAhBJC,aAeUC,kBAfV,EAeU;AAfDC,UAAM,EAAC;AAeN,GAfV,EAAmC;sBACjC,MAac,CAbdF,aAacG,uBAbd,EAac;AAbAC,WAAK,EAAEC,eAaP;AAbmBC,eAAS,EAAE,IAa9B;AAbqCC,UAAI,EAAE,EAa3C;AAZZC,uBAAiB,EAAC,sGAYN;AAXXC,wBAAkB,EAAE,YAWT;AAXuBC,sBAAgB,EAAC,QAWxC;AAVZC,+BAAyB,EAAC;AAUd,KAbd;AAOaC,oBAAc,WACvB,MAA4E,CAA5EZ,aAA4Ea,2BAA5E,EAA4E;AAA3DC,YAAI,EAAC,QAAsD;AAA7CC,YAAI,EAAC,eAAwC;AAAxBC,aAAK,EAAC;AAAkB,OAA5E,CAA4E,CADrD;AAGdC,kBAAY,WACrB,MAA0E,CAA1EjB,aAA0Ea,2BAA1E,EAA0E;AAAzDC,YAAI,EAAC,QAAoD;AAA3CC,YAAI,EAAC,aAAsC;AAAxBC,aAAK,EAAC;AAAkB,OAA1E,CAA0E,CADrD;wBANvB,MAAoD,CAApDhB,aAAoDkB,mBAApD,EAAoD;AAA1CC,aAAK,EAAC,QAAoC;AAA3BjB,cAAM,EAAC;AAAoB,OAApD,CAAoD,EACpDF,aAA8DkB,mBAA9D,EAA8D;AAApDC,aAAK,EAAC,aAA8C;AAAhCjB,cAAM,EAAC;AAAyB,OAA9D,CADoD,EAEpDF,aAAoDkB,mBAApD,EAAoD;AAA1CC,aAAK,EAAC,QAAoC;AAA3BjB,cAAM,EAAC;AAAoB,OAApD,CAFoD;;;;KAJtD;;AAAA,gBAac,EAdmB;;;;AAAA,GAAnC,CAgBI,CAlBN","names":["style","_createElementBlock","_createVNode","_component_p_panel","header","_component_p58dataTable","value","$data","paginator","rows","paginatorTemplate","rowsPerPageOptions","responsiveLayout","currentPageReportTemplate","paginatorstart","_component_p58commandButton","type","icon","class","paginatorend","_component_p_column","field"],"sourceRoot":"","sources":["C:\\Users\\emalc\\OneDrive\\Escritorio\\CRUD_keycloak_primeVue\\keycloak-workshop\\frontend-vuejs\\src\\componentes\\CrudApp.vue"],"sourcesContent":["<template>\r\n  <div style=\"margin: 0 auto; width: 80%\">\r\n\r\n    <p_panel header=\"Lista de Personas\">\r\n      <p:dataTable :value=\"productos\" :paginator=\"true\" :rows=\"10\"\r\n        paginatorTemplate=\"CurrentPageReport FirstPageLink PrevPageLink PageLinks NextPageLink LastPageLink RowsPerPageDropdown\"\r\n        :rowsPerPageOptions=\"[10, 20, 50]\" responsiveLayout=\"scroll\"\r\n        currentPageReportTemplate=\"Mostrando {first} a {last} de {totalRecords}\">\r\n        <p_column field=\"nombre\" header=\"Nombre\"></p_column>\r\n        <p_column field=\"descripcion\" header=\"Descripción\"></p_column>\r\n        <p_column field=\"precio\" header=\"precio\"></p_column>\r\n        <template #paginatorstart>\r\n          <p:commandButton type=\"button\" icon=\"pi pi-refresh\" class=\"p-button-text\" />\r\n        </template>\r\n        <template #paginatorend>\r\n          <p:commandButton type=\"button\" icon=\"pi pi-cloud\" class=\"p-button-text\" />\r\n        </template>\r\n      </p:dataTable>\r\n    </p_panel>\r\n  </div>\r\n\r\n</template>\r\n<PanelApp /> \r\n<script>\r\n\r\nimport { mapGetters } from 'vuex';\r\nimport ProductoService from '@/service/ProductoService';\r\nexport default {\r\n  name: 'CrudApp',\r\n  data() {\r\n    return {\r\n      productos: [],\r\n      editedRow: {\r\n        id: null,\r\n        nombre: null,\r\n        descripcion: null,\r\n        precio: null\r\n      }\r\n    }\r\n\r\n  },\r\n  productoService: null,\r\n  created() {\r\n    this.productoService = new ProductoService();\r\n  },\r\n  computed: {\r\n    ...mapGetters({\r\n      username: 'username',\r\n      keycloakToken: 'keycloakToken',\r\n      keycloakTokenParsed: 'keycloakTokenParsed',\r\n      axiosConfig: 'axiosConfig'\r\n    })\r\n  },\r\n  mounted: {\r\n\r\n\r\n    if(val) {\r\n      this.productoService.getAll(this.axiosConfig).then(response => {\r\n        this.productos = response.data;\r\n      });\r\n\r\n\r\n    }\r\n\r\n  },\r\n  methods: {\r\n\r\n\r\n  }\r\n\r\n\r\n}\r\n\r\n</script>\r\n\r\n<style>\r\n\r\n</style>"]},"metadata":{},"sourceType":"module"}