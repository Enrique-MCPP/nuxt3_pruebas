{"ast":null,"code":"import { openBlock, createElementBlock, normalizeClass } from 'vue';\nvar script = {\n  name: 'Textarea',\n  emits: ['update:modelValue'],\n  props: {\n    modelValue: null,\n    autoResize: Boolean\n  },\n\n  mounted() {\n    if (this.$el.offsetParent && this.autoResize) {\n      this.resize();\n    }\n  },\n\n  updated() {\n    if (this.$el.offsetParent && this.autoResize) {\n      this.resize();\n    }\n  },\n\n  methods: {\n    resize() {\n      const style = window.getComputedStyle(this.$el);\n      this.$el.style.height = 'auto';\n      this.$el.style.height = `calc(${style.borderTopWidth} + ${style.borderBottomWidth} + ${this.$el.scrollHeight}px)`;\n\n      if (parseFloat(this.$el.style.height) >= parseFloat(this.$el.style.maxHeight)) {\n        this.$el.style.overflowY = 'scroll';\n        this.$el.style.height = this.$el.style.maxHeight;\n      } else {\n        this.$el.style.overflow = 'hidden';\n      }\n    },\n\n    onInput(event) {\n      if (this.autoResize) {\n        this.resize();\n      }\n\n      this.$emit('update:modelValue', event.target.value);\n    }\n\n  },\n  computed: {\n    filled() {\n      return this.modelValue != null && this.modelValue.toString().length > 0;\n    }\n\n  }\n};\nconst _hoisted_1 = [\"value\"];\n\nfunction render(_ctx, _cache, $props, $setup, $data, $options) {\n  return openBlock(), createElementBlock(\"textarea\", {\n    class: normalizeClass(['p-inputtextarea p-inputtext p-component', {\n      'p-filled': $options.filled,\n      'p-inputtextarea-resizable ': $props.autoResize\n    }]),\n    value: $props.modelValue,\n    onInput: _cache[0] || (_cache[0] = (...args) => $options.onInput && $options.onInput(...args))\n  }, null, 42, _hoisted_1);\n}\n\nfunction styleInject(css, ref) {\n  if (ref === void 0) ref = {};\n  var insertAt = ref.insertAt;\n\n  if (!css || typeof document === 'undefined') {\n    return;\n  }\n\n  var head = document.head || document.getElementsByTagName('head')[0];\n  var style = document.createElement('style');\n  style.type = 'text/css';\n\n  if (insertAt === 'top') {\n    if (head.firstChild) {\n      head.insertBefore(style, head.firstChild);\n    } else {\n      head.appendChild(style);\n    }\n  } else {\n    head.appendChild(style);\n  }\n\n  if (style.styleSheet) {\n    style.styleSheet.cssText = css;\n  } else {\n    style.appendChild(document.createTextNode(css));\n  }\n}\n\nvar css_248z = \"\\n.p-inputtextarea-resizable {\\n    overflow: hidden;\\n    resize: none;\\n}\\n.p-fluid .p-inputtextarea {\\n    width: 100%;\\n}\\n\";\nstyleInject(css_248z);\nscript.render = render;\nexport { script as default };","map":{"version":3,"sources":["C:/Users/emalc/OneDrive/Escritorio/CRUD_keycloak_primeVue/keycloak-workshop/frontend-vuejs/node_modules/primevue/textarea/textarea.esm.js"],"names":["openBlock","createElementBlock","normalizeClass","script","name","emits","props","modelValue","autoResize","Boolean","mounted","$el","offsetParent","resize","updated","methods","style","window","getComputedStyle","height","borderTopWidth","borderBottomWidth","scrollHeight","parseFloat","maxHeight","overflowY","overflow","onInput","event","$emit","target","value","computed","filled","toString","length","_hoisted_1","render","_ctx","_cache","$props","$setup","$data","$options","class","args","styleInject","css","ref","insertAt","document","head","getElementsByTagName","createElement","type","firstChild","insertBefore","appendChild","styleSheet","cssText","createTextNode","css_248z","default"],"mappings":"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","sourcesContent":["import { openBlock, createElementBlock, normalizeClass } from 'vue';\n\nvar script = {\n    name: 'Textarea',\n    emits: ['update:modelValue'],\n    props: {\n        modelValue: null,\n        autoResize: Boolean\n    },\n    mounted() {\n        if (this.$el.offsetParent && this.autoResize) {\n            this.resize();\n        }\n    },\n    updated() {\n        if (this.$el.offsetParent && this.autoResize) {\n            this.resize();\n        }\n    },\n    methods: {\n        resize() {\n            const style = window.getComputedStyle(this.$el);\n\n            this.$el.style.height = 'auto';\n            this.$el.style.height = `calc(${style.borderTopWidth} + ${style.borderBottomWidth} + ${this.$el.scrollHeight}px)`;\n\n            if (parseFloat(this.$el.style.height) >= parseFloat(this.$el.style.maxHeight)) {\n                this.$el.style.overflowY = 'scroll';\n                this.$el.style.height = this.$el.style.maxHeight;\n            } else {\n                this.$el.style.overflow = 'hidden';\n            }\n        },\n        onInput(event) {\n            if (this.autoResize) {\n                this.resize();\n            }\n\n            this.$emit('update:modelValue', event.target.value);\n        }\n    },\n    computed: {\n        filled() {\n            return this.modelValue != null && this.modelValue.toString().length > 0;\n        }\n    }\n};\n\nconst _hoisted_1 = [\"value\"];\n\nfunction render(_ctx, _cache, $props, $setup, $data, $options) {\n  return (openBlock(), createElementBlock(\"textarea\", {\n    class: normalizeClass(['p-inputtextarea p-inputtext p-component', { 'p-filled': $options.filled, 'p-inputtextarea-resizable ': $props.autoResize }]),\n    value: $props.modelValue,\n    onInput: _cache[0] || (_cache[0] = (...args) => ($options.onInput && $options.onInput(...args)))\n  }, null, 42, _hoisted_1))\n}\n\nfunction styleInject(css, ref) {\n  if ( ref === void 0 ) ref = {};\n  var insertAt = ref.insertAt;\n\n  if (!css || typeof document === 'undefined') { return; }\n\n  var head = document.head || document.getElementsByTagName('head')[0];\n  var style = document.createElement('style');\n  style.type = 'text/css';\n\n  if (insertAt === 'top') {\n    if (head.firstChild) {\n      head.insertBefore(style, head.firstChild);\n    } else {\n      head.appendChild(style);\n    }\n  } else {\n    head.appendChild(style);\n  }\n\n  if (style.styleSheet) {\n    style.styleSheet.cssText = css;\n  } else {\n    style.appendChild(document.createTextNode(css));\n  }\n}\n\nvar css_248z = \"\\n.p-inputtextarea-resizable {\\n    overflow: hidden;\\n    resize: none;\\n}\\n.p-fluid .p-inputtextarea {\\n    width: 100%;\\n}\\n\";\nstyleInject(css_248z);\n\nscript.render = render;\n\nexport { script as default };\n"]},"metadata":{},"sourceType":"module"}