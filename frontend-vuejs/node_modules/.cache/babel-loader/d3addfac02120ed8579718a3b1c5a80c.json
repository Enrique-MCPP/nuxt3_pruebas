{"ast":null,"code":"import { mapGetters } from 'vuex';\nexport default {\n  name: 'App',\n  components: {},\n\n  data() {\n    return {\n      backendToken: null\n    };\n  },\n\n  computed: { ...mapGetters({\n      username: 'username',\n      keycloakToken: 'keycloakToken',\n      keycloakTokenParsed: 'keycloakTokenParsed',\n      roles: 'roles'\n    })\n  },\n  methods: {\n    logout() {\n      this.emitter.emit('keycloak-logout');\n    },\n\n    getBackendTokenInfo() {\n      this.axios.get(\"http://localhost:9090/api/product/auth-token-info\");\n    },\n\n    filteredRoles() {\n      return this.roles.filter(role => !role.includes(\"offline_access\") && !role.includes(\"uma_authorization\") && !role.includes(\"default-roles-spring-boot-microservices-realm\"));\n    }\n\n  }\n};","map":{"version":3,"mappings":"AAqBA,SAASA,UAAT,QAA2B,MAA3B;AAIA,eAAe;AACbC,MAAI,EAAE,KADO;AAEbC,YAAU,EAAE,EAFC;;AAMbC,MAAI,GAAG;AACL,WAAO;AACLC,kBAAY,EAAE;AADT,KAAP;AAGD,GAVY;;AAWbC,UAAQ,EAAE,EACR,GAAGL,UAAU,CAAC;AACZM,cAAQ,EAAE,UADE;AAEZC,mBAAa,EAAE,eAFH;AAGZC,yBAAmB,EAAE,qBAHT;AAIZC,WAAK,EAAE;AAJK,KAAD;AADL,GAXG;AAmBbC,SAAO,EAAE;AACPC,UAAM,GAAG;AACP,WAAKC,OAAL,CAAaC,IAAb,CAAkB,iBAAlB;AACD,KAHM;;AAIPC,uBAAmB,GAAG;AAEpB,WAAKC,KAAL,CAAWC,GAAX,CAAe,mDAAf;AACD,KAPM;;AAQPC,iBAAa,GAAG;AACd,aAAO,KAAKR,KAAL,CAAWS,MAAX,CAAkBC,IAAG,IAAK,CAACA,IAAI,CAACC,QAAL,CAAc,gBAAd,CAAD,IAAoC,CAACD,IAAI,CAACC,QAAL,CAAc,mBAAd,CAArC,IAA2E,CAACD,IAAI,CAACC,QAAL,CAAc,+CAAd,CAAtG,CAAP;AACF;;AAVO;AAnBI,CAAf","names":["mapGetters","name","components","data","backendToken","computed","username","keycloakToken","keycloakTokenParsed","roles","methods","logout","emitter","emit","getBackendTokenInfo","axios","get","filteredRoles","filter","role","includes"],"sourceRoot":"","sources":["C:\\Users\\emalc\\OneDrive\\Escritorio\\CRUD_keycloak_primeVue\\keycloak-workshop\\frontend-vuejs\\src\\App.vue"],"sourcesContent":["<template>\r\n  <!--\r\n  <img alt=\"Vue logo\" src=\"./assets/logo.png\">\r\n  <h3>{{ 'username:' + username }}</h3>\r\n  <h1>Keycloak Token</h1>\r\n  <json-viewer :value=\"keycloakTokenParsed\" copyable boxed sort />\r\n  <h1>Backend Token</h1>\r\n  \r\n  <json-viewer :value=\"backendToken\" copyable boxed sort /> -->\r\n\r\n  <h3>{{ 'Usuario: ' + username }}</h3>\r\n  <h3>{{ 'Roles: ' + filteredRoles().join(', ') }}</h3>\r\n  <p:commandButton @click=\"getBackendTokenInfo\"></p:commandButton>\r\n  <p:commandButton @click=\"logout\"> Logout</p:commandButton>\r\n\r\n\r\n\r\n\r\n</template>\r\n\r\n<script>\r\nimport { mapGetters } from 'vuex'\r\n\r\n\r\n\r\nexport default {\r\n  name: 'App',\r\n  components: {\r\n\r\n\r\n  },\r\n  data() {\r\n    return {\r\n      backendToken: null,\r\n    }\r\n  },\r\n  computed: {\r\n    ...mapGetters({\r\n      username: 'username',\r\n      keycloakToken: 'keycloakToken',\r\n      keycloakTokenParsed: 'keycloakTokenParsed',\r\n      roles: 'roles',\r\n    })\r\n  },\r\n  methods: {\r\n    logout() {\r\n      this.emitter.emit('keycloak-logout')\r\n    },\r\n    getBackendTokenInfo() {\r\n  \r\n      this.axios.get(\"http://localhost:9090/api/product/auth-token-info\");\r\n    },\r\n    filteredRoles() {\r\n      return this.roles.filter(role => !role.includes(\"offline_access\") && !role.includes(\"uma_authorization\") && !role.includes(\"default-roles-spring-boot-microservices-realm\"));\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style>\r\n\r\n</style>"]},"metadata":{},"sourceType":"module"}